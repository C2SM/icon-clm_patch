From ee4605ba2627d6d11296bccd94d302274d2f7c01 Mon Sep 17 00:00:00 2001
From: Annika Lauber <annika.lauber@c2sm.ethz.ch>
Date: Tue, 24 Sep 2024 12:45:42 +0000
Subject: [PATCH 1/4] GPU port for transient aerosol datasets in ICON

See merge request icon/icon-nwp!1448

For the ICON-CLM setup, time-variant (transient) aerosols based on the Kinne dataset need to be ported to GPU. This affects the following namelist switches:
```
irad_aero=12 (iRadAeroConstKinne)
irad_aero=18 (iRadAeroKinneVolcSP)
irad_aero=19 (iRadAeroKinneSP)
```

In addition, the CLM experiment is set up to run on levante.

Approved-by: Marek Jacob <1129-b380572@users.noreply.gitlab.dkrz.de>
Merged-by: Daniel Rieger <daniel.rieger@dwd.de>
---
 config/dkrz/levante.cpu.nvhpc-22.5            |   2 +-
 config/dkrz/levante.gpu.nvhpc-22.5            |   2 +-
 run/checksuite.clm/clmexp.ICON_CLM            | 818 +++++++++---------
 .../check.c2sm_clm_r13b03_seaice              |  30 +-
 run/checksuite.icon-dev/icon-dev.checksuite   |  31 +-
 run/create_target_header                      |   9 +
 run/exp.c2sm_clm_r13b03_seaice                |  55 +-
 run/tolerance/hashes/balfrin_cpu_nvidia       |  36 +-
 run/tolerance/hashes/balfrin_cpu_nvidia_mixed |  28 +-
 scripts/buildbot_scripts/create_list_merge2rc |   3 +-
 scripts/experiments/c2sm/clm_experiments.yml  |  22 +
 scripts/experiments/c2sm/clm_tests.yml        |  23 +
 src/atm_dyn_iconam/mo_nh_stepping.f90         |   2 +-
 src/atm_phy_bcs/mo_bc_aeropt_cmip6_volc.f90   | 332 ++++---
 src/atm_phy_bcs/mo_bc_aeropt_kinne.f90        | 376 ++++----
 src/atm_phy_bcs/mo_bc_aeropt_splumes.f90      | 561 +++++++-----
 src/atm_phy_nwp/mo_ecrad.f90                  |   4 +
 src/atm_phy_nwp/mo_nwp_aerosol.f90            | 235 +++--
 src/atm_phy_nwp/mo_nwp_ecrad_init.f90         |  12 +-
 src/atm_phy_nwp/mo_nwp_ecrad_interface.f90    | 253 +++---
 src/atm_phy_nwp/mo_nwp_ecrad_prep_aerosol.f90 |  48 +-
 src/atm_phy_nwp/mo_nwp_gpu_util.f90           |   4 +-
 src/atm_phy_nwp/mo_nwp_phy_state.f90          |   3 +-
 src/atm_phy_nwp/mo_nwp_rad_interface.f90      |  47 +-
 src/atm_phy_nwp/mo_nwp_vdiff_sea.f90          |   2 +
 .../mo_rte_rrtmgp_interface.f90               |  69 +-
 src/shared/mo_idx_list.f90                    |  10 +-
 src/shared/mo_latitude_interpolation.f90      |  35 +-
 28 files changed, 1729 insertions(+), 1323 deletions(-)
 create mode 100644 scripts/experiments/c2sm/clm_experiments.yml
 create mode 100644 scripts/experiments/c2sm/clm_tests.yml

diff --git a/config/dkrz/levante.cpu.nvhpc-22.5 b/config/dkrz/levante.cpu.nvhpc-22.5
index 78740309a9..82742c2f0e 100755
--- a/config/dkrz/levante.cpu.nvhpc-22.5
+++ b/config/dkrz/levante.cpu.nvhpc-22.5
@@ -61,7 +61,7 @@ MPI_LAUNCH="${MPI_ROOT}/bin/mpiexec"
 
 # The compiler fails one of the YAC configure-time tests, which we suppress and
 # hope for the best:
-EXTRA_CONFIG_ARGS='yac_cv_fc_is_contiguous_works=yes'
+EXTRA_CONFIG_ARGS='--enable-ecrad yac_cv_fc_is_contiguous_works=yes'
 
 # NVHPC 23.3 and older are even worse in detecting whether an array is
 # contiguous. Therefore, we have to disable the run-time checks too:
diff --git a/config/dkrz/levante.gpu.nvhpc-22.5 b/config/dkrz/levante.gpu.nvhpc-22.5
index c286d6a4ef..aca6b11b94 100755
--- a/config/dkrz/levante.gpu.nvhpc-22.5
+++ b/config/dkrz/levante.gpu.nvhpc-22.5
@@ -66,7 +66,7 @@ LIBS="-Wl,--as-needed ${XML2_LIBS} ${FYAML_LIBS} ${ECCODES_LIBS} ${BLAS_LAPACK_L
 
 MPI_LAUNCH="${MPI_ROOT}/bin/mpiexec"
 
-EXTRA_CONFIG_ARGS='--enable-gpu --enable-mpi-gpu'
+EXTRA_CONFIG_ARGS='--enable-gpu --enable-mpi-gpu --enable-ecrad'
 
 # The compiler fails one of the YAC configure-time tests, which we suppress and
 # hope for the best:
diff --git a/run/checksuite.clm/clmexp.ICON_CLM b/run/checksuite.clm/clmexp.ICON_CLM
index 44331342de..a462d9bef0 100644
--- a/run/checksuite.clm/clmexp.ICON_CLM
+++ b/run/checksuite.clm/clmexp.ICON_CLM
@@ -24,7 +24,7 @@
 make_and_change_to_experiment_dir # function in ../add_run_routines
 
 # Combine START and MODEL if START_MODEL is not already set.
-# START_MODEL is used to ease the execution of a machine that uses a complex 
+# START_MODEL is used to ease the execution of a machine that uses a complex
 # mpirun command with multiple binaries
 START_MODEL="${START_MODEL:=$START $MODEL}"
 
@@ -71,7 +71,7 @@ restart=${restart:=".false."}
 
 ln -sf ${INPUTDIR}/inidata/caf1979010100_ini.nc .
 ln -sf ${INPUTDIR}/latbc .
-       
+
 ln -sf ${GRIDDIR}/greenhouse_gases/bc_greenhouse_rcp45_1765-2500.nc .
 
 ln -sf ${GRIDDIR}/dict.latbc .
@@ -98,28 +98,28 @@ radiation_grid_filename=europe044_DOM01.parent.nc
 # ----------------------------------------------------------------------
 
 cat > icon_master.namelist << EOF
-	&master_nml
-	  lrestart               = $restart
-	  lrestart_write_last    = .TRUE.
-	/
-	&time_nml
-	  ini_datetime_string = "1979-01-01T00:00:00Z"
-          is_relative_time=.true.
-	/
-	&master_model_nml
-	  model_type=1
-	  model_name="atm"
-	  model_namelist_filename="NAMELIST_${EXPID}"
-	  model_min_rank=1
-	  model_max_rank=65536
-	  model_inc_rank=1
-	/
-        &master_time_control_nml
-          calendar             = "proleptic gregorian"
-          experimentStartDate  = "1979-01-01T00:00:00Z"
-          experimentStopDate   = "1979-01-02T00:00:00Z"
-          checkpointTimeIntval = "PT12H"
-        /
+&master_nml
+  lrestart               = $restart
+  lrestart_write_last    = .TRUE.
+/
+&time_nml
+  ini_datetime_string = "1979-01-01T00:00:00Z"
+  is_relative_time=.true.
+/
+&master_model_nml
+  model_type=1
+  model_name="atm"
+  model_namelist_filename="NAMELIST_${EXPID}"
+  model_min_rank=1
+  model_max_rank=65536
+  model_inc_rank=1
+/
+&master_time_control_nml
+  calendar             = "proleptic gregorian"
+  experimentStartDate  = "1979-01-01T00:00:00Z"
+  experimentStopDate   = "1979-01-02T00:00:00Z"
+  checkpointTimeIntval = "PT12H"
+/
 EOF
 
 # ----------------------------------------------------------------------
@@ -127,407 +127,417 @@ EOF
 # ----------------------------------------------------------------------
 
 # proc settings
-num_io_procs=1
-num_restart_procs=1
 num_prefetch_proc=1
+num_io_procs=1
+
+# Ensure at least 2 workers for GPU reference run.
+if (( mpi_total_procs > 4)); then
+  num_restart_procs=1
+  restart_write_mode='dedicated procs multifile'
+else
+  num_restart_procs=0
+  restart_write_mode='joint procs multifile'
+fi
 num_io_procs_radar=0
 
 cat > NAMELIST_${EXPID} << EOF
-        &parallel_nml
-          nproma             = ${nproma} 
-          p_test_run         = .false.
-          l_test_openmp      = .false.
-          l_log_checks       = .true.
-          num_io_procs       = ${num_io_procs}
-          num_restart_procs  = ${num_restart_procs}
-          num_prefetch_proc  = ${num_prefetch_proc}
-          num_io_procs_radar = ${num_io_procs_radar}
-          iorder_sendrecv   = 3
-          proc0_shift       = 1
-          use_omp_input     = .true.
-	/
-        &grid_nml
- 	  dynamics_grid_filename  = "${dynamics_grid_filename}"
-	  radiation_grid_filename =  "${radiation_grid_filename}"
-	  dynamics_parent_grid_id = 0
-	  lredgrid_phys           = .true.
-	  lfeedback               = .true.
-	  l_limited_area          = .true.
-	  ifeedback_type          = 2
-	  start_time  = 0., 1800.,3600.,
-	/
-        &initicon_nml
-	  init_mode                    = 2
-	  lread_ana                    = .false. ! (T) Read dwdana
-	  ifs2icon_filename            = "${ini_filename}"
-	  zpbl1       = 500.
-	  zpbl2       = 1000.
-	  ltile_init=.TRUE.
-          ltile_coldstart=.true.
-	/
-        &limarea_nml
-	  itype_latbc     = 1
-	  dtime_latbc     = 21600.0
-	  latbc_varnames_map_file = 'dict.latbc'
-	  latbc_path      = './latbc'
-	  latbc_filename  = 'caf<y><m><d><h>_lbc.nc'
-!          latbc_contains_qcqi = .false.        ! = .true.  if  qc, qi are in latbc
-          latbc_contains_qcqi = .true.        ! = .true.  if  qc, qi are in latbc
-                                          ! = .false. if qc, qi are not in latbc
-	/
-        &io_nml
-          itype_pres_msl               = 5
-          itype_rh                     = 1
-          precip_interval              = "PT01H"
-          runoff_interval              = "PT01H"
-          sunshine_interval            = "PT24H"
-          maxt_interval                = "PT24H"
-          gust_interval                =                   3600
-          melt_interval                = "PT01H"
-	  lmask_boundary               = .true.
-          restart_write_mode="dedicated procs multifile"
-	/
-	&output_nml
+&parallel_nml
+  nproma             = ${nproma}
+  nproma_sub         = ${nproma_sub}
+  nblocks_c          = ${nblocks_c}
+  p_test_run         = .false.
+  l_test_openmp      = .false.
+  l_log_checks       = .true.
+  num_io_procs       = ${num_io_procs}
+  num_restart_procs  = ${num_restart_procs}
+  num_prefetch_proc  = ${num_prefetch_proc}
+  num_io_procs_radar = ${num_io_procs_radar}
+  iorder_sendrecv   = 3
+  proc0_shift       = ${proc0_shift}
+  use_omp_input     = .true.
+/
+&grid_nml
+  dynamics_grid_filename  = "${dynamics_grid_filename}"
+  radiation_grid_filename =  "${radiation_grid_filename}"
+  dynamics_parent_grid_id = 0
+  lredgrid_phys           = .true.
+  lfeedback               = .true.
+  l_limited_area          = .true.
+  ifeedback_type          = 2
+  start_time  = 0., 1800.,3600.,
+/
+&initicon_nml
+  init_mode                    = 2
+  lread_ana                    = .false. ! (T) Read dwdana
+  ifs2icon_filename            = "${ini_filename}"
+  zpbl1       = 500.
+  zpbl2       = 1000.
+  ltile_init=.TRUE.
+  ltile_coldstart=.true.
+/
+&limarea_nml
+  itype_latbc     = 1
+  dtime_latbc     = 21600.0
+  latbc_varnames_map_file = 'dict.latbc'
+  latbc_path      = './latbc'
+  latbc_filename  = 'caf<y><m><d><h>_lbc.nc'
+  latbc_contains_qcqi = .true.        ! = .true.  if  qc, qi are in latbc
+                                      ! = .false. if qc, qi are not in latbc
+/
+&io_nml
+  itype_pres_msl               = 5
+  itype_rh                     = 1
+  precip_interval              = "PT01H"
+  runoff_interval              = "PT01H"
+  sunshine_interval            = "PT24H"
+  maxt_interval                = "PT24H"
+  gust_interval                =                   3600
+  melt_interval                = "PT01H"
+  lmask_boundary               = .true.
+  restart_write_mode="${restart_write_mode}"
+/
+&output_nml
 !-----------------------------------------------------------Output Namelist 1
-	  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
-	  dom                          =  1            ! write all domains
-	  output_bounds                =  0, 2678400, 10800.    ! start, end, increment
-	  steps_per_file               =  1
-	  mode                         =  1            ! 1: forecast mode (relative t-axis)
-	         			              ! 2: climate mode (absolute t-axis)
-	  include_last                 = .TRUE.
-	  steps_per_file_inclfirst     = .FALSE.
-	  output_filename              = '${EXPID}_out01'
-	  filename_format              = '<output_filename>_<datetime2>'
-       operation                    = ""
-         ml_varlist                   = 'alb_si','fr_seaice','t_g','hpbl','aod_550nm' ! reduced list for buildbot
-	 output_grid                  =  .TRUE.
+  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
+  dom                          =  1            ! write all domains
+  output_bounds                =  0, 2678400, 10800.    ! start, end, increment
+  steps_per_file               =  1
+  mode                         =  1            ! 1: forecast mode (relative t-axis)
+                                               ! 2: climate mode (absolute t-axis)
+  include_last                 = .TRUE.
+  steps_per_file_inclfirst     = .FALSE.
+  output_filename              = '${EXPID}_out01'
+  filename_format              = '<output_filename>_<datetime2>'
+  operation                    = ""
+  ml_varlist                   = 'alb_si','fr_seaice','t_g','aod_550nm' ! reduced list for buildbot
+  output_grid                  =  .TRUE.
 !	 stream_partitions_ml         =  2
-	/
-	&output_nml
+/
+&output_nml
 !-----------------------------------------------------------Output Namelist 2
-	  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
-	  dom                          =  1            ! write all domains
-	  output_bounds                =  0, 2678400, 86400.    ! start, end, increment
-	  steps_per_file               =  1
-	  mode                         =  1            ! 1: forecast mode (relative t-axis)
-	         				      ! 2: climate mode (absolute t-axis)
-	  include_last                 = .TRUE.
-	  steps_per_file_inclfirst     = .FALSE.
-	  output_filename              = '${EXPID}_out02'
-	  filename_format              = '<output_filename>_<datetime2>'
-     operation                    = ""
-	  ml_varlist                   = 'w_so','t_s','resid_wso'
-	  output_grid                  =  .TRUE.
+  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
+  dom                          =  1            ! write all domains
+  output_bounds                =  0, 2678400, 86400.    ! start, end, increment
+  steps_per_file               =  1
+  mode                         =  1            ! 1: forecast mode (relative t-axis)
+                                               ! 2: climate mode (absolute t-axis)
+  include_last                 = .TRUE.
+  steps_per_file_inclfirst     = .FALSE.
+  output_filename              = '${EXPID}_out02'
+  filename_format              = '<output_filename>_<datetime2>'
+    operation                    = ""
+  ml_varlist                   = 'w_so','t_s','resid_wso'
+  output_grid                  =  .TRUE.
 !	  stream_partitions_ml         =  2
-	/
-	&output_nml
+/
+&output_nml
 !-----------------------------------------------------------Output Namelist 3
-	  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
-	  dom                          =  1            ! write all domains
-	  output_bounds                =  0, 2678400, 3600.    ! start, end, increment
-	  steps_per_file               =  1
-	  mode                         =  1            ! 1: forecast mode (relative t-axis)
-	         				      ! 2: climate mode (absolute t-axis)
-	  include_last                 = .TRUE.
-	  steps_per_file_inclfirst     = .FALSE.
-	  output_filename              = '${EXPID}_out03'
-	  filename_format              = '<output_filename>_<datetime2>'
-     operation                    = ""
-	  ml_varlist                   = 'rain_con','tot_prec','t_2m','snow_melt'
-	  output_grid                  =  .TRUE.
+  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
+  dom                          =  1            ! write all domains
+  output_bounds                =  0, 2678400, 3600.    ! start, end, increment
+  steps_per_file               =  1
+  mode                         =  1            ! 1: forecast mode (relative t-axis)
+                                               ! 2: climate mode (absolute t-axis)
+  include_last                 = .TRUE.
+  steps_per_file_inclfirst     = .FALSE.
+  output_filename              = '${EXPID}_out03'
+  filename_format              = '<output_filename>_<datetime2>'
+  operation                    = ""
+  ml_varlist                   = 'rain_con','tot_prec','t_2m','snow_melt'
+  output_grid                  =  .TRUE.
 !	  stream_partitions_ml 	      =  2
-	/
-	&output_nml
+/
+&output_nml
 !-----------------------------------------------------------Output Namelist 4
-	  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
-	  dom                          =  1            ! write all domains
-	  output_bounds                =  0, 2678400, 86400.    ! start, end, increment
-	  steps_per_file               =  1
-	  mode                         =  1            ! 1: forecast mode (relative t-axis)
-	         				      ! 2: climate mode (absolute t-axis)
-	  include_last                 = .TRUE.
-	  steps_per_file_inclfirst     = .FALSE.
-	  output_filename              = '${EXPID}_out04'
-	  filename_format              = '<output_filename>_<datetime2>'
-     operation                    = ""
-	  ml_varlist                   = 'tmax_2m', 'dursun'
-	  output_grid                  =  .TRUE.
+  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
+  dom                          =  1            ! write all domains
+  output_bounds                =  0, 2678400, 86400.    ! start, end, increment
+  steps_per_file               =  1
+  mode                         =  1            ! 1: forecast mode (relative t-axis)
+                                               ! 2: climate mode (absolute t-axis)
+  include_last                 = .TRUE.
+  steps_per_file_inclfirst     = .FALSE.
+  output_filename              = '${EXPID}_out04'
+  filename_format              = '<output_filename>_<datetime2>'
+  operation                    = ""
+  ml_varlist                   = 'tmax_2m', 'dursun'
+  output_grid                  =  .TRUE.
 !	  stream_partitions_ml 	      =  2
-	/
-	&output_nml
+/
+&output_nml
 !-----------------------------------------------------------Output Namelist 5
-	  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
-	  dom                          =  1            ! write all domains
-	  output_bounds                =  0, 2678400, 21600.    ! start, end, increment
-	  steps_per_file               =  1
-	  mode                         =  1            ! 1: forecast mode (relative t-axis)
-	 					      ! 2: climate mode (absolute t-axis)
-	  include_last                 = .TRUE.
-	  steps_per_file_inclfirst     = .FALSE.
-	  output_filename              = '${EXPID}_out05'
-	  filename_format              = '<output_filename>_<datetime2>'
-     operation                    = ""
-	  ml_varlist                   = 'tqc','cape_ml'
-	  output_grid                  =  .TRUE.
+  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
+  dom                          =  1            ! write all domains
+  output_bounds                =  0, 2678400, 21600.    ! start, end, increment
+  steps_per_file               =  1
+  mode                         =  1            ! 1: forecast mode (relative t-axis)
+                                               ! 2: climate mode (absolute t-axis)
+  include_last                 = .TRUE.
+  steps_per_file_inclfirst     = .FALSE.
+  output_filename              = '${EXPID}_out05'
+  filename_format              = '<output_filename>_<datetime2>'
+  operation                    = ""
+  ml_varlist                   = 'tqc','cape_ml'
+  output_grid                  =  .TRUE.
 !	 stream_partitions_ml 	      =  2
-	/
-	&output_nml
+/
+&output_nml
 !-----------------------------------------------------------Output Namelist 6
-	  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
-	  dom                          =  1            ! write all domains
-	  output_bounds                =  0, 2678400, 21600.   ! start, end, increment
-	  steps_per_file               =  1
-	  mode                         =  1            ! 1: forecast mode (relative t-axis)
-	                                               ! 2: climate mode (absolute t-axis)
-	  include_last                 = .TRUE.
-	  steps_per_file_inclfirst     = .FALSE.
-	  output_filename              = '${EXPID}_out06'
-	  filename_format              = '<output_filename>_<datetime2>'
-     operation                    = ""
-	  pl_varlist                   = 'temp'
-	  p_levels                     =  20000, 50000, 85000
-	  output_grid                  =  .TRUE.
+  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
+  dom                          =  1            ! write all domains
+  output_bounds                =  0, 2678400, 21600.   ! start, end, increment
+  steps_per_file               =  1
+  mode                         =  1            ! 1: forecast mode (relative t-axis)
+                                               ! 2: climate mode (absolute t-axis)
+  include_last                 = .TRUE.
+  steps_per_file_inclfirst     = .FALSE.
+  output_filename              = '${EXPID}_out06'
+  filename_format              = '<output_filename>_<datetime2>'
+  operation                    = ""
+  pl_varlist                   = 'temp'
+  p_levels                     =  20000, 50000, 85000
+  output_grid                  =  .TRUE.
 !	  stream_partitions_ml         =  2
-	/
-	&output_nml
+/
+&output_nml
 !-----------------------------------------------------------Output Namelist 8
-	  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
-	  dom                          =  1            ! write all domains
-	  output_bounds                =  0, 2678400, 3600.    ! start, end, increment
-	  steps_per_file               =  1
-	  mode                         =  1            ! 1: forecast mode (relative t-axis)
-	         				      ! 2: climate mode (absolute t-axis)
-	  include_last                 = .TRUE.
-	  steps_per_file_inclfirst     = .FALSE.
-	  output_filename              = '${EXPID}_out08'
-	  filename_format              = '<output_filename>_<datetime2>'
-     operation                    = "mean"
-	  ml_varlist                   = 'shfl_s','sob_t','sob_s'
-	  output_grid                  =  .TRUE.
-	/
-	&output_nml
+  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
+  dom                          =  1            ! write all domains
+  output_bounds                =  0, 2678400, 3600.    ! start, end, increment
+  steps_per_file               =  1
+  mode                         =  1            ! 1: forecast mode (relative t-axis)
+                                               ! 2: climate mode (absolute t-axis)
+  include_last                 = .TRUE.
+  steps_per_file_inclfirst     = .FALSE.
+  output_filename              = '${EXPID}_out08'
+  filename_format              = '<output_filename>_<datetime2>'
+  operation                    = "mean"
+  ml_varlist                   = 'shfl_s','sob_t','sob_s'
+  output_grid                  =  .TRUE.
+/
+&output_nml
 !-----------------------------------------------------------Output Namelist 9
-	  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
-	  dom                          =  1            ! write all domains
-	  output_bounds                =  0, 2678400, 3600.    ! start, end, increment
-	  steps_per_file               =  1
-	  mode                         =  1            ! 1: forecast mode (relative t-axis)
-	         				      ! 2: climate mode (absolute t-axis)
-	  include_last                 = .TRUE.
-	  steps_per_file_inclfirst     = .FALSE.
-	  output_filename              = '${EXPID}_out09'
-	  filename_format              = '<output_filename>_<datetime2>'
-     operation                    = ""
-	  ml_varlist                   = 'sob_s'
-	  output_grid                  =  .TRUE.
+  filetype                     =  4            ! output format: 2=GRIB2, 4=NETCDFv2
+  dom                          =  1            ! write all domains
+  output_bounds                =  0, 2678400, 3600.    ! start, end, increment
+  steps_per_file               =  1
+  mode                         =  1            ! 1: forecast mode (relative t-axis)
+                                               ! 2: climate mode (absolute t-axis)
+  include_last                 = .TRUE.
+  steps_per_file_inclfirst     = .FALSE.
+  output_filename              = '${EXPID}_out09'
+  filename_format              = '<output_filename>_<datetime2>'
+  operation                    = ""
+  ml_varlist                   = 'sob_s'
+  output_grid                  =  .TRUE.
 !	  stream_partitions_ml 	      =  2
-	/
-	&output_nml
+/
+&output_nml
 !-----------------------------------------------------------Output Namelist 10
-	  filetype                     =  4              ! output format: 2=GRIB2, 4=NETCDFv2
-	  dom                          =  1              ! write all domains
-	  output_bounds                =  0., 0., 3600.  ! start, end, increment
-	  steps_per_file               =  1
-	  mode                         =  1              ! 1: forecast mode (relative t-axis)
-	         					! 2: climate mode (absolute t-axis)
-	  include_last                 = .FALSE.
-	  steps_per_file_inclfirst     = .FALSE.
-	  output_filename              = '${EXPID}_icon'
-	  filename_format              = '<output_filename>_<datetime2>'   ! file name base
-	  ml_varlist		       = 'z_ifc','topography_c','fr_land','depth_lk', 'fr_lake', 'soiltyp',
-	  output_grid                  =  .TRUE.
+  filetype                     =  4              ! output format: 2=GRIB2, 4=NETCDFv2
+  dom                          =  1              ! write all domains
+  output_bounds                =  0., 0., 3600.  ! start, end, increment
+  steps_per_file               =  1
+  mode                         =  1              ! 1: forecast mode (relative t-axis)
+                                                 ! 2: climate mode (absolute t-axis)
+  include_last                 = .FALSE.
+  steps_per_file_inclfirst     = .FALSE.
+  output_filename              = '${EXPID}_icon'
+  filename_format              = '<output_filename>_<datetime2>'   ! file name base
+  ml_varlist		       = 'z_ifc','topography_c','fr_land','depth_lk', 'fr_lake', 'soiltyp',
+  output_grid                  =  .TRUE.
 !	  stream_partitions_ml 	      =  2
-	/
-	&run_nml
-	  num_lev        = 60
-	  lvert_nest     = .false.
-	  dtime          = 400     ! timestep in seconds
-	  ldynamics      = .TRUE.
-	  ltransport     = .true.
-	  ntracer        = 5
-	  iforcing       = 3
-	  ltestcase      = .false.
-	  msg_level      = 7
-	  ltimer         = .true.
-	  timers_level   = 10
-	  check_uuid_gracefully = .FALSE.
-	  output         = "nml" ! "nml"
-	  debug_check_level = 0
-          lart           = .false.
-          restart_filename = '${EXPID}_restart_atm_<rsttime>.mfr'
-	/
-	&nwp_phy_nml
-          inwp_gscp       = 1
-          mu_rain         = 0.5
-          rain_n0_factor  = 0.1
-          inwp_convection = 1
-          inwp_radiation  = 4
-          inwp_cldcover   = 1
-          inwp_turb       = 1
-          inwp_satad      = 1
-          inwp_sso        = 1
-          inwp_gwd        = 1
-          inwp_surface    = 1
-          latm_above_top  = .true.
-          ldetrain_conv_prec = .true.
-          efdt_min_raylfric = 7200.
-          itype_z0         = 2
-          icapdcycl        = 3
-          icpl_aero_gscp  = 0   ! 1 not possible in combination with the Kinne aerosols (alternative: 3)
-          icpl_aero_conv  = 0
-          icpl_o3_tp       = 1
-          iprog_aero       = 0
-          dt_rad    = 2400
-          dt_conv   = 800
-          dt_sso    = 1600
-          dt_gwd    = 1600
-	/
-	&nwp_tuning_nml
-          itune_albedo = 0
-          tune_gkwake   = 1.5
-          tune_gfrcrit  = 0.425
-          tune_gkdrag   = 0.075
-          tune_dust_abs = 1.
-          tune_zvz0i    = 0.85
-          tune_box_liq_asy = 3.25
-          tune_minsnowfrac = 0.2
-          tune_gfluxlaun  = 3.75e-3
-          tune_rcucov = 0.075
-          tune_rhebc_land = 0.825
-          tune_gust_factor=7.0
-          tune_albedo_wso=0.1,-0.1
-	/
-	&turbdiff_nml
-          tkhmin  = 0.6
-          tkhmin_strat = 1.0
-	  tkmmin        = 0.75
-	  pat_len       = 750.
-          c_diff  =  0.2
-          rlam_heat = 10.0
-          rat_lam =  1.0
-          rat_sea =  0.8
-          ltkesso = .true.
-	  frcsmot       = 0.2
-	  imode_frcsmot = 2
-          alpha1  = 0.125
-          icldm_turb = 1
-          itype_sher = 1
-	  ltkeshs       = .true.
-	  a_hshr        = 2.0
-	/
-	&lnd_nml
-	  sstice_mode    = 6
-          ci_td_filename = './latbc/LOWBC_1979_01.nc'
-          sst_td_filename= './latbc/LOWBC_1979_01.nc'
-	  ntiles         = 3
-	  nlev_snow      = 1
-          zml_soil       = 0.005,0.02,0.06,0.18,0.54,1.62,4.86,14.58
-	  lmulti_snow    = .false.
-	  itype_heatcond = 3
-	  idiag_snowfrac = 20
-          itype_snowevap = 3
-	  lsnowtile      = .true.
-	  lseaice        = .true.
-	  llake          = .true.
-	  itype_lndtbl   = 4
-	  itype_evsl     = 4
-	  itype_trvg     = 3
-          itype_root     = 2
-          itype_canopy   = 2
-	  cwimax_ml      = 5.e-4
-	  c_soil         = 1.25
-	  c_soil_urb     = 0.5
-          lprog_albsi    = .true.
-          rsmin_fac      = 1.0
-	/
-	&radiation_nml
-          ecrad_data_path= '${ECRAD_DIR}'
-          ghg_filename =  '${ghg_filename}'
-          irad_co2    = 4           ! 4: from greenhouse gas scenario
-          irad_ch4    = 4           ! 4: from greenhouse gas scenario
-          irad_n2o    = 4           ! 4: from greenhouse gas scenario
-          irad_cfc11  = 4           ! 4: from greenhouse gas scenario
-          irad_cfc12  = 4           ! 4: from greenhouse gas scenario
-	  irad_o3     = 79
-	  irad_aero   = 18
-	  albedo_type = 2          ! Modis albedo
-          direct_albedo = 4
-          albedo_whitecap = 1
-          direct_albedo_water = 3
-	/
-	&nonhydrostatic_nml
-	  itime_scheme    = 4
-	  vwind_offctr    = 0.2
-          damp_height     = 10500.
-          rayleigh_coeff  = 1.0
-	  divdamp_order   = 24
-          divdamp_fac     = 0.004
-          divdamp_type    = 32
-	  igradp_method   = 3
-	  l_zdiffu_t      = .true.
-	  thslp_zdiffu    = 0.02
-	  thhgtd_zdiffu   = 125.
-	  htop_moist_proc = 22500.
-          hbot_qvsubstep  = 16000.
-          ndyn_substeps=5
-	/
-	&sleve_nml
-	  min_lay_thckn   = 20.
-          max_lay_thckn   = 400.
-          htop_thcknlimit = 15000.
-          top_height      = 23500.
-          stretch_fac     = 0.9
-	  decay_scale_1   = 4000.
-	  decay_scale_2   = 2500.
-	  decay_exp       = 1.2
-	  flat_height     = 16000.
-	/
-	&dynamics_nml
-	  divavg_cntrwgt = 0.50
-	  lcoriolis      = .true.
-	/
-	&transport_nml
-          ivadv_tracer   = 3,3,3,3,3
-          itype_hlimit   = 3,4,4,4,4,
-          ihadv_tracer   = 52,2,2,2,2,
-          llsq_svd       = .false.
-	  beta_fct       = 1.005
-	/
-	&diffusion_nml
-	  hdiff_order      = 5
-	  itype_vn_diffu   = 1
-	  itype_t_diffu    = 2
-          hdiff_efdt_ratio = 24.
-	  hdiff_smag_fac   = 0.025
-	  lhdiff_vn        = .true.
-	  lhdiff_temp      = .true.
-	/
-	&interpol_nml
-	  nudge_zone_width = 10
-	  lsq_high_ord     = 3
-	  l_intp_c2l       = .true.
-	  l_mono_c2l       = .true.
-          rbf_scale_mode_ll = 2
-	/
-	&gridref_nml
-	  grf_intmethod_e  = 6
-          grf_scalfbk      = 2
-	  denom_diffu_v    = 150.
-	/
-	&extpar_nml
-	  itopo                = 1
-	  n_iter_smooth_topo   = 1,
-	  hgtdiff_max_smooth_topo = 750.
-	  heightdiff_threshold = 3000.
-          itype_vegetation_cycle = 3
-          itype_lwemiss = 2
-	  extpar_filename = '${ext_filename}'
-	/
-        &nudging_nml
-          nudge_type = 1
-          nudge_start_height=10500
-        /
+/
+&run_nml
+  num_lev        = 60
+  lvert_nest     = .false.
+  dtime          = 400     ! timestep in seconds
+  ldynamics      = .TRUE.
+  ltransport     = .true.
+  ntracer        = 5
+  iforcing       = 3
+  ltestcase      = .false.
+  msg_level      = 7
+  ltimer         = .true.
+  timers_level   = 10
+  check_uuid_gracefully = .FALSE.
+  output         = "nml" ! "nml"
+  debug_check_level = 0
+  lart           = .false.
+  restart_filename = '${EXPID}_restart_atm_<rsttime>.mfr'
+/
+&nwp_phy_nml
+  inwp_gscp       = 1
+  mu_rain         = 0.5
+  rain_n0_factor  = 0.1
+  inwp_convection = 1
+  inwp_radiation  = 4
+  inwp_cldcover   = 1
+  inwp_turb       = 1
+  inwp_satad      = 1
+  inwp_sso        = 1
+  inwp_gwd        = 1
+  inwp_surface    = 1
+  latm_above_top  = .true.
+  ldetrain_conv_prec = .true.
+  efdt_min_raylfric = 7200.
+  itype_z0         = 2
+  icapdcycl        = 3
+  icpl_aero_gscp  = 0   ! 1 not possible in combination with the Kinne aerosols (alternative: 3)
+  icpl_aero_conv  = 0
+  icpl_o3_tp       = 1
+  iprog_aero       = 0
+  dt_rad    = 2400
+  dt_conv   = 800
+  dt_sso    = 1600
+  dt_gwd    = 1600
+/
+&nwp_tuning_nml
+  itune_albedo = 0
+  tune_gkwake   = 1.5
+  tune_gfrcrit  = 0.425
+  tune_gkdrag   = 0.075
+  tune_dust_abs = 1.
+  tune_zvz0i    = 0.85
+  tune_box_liq_asy = 3.25
+  tune_minsnowfrac = 0.2
+  tune_gfluxlaun  = 3.75e-3
+  tune_rcucov = 0.075
+  tune_rhebc_land = 0.825
+  tune_gust_factor=7.0
+  tune_albedo_wso=0.1,-0.1
+/
+&turbdiff_nml
+  tkhmin  = 0.6
+  tkhmin_strat = 1.0
+  tkmmin        = 0.75
+  pat_len       = 750.
+  c_diff  =  0.2
+  rlam_heat = 10.0
+  rat_lam =  1.0
+  rat_sea =  0.8
+  ltkesso = .true.
+  frcsmot       = 0.2
+  imode_frcsmot = 2
+  alpha1  = 0.125
+  icldm_turb = 1
+  itype_sher = 1
+  ltkeshs       = .true.
+  a_hshr        = 2.0
+/
+&lnd_nml
+  sstice_mode    = 6
+  ci_td_filename = './latbc/LOWBC_1979_01.nc'
+  sst_td_filename= './latbc/LOWBC_1979_01.nc'
+  ntiles         = 3
+  nlev_snow      = 1
+  zml_soil       = 0.005,0.02,0.06,0.18,0.54,1.62,4.86,14.58
+  lmulti_snow    = .false.
+  itype_heatcond = 3
+  idiag_snowfrac = 20
+  itype_snowevap = 3
+  lsnowtile      = .true.
+  lseaice        = .true.
+  llake          = .true.
+  itype_lndtbl   = 4
+  itype_evsl     = 4
+  itype_trvg     = 3
+  itype_root     = 2
+  itype_canopy   = 2
+  cwimax_ml      = 5.e-4
+  c_soil         = 1.25
+  c_soil_urb     = 0.5
+  lprog_albsi    = .true.
+  rsmin_fac      = 1.0
+/
+&radiation_nml
+  ecrad_data_path= '${ECRAD_DIR}'
+  ecrad_isolver = ${radiation_ecrad_isolver}
+  ghg_filename =  '${ghg_filename}'
+  irad_co2    = 4           ! 4: from greenhouse gas scenario
+  irad_ch4    = 4           ! 4: from greenhouse gas scenario
+  irad_n2o    = 4           ! 4: from greenhouse gas scenario
+  irad_cfc11  = 4           ! 4: from greenhouse gas scenario
+  irad_cfc12  = 4           ! 4: from greenhouse gas scenario
+  irad_o3     = 79
+  irad_aero   = 18
+  albedo_type = 2          ! Modis albedo
+  direct_albedo = 4
+  albedo_whitecap = 1
+  direct_albedo_water = 3
+/
+&nonhydrostatic_nml
+  itime_scheme    = 4
+  vwind_offctr    = 0.2
+  damp_height     = 10500.
+  rayleigh_coeff  = 1.0
+  divdamp_order   = 24
+  divdamp_fac     = 0.004
+  divdamp_type    = 32
+  igradp_method   = 3
+  l_zdiffu_t      = .true.
+  thslp_zdiffu    = 0.02
+  thhgtd_zdiffu   = 125.
+  htop_moist_proc = 22500.
+  hbot_qvsubstep  = 16000.
+  ndyn_substeps=5
+/
+&sleve_nml
+  min_lay_thckn   = 20.
+  max_lay_thckn   = 400.
+  htop_thcknlimit = 15000.
+  top_height      = 23500.
+  stretch_fac     = 0.9
+  decay_scale_1   = 4000.
+  decay_scale_2   = 2500.
+  decay_exp       = 1.2
+  flat_height     = 16000.
+/
+&dynamics_nml
+  divavg_cntrwgt = 0.50
+  lcoriolis      = .true.
+/
+&transport_nml
+  ivadv_tracer   = 3,3,3,3,3
+  itype_hlimit   = 3,4,4,4,4,
+  ihadv_tracer   = 52,2,2,2,2,
+  llsq_svd       = .false.
+  beta_fct       = 1.005
+/
+&diffusion_nml
+  hdiff_order      = 5
+  itype_vn_diffu   = 1
+  itype_t_diffu    = 2
+  hdiff_efdt_ratio = 24.
+  hdiff_smag_fac   = 0.025
+  lhdiff_vn        = .true.
+  lhdiff_temp      = .true.
+/
+&interpol_nml
+  nudge_zone_width = 10
+  lsq_high_ord     = 3
+  l_intp_c2l       = .true.
+  l_mono_c2l       = .true.
+  rbf_scale_mode_ll = 2
+/
+&gridref_nml
+  grf_intmethod_e  = 6
+  grf_scalfbk      = 2
+  denom_diffu_v    = 150.
+/
+&extpar_nml
+  itopo                = 1
+  n_iter_smooth_topo   = 1,
+  hgtdiff_max_smooth_topo = 750.
+  heightdiff_threshold = 3000.
+  itype_vegetation_cycle = 3
+  itype_lwemiss = 2
+  extpar_filename = '${ext_filename}'
+/
+&nudging_nml
+  nudge_type = 1
+  nudge_start_height=10500
+/
 EOF
 
 # ----------------------------------------------------------------------------
diff --git a/run/checksuite.icon-dev/check.c2sm_clm_r13b03_seaice b/run/checksuite.icon-dev/check.c2sm_clm_r13b03_seaice
index 985a255a50..bd1ee1d265 100644
--- a/run/checksuite.icon-dev/check.c2sm_clm_r13b03_seaice
+++ b/run/checksuite.icon-dev/check.c2sm_clm_r13b03_seaice
@@ -12,12 +12,12 @@
 
 #--------------------------------------------------------------------------------
 #
-# _bb_table_Description_  C2SM ICON-CLM experiment
+# _bb_table_Description_  MCH LAM experiment
 # _bb_table_Model_        non-hydrostatic atmosphere with NWP physics
 
 #--------------------------------------------------------------------------------
 #
-# 1. Define the experiment and the files to be checked
+# 1. Define the experiment
 #
 # EXPERIMENT is the name of the experiment, that defines the experiment descriptor
 # file run/exp.<EXPNAME>. EXPNAME is used also for:
@@ -30,44 +30,36 @@ export EXPERIMENT='c2sm_clm_r13b03_seaice'
 # TYPES is a list of names identifying the files <EXPNAME>_<TYPE>_<DATE>.nc
 # to be checked.
 #
-export TYPES='atm_3d_ml'
+export TYPES=$("${basedir}/scripts/experiments/get_checksuite_parameter_by_name" --experiment "$EXPERIMENT" --param types)
 
 # DATES is a list of dates identifying the files <EXPNAME>_<TYPE>_<DATE>.nc
 # to be checked.
 #
-export DATES='19790201T180000Z'
+export DATES=$("${basedir}/scripts/experiments/get_checksuite_parameter_by_name" --experiment "$EXPERIMENT" --param dates)
 
 # RESTART_DATE defines the date and time from which restarts should be performed.
 # 
-export RESTART_DATE='19790201T180000Z'
+export RESTART_DATE=$("${basedir}/scripts/experiments/get_checksuite_parameter_by_name" --experiment "$EXPERIMENT" --param restart_date)
 
 #--------------------------------------------------------------------------------
 # 
-# 2. Define the checksuite mode
+# Define the checksuite mode
 #
-export MD='tm'
+export MD=$("${basedir}/scripts/experiments/get_param_for_exp_by_machine" --experiment "$EXPERIMENT" --param checksuite_modes)
 
-#--------------------------------------------------------------------------------
-# 
-# 3. Launch the checksuite from run/
+# Set the tolerance factor
+#
+export FACTOR=$("${basedir}/scripts/experiments/get_param_for_exp_by_machine" --experiment "$EXPERIMENT" --param tolerance_factor)
 
+# 2. Launch the checksuite from run/
 rundir=`pwd`
 cd checksuite.icon-dev
 
-case $HOST in
-    # balfrin (the current hostname is nid but will be changed to balfrin)
-    *nid*|*balfrin*)
-        # Jan 2023: Note that the MPI tests fail on Balfrin for unknown reasons
-        export MD='t'
-        ;;
-esac
-
 ./icon-dev.checksuite
 STATUS=$?
 
 check_final_status $STATUS "$EXPERIMENT"
 
-
 #--------------------------------------------------------------------------------
 exit
 
diff --git a/run/checksuite.icon-dev/icon-dev.checksuite b/run/checksuite.icon-dev/icon-dev.checksuite
index 3c73ac9924..4d8647ba76 100755
--- a/run/checksuite.icon-dev/icon-dev.checksuite
+++ b/run/checksuite.icon-dev/icon-dev.checksuite
@@ -893,16 +893,33 @@ if [[ ${MD} =~ .*n.* ]]; then
         sed    s/${SCRIPT}/${EXP_TEST}/g < ${PREFIX}.${SCRIPT}.run > ${RUN_SCRIPT}
         sed -i s/data.${EXP_TEST}/data.${SCRIPT}/g             ${RUN_SCRIPT}
 
+        TEST_POSSIBLE=no
         N_NPROMA=`grep "nproma=" ${RUN_SCRIPT}`
         N_NPROMA=${N_NPROMA#nproma=}
-        ((N_NPROMA_NEW=N_NPROMA + 1))
-        sed s/nproma=$N_NPROMA/nproma=$N_NPROMA_NEW/g < ${RUN_SCRIPT} > ${RUN_SCRIPT}.out
-        mv ${RUN_SCRIPT}.out ${RUN_SCRIPT}
+        if ((N_NPROMA > 0)); then
+            ((N_NPROMA_NEW=N_NPROMA + 1))
+            sed s/nproma=$N_NPROMA/nproma=$N_NPROMA_NEW/g < ${RUN_SCRIPT} > ${RUN_SCRIPT}.out
+            mv ${RUN_SCRIPT}.out ${RUN_SCRIPT}
+            TEST_POSSIBLE=yes
+        else
+            N_NBLOCKS_C=$(grep "nblocks_c=" ${RUN_SCRIPT})
+            N_NBLOCKS_C=${N_NBLOCKS_C#nblocks_c=}
+            if ((N_NBLOCKS_C > 0)); then
+                sed s/nblocks_c=$N_NBLOCKS_C/nblocks_c=$((N_NBLOCKS_C+1))/g < ${RUN_SCRIPT} > ${RUN_SCRIPT}.out
+                mv ${RUN_SCRIPT}.out ${RUN_SCRIPT}
+                TEST_POSSIBLE=yes
+            fi
+        fi
 
-        echo "Perform $TEST run"
-        chmod 755 ${RUN_SCRIPT}
-        ${SCRIPT_DIR}/${RUN_SCRIPT}
-        RUN_STATUS=$?
+        if [[ $TEST_POSSIBLE == yes ]]; then
+            echo "Perform $TEST run"
+            chmod 755 ${RUN_SCRIPT}
+            ${SCRIPT_DIR}/${RUN_SCRIPT}
+            RUN_STATUS=$?
+        else
+            echo "ERROR: Could not determine nproma-setting mechanism (neither nproma nor nblocks_c are valid)"
+            RUN_STATUS=1
+        fi
 
     else
         echo "Found $TEST run"
diff --git a/run/create_target_header b/run/create_target_header
index 4a5fc8e92d..b0267abb71 100644
--- a/run/create_target_header
+++ b/run/create_target_header
@@ -440,6 +440,8 @@ set_run_target_bullx_gpu()
     set_default use_nodes 1
     set_default use_num_io_procs 1
     set_default use_account_no "$(id -gn)"
+    set_default use_ecrad_isolver 2 # McICA for OpenACC
+
     if [[ "x$BB_SYSTEM" != "x" ]]
     then
 	# this buildbot, do not use job id
@@ -2708,6 +2710,13 @@ create_target_header()
                 ;;
             esac
             ;;    
+        *ICON_CLM*)
+            case $use_target in
+            bullx_gpu*)
+                use_mpi_procs_pernode=4
+                ;;
+            esac
+            ;;
         esac
 
     # set more default values
diff --git a/run/exp.c2sm_clm_r13b03_seaice b/run/exp.c2sm_clm_r13b03_seaice
index d598d68118..f2f7adca27 100644
--- a/run/exp.c2sm_clm_r13b03_seaice
+++ b/run/exp.c2sm_clm_r13b03_seaice
@@ -110,6 +110,47 @@ add_required_file ${latbc_path}/bc_greenhouse_rcp45_1765-2500.nc .
 add_required_file ${latbc_path}/LOWBC_1979_02.nc .
 add_required_file ${latbc_path}/LOWBC_1979_02.nc .
 
+# Add required files for iRadAeroKinnVolcSP (irad_aero=18)
+add_required_file ${icon_data_poolFolder}/input/clm_r13b03_seaice/CMIP6Forcing/bc_aeropt_cmip6_volc_lw_b16_sw_b14_1979.nc .
+
+# - tropospheric anthropogenic aerosols, simple plumes
+add_link_file ${icon_data_poolFolder}/input/clm_r13b03_seaice/MACv2.0-SP_v1.nc                          ./MACv2.0-SP_v1.nc
+#
+# - Kinne background aerosols are needed for the year 1850 (irad_aero=18,19)
+#
+datadir=${icon_data_poolFolder}/input/clm_r13b03_seaice
+#
+add_link_file $datadir/bc_aeropt_kinne_lw_b16_coa.nc                    ./
+add_link_file $datadir/bc_aeropt_kinne_sw_b14_coa.nc                    ./
+add_link_file $datadir/bc_aeropt_kinne_sw_b14_fin_1850.nc               ./bc_aeropt_kinne_sw_b14_fin.nc
+
+icon_preprocessing_source=${icon_data_rootFolder}/grids/private/mpim/icon_preprocessing/source
+# boundary conditions
+# horizontal grid(s)
+#
+# domain globe
+grids_folder_ozone=${icon_preprocessing_source}/ozone/cmip6/R02B04/
+#
+# range of years for yearly files
+# assume start_date and end_date have the format yyyy-...
+start_year=$(( ${start_date%%-*} - 1 ))
+end_year=$(( ${end_date%%-*} + 1 ))
+#
+# - ozone
+# -- for irad_o3=5
+year=$start_year
+datadir=${grids_folder_ozone}
+while [[ $year -le $end_year ]]
+do
+  if [[ $year -le 2014 ]]
+  then
+    add_link_file $datadir/bc_ozone_historical_${year}.nc               ./bc_ozone_${year}.nc
+  else
+    add_link_file $datadir/bc_ozone_historical_2014.nc                  ./bc_ozone_${year}.nc
+  fi
+  (( year = year+1 ))
+done
+
 # ===========================================================================
 # Create ICON master namelist
 # ==========================================================================
@@ -212,7 +253,7 @@ cat > ${basedir}/run/${atmo_namelist} << EOF
   ltile_init                  = .TRUE.
   ltile_coldstart             = .true.
   pinit_seed                  = 0
-  pinit_amplitude             = 1e-14
+  pinit_amplitude             = 0
 /
 
 ! grid_nml: horizontal grid --------------------------------------------------
@@ -335,8 +376,8 @@ cat > ${basedir}/run/${atmo_namelist} << EOF
  efdt_min_raylfric  = 7200.
  itype_z0         = 2
  icapdcycl        = 3
- icpl_aero_conv   = 1
- icpl_aero_gscp   = 1
+ icpl_aero_conv   = 0
+ icpl_aero_gscp   = 0
  icpl_o3_tp       = 1
  iprog_aero       = 0
  dt_rad           = 2400
@@ -359,6 +400,10 @@ cat > ${basedir}/run/${atmo_namelist} << EOF
  tune_rcucov = 0.075
  tune_rhebc_land = 0.825
  tune_gust_factor=7.0
+ tune_eiscrit = 6.
+ tune_sc_eis = 6.
+ tune_sc_invmin = 100.
+ tune_sc_invmax = 2500.
 /
 
 ! output_nml: control the output ------------------------------------------------ 
@@ -399,8 +444,8 @@ cat > ${basedir}/run/${atmo_namelist} << EOF
   irad_n2o    = 4           ! 4: from greenhouse gas scenario
   irad_cfc11  = 4           ! 4: from greenhouse gas scenario
   irad_cfc12  = 4           ! 4: from greenhouse gas scenario
-  irad_o3     = 79
-  irad_aero   = 6
+  irad_o3     = 5
+  irad_aero   = 18
   albedo_type = 2          ! Modis albedo
   direct_albedo = 4
   albedo_whitecap = 1
diff --git a/run/tolerance/hashes/balfrin_cpu_nvidia b/run/tolerance/hashes/balfrin_cpu_nvidia
index cbaf5c8cc5..cad13dfdac 100644
--- a/run/tolerance/hashes/balfrin_cpu_nvidia
+++ b/run/tolerance/hashes/balfrin_cpu_nvidia
@@ -4,21 +4,21 @@
 icon_data_rootFolder: /scratch/mch/jenkins/icon/pool/data/ICON
 builder: balfrin_cpu_nvidia
 # The list below maps each experiment to its current experiment_hash
-"c2sm_clm_r13b03_seaice": cdad585ae467a153eb945ec2a60aaf4eeb57bc53
-"dwd_run_ICON_09_R2B4N5_EPS": d784b45604f06eb15bcc936871dab2a690760073
-"mch_ch_lowres": 9449daeaf5833b0e383c5a160b31a1555b789b20
-"mch_ch_r04b09_dace": 700ee1864a125205870b681d666558b384eddf8b
-"mch_icon-ch1_small": 2d84c650c2c6e73ed1c057349da9c9549c3f9bd7
-"mch_icon-ch2_small": cf5dc656fd65e21da494d0628df4bcb5b66b9be9
-"mch_kenda-ch1_dev2_small": e9682bde748cf0a7cc6a4a868b5950cf0fd6e1cb
-"mch_kenda-ch1_dev_small": 0d96dda5c252b9f609db85ca0cab94df38240efa
-"mch_kenda-ch1_small": 45291a693d5ee2d89c02c6286339868a31c61393
-"mch_opr_r04b07": 91c16879ac8829a31f6e470aed802675525d5798
-"mch_opr_r04b07_lhn_00": 43c91c8e84e4422f9461863d0964c437315259f7
-"mch_opr_r04b07_lhn_12_emvorado": 5a8f1cf8de42ca9b87b2bc60ba39da8f4505bee0
-"mch_opr_r04b07_nest": 9be588a272498417d2972b3e092e30530ed363bb
-"mch_opr_r04b07_sstice_inst": 4824374338e1e0dc228000e31adc190ea662ef70
-"mch_opr_r19b07_lpi": 7ef429390e6fce5fd892e37725e5b8a62eb3710b
-"mch_opr_r19b07_midnight": f0c49473e8cc5397e9a5ab171a8b19a7cef9f8cc
-"mch_opr_r19b07_turb": 71b97d0738fbe73e96b20e1e2e566f592a0bfc35
-"mch_pollen_test": 69480c7afdfe4cb4ca2b95d86fb58f03a2b295dd
+"c2sm_clm_r13b03_seaice": 9fd5125a6b74a8c7a7074fd41a5b7750ff303ac1
+"dwd_run_ICON_09_R2B4N5_EPS": 46a55885f52fc04e76038e717d451985f99aeb3a
+"mch_ch_lowres": 42647448335af146c69e6d3d39de5a75f45d00c0
+"mch_ch_r04b09_dace": f9a89c3a58593808d6d1c831826978d30b7e9072
+"mch_icon-ch1_small": 4fc448b0c06a291afd59c7f46517c776e878382f
+"mch_icon-ch2_small": a0ba460c747d1bf0966bb8d09ec0dcedea594e94
+"mch_kenda-ch1_dev2_small": 3724e9fc234ef18e8df7d1c3a5c52a159ebbd4a4
+"mch_kenda-ch1_dev_small": 7e03087162564ac7ddf9fe844436ba3c22c431c9
+"mch_kenda-ch1_small": 8b35a55203f5100fe364886801c79c2df689ddd3
+"mch_opr_r04b07": f920ef95153118f55169a18e431be20845f24047
+"mch_opr_r04b07_lhn_00": 197f409bcdd22389118f4e1690be6cce4964f8da
+"mch_opr_r04b07_lhn_12_emvorado": a731b21cb4f850e81e740915dfcdbbf475859f46
+"mch_opr_r04b07_nest": 6b0cad845573d9838edb4ed493acff6c50de4eac
+"mch_opr_r04b07_sstice_inst": e9d23760ce396b8b526718d1b811bc79debb911f
+"mch_opr_r19b07_lpi": 8b07776a2976be69a9b44352b9fdc6ad8af32103
+"mch_opr_r19b07_midnight": 7f7a5d8991caf3a4d673e962dd4cea00fd417415
+"mch_opr_r19b07_turb": fde1eb0b2083eb1a8a4c48e5da9fa3e86c512a18
+"mch_pollen_test": f2e9c55626dadf3e83802f8d22d46697bd46286c
diff --git a/run/tolerance/hashes/balfrin_cpu_nvidia_mixed b/run/tolerance/hashes/balfrin_cpu_nvidia_mixed
index aae0a1017f..abda4e18b5 100644
--- a/run/tolerance/hashes/balfrin_cpu_nvidia_mixed
+++ b/run/tolerance/hashes/balfrin_cpu_nvidia_mixed
@@ -4,17 +4,17 @@
 icon_data_rootFolder: /scratch/mch/jenkins/icon/pool/data/ICON
 builder: balfrin_cpu_nvidia_mixed
 # The list below maps each experiment to its current experiment_hash
-"c2sm_clm_r13b03_seaice": df633390debf2748293a22e167800c805c4eee44
-"mch_ch_lowres": 419625e6d7c6f7a9f650b5e3a92a9ef0fb2fbd04
-"mch_icon-ch1_small": 7a8c3ddec268d2cd24836530af40315ed1684a29
-"mch_icon-ch2_small": 65de8637c70ec07ea91d8d6ce8ed9834cab89a88
-"mch_kenda-ch1_small": 204318528cde462ad4a29d09d64a744454598ec6
-"mch_opr_r04b07": 68b2217d7f01d030160d6c747c627f669ed81957
-"mch_opr_r04b07_lhn_00": 46067397f7433d1807b29bd14a36eacab1aeb8e5
-"mch_opr_r04b07_lhn_12_emvorado": 820fead88cb0114811a92ff6e64853c6fd968a84
-"mch_opr_r04b07_nest": 7807c71b2fafce101f8784ee99c7490d09c7ac45
-"mch_opr_r04b07_sstice_inst": 1cd50d25faf4d1b0626244e7ab5de356e4c42803
-"mch_opr_r19b07_lpi": fca3b5a31b129fd916a512aac32e8e2acd027aad
-"mch_opr_r19b07_midnight": 2abb919b2f423b5a367a69d6aa0989506bead420
-"mch_opr_r19b07_turb": c85e1e8e9b485748f82b82ff3012e4e9b8e6b24c
-"mch_pollen_test": b5248b6738f2f5aee24024aee66b47edd348bf84
+"c2sm_clm_r13b03_seaice": b456a4d8e10187a365b3aa78cee932c99a2e16b5
+"mch_ch_lowres": d419a94fdb6e1353e16af48e85290d7a5d19be9e
+"mch_icon-ch1_small": 17e5e726d64b03a37564db2977567ebea45ac278
+"mch_icon-ch2_small": 6a673dea1dfef6f347438371a2859d08c1774440
+"mch_kenda-ch1_small": 1227aab850827c3bf115b43c62887db1310f9a6f
+"mch_opr_r04b07": e7b4f1da538ec5c2a4670a31d42884728a127ded
+"mch_opr_r04b07_lhn_00": 59d9532e83cc1a2338cc170e98f4e56cf6d392f3
+"mch_opr_r04b07_lhn_12_emvorado": 8fcee2531ef205166686bfd6c91ae84584fffe32
+"mch_opr_r04b07_nest": 7112c2b7c7c8ce7dd67bf2bac42234dcc59a65b9
+"mch_opr_r04b07_sstice_inst": 171821f3235cb660d0cb202f31ce42f32a3f82e5
+"mch_opr_r19b07_lpi": 4fea14f580da4f98368e334db9c066c0d65d9872
+"mch_opr_r19b07_midnight": e0affabd714edef4815b89e049450bab5284eeee
+"mch_opr_r19b07_turb": 541cbaf5a8548d74f335abe00b3858a95968f51a
+"mch_pollen_test": b530b762ce22984d8f9e3628671b17619c48cfe8
diff --git a/scripts/buildbot_scripts/create_list_merge2rc b/scripts/buildbot_scripts/create_list_merge2rc
index 3c0f8a8a1e..0af3e100dc 100755
--- a/scripts/buildbot_scripts/create_list_merge2rc
+++ b/scripts/buildbot_scripts/create_list_merge2rc
@@ -312,7 +312,8 @@ $addexp  checksuite.infrastructure/checkExternals/exp.check_externals_LEVANTE.ru
 $addexp  checksuite.infrastructure/checkExternals/exp.check_externals_LEVANTE_gpu.run --builders levante_gpu_nvhpc --list ${listname}
 
 # icon-clm tests
-$addexp "checksuite.clm/check.ICON_CLM" --builders "levante_intel levante_gcc_hybrid" --list ${listname} --runflags="ntasks=32 queue=shared"
+$addexp "checksuite.clm/check.ICON_CLM" --builders "levante_intel levante_gcc_hybrid levante_cpu_nvhpc" --list ${listname} --runflags="ntasks=32 queue=shared"
+$addexp "checksuite.clm/clmexp.ICON_CLM" --builders "levante_gpu_nvhpc" --list ${listname}
 $addexp "checksuite.clm/check.ICON_CLM" --builders "DWD_nec_hybrid" --list ${listname}
 $addexp "checksuite.clm/clmexp.ICON_CLM_global_mean_no_boundary" --builders "levante_intel_hybrid levante_gcc_hybrid" --list $listname
 
diff --git a/scripts/experiments/c2sm/clm_experiments.yml b/scripts/experiments/c2sm/clm_experiments.yml
new file mode 100644
index 0000000000..7486b49a81
--- /dev/null
+++ b/scripts/experiments/c2sm/clm_experiments.yml
@@ -0,0 +1,22 @@
+# ICON
+#
+# ------------------------------------------
+# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
+# Contact information: icon-model.org
+# See AUTHORS.TXT for a list of authors
+# See LICENSES/ for license information
+# SPDX-License-Identifier: BSD-3-Clause
+# ------------------------------------------
+
+experiments:
+  - name: c2sm_clm_r13b03_seaice
+    check: checksuite.icon-dev/check.c2sm_clm_r13b03_seaice
+    types: ['atm_3d_ml']
+    dates: ['19790201T180000Z', '19790201T181200Z', '19790201T181800Z', '19790201T182400Z', '19790201T183000Z']
+    restart_date: ['19790201T180000Z']
+    tolerance:
+      perturb_amplitude:
+        - mixed: 1e-7
+        - double: 1e-14
+      file_id:
+        - NetCDF: ['*atm_3d*.nc']
diff --git a/scripts/experiments/c2sm/clm_tests.yml b/scripts/experiments/c2sm/clm_tests.yml
new file mode 100644
index 0000000000..b68b70cb9a
--- /dev/null
+++ b/scripts/experiments/c2sm/clm_tests.yml
@@ -0,0 +1,23 @@
+# ICON
+#
+# ------------------------------------------
+# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
+# Contact information: icon-model.org
+# See AUTHORS.TXT for a list of authors
+# See LICENSES/ for license information
+# SPDX-License-Identifier: BSD-3-Clause
+# ------------------------------------------
+
+tests:
+  - name: c2sm_clm_r13b03_seaice
+    machines:
+      - name: balfrin
+    refgen: ['balfrin_cpu_nvidia','balfrin_cpu_nvidia_mixed']
+    tags: ['atm', 'merge2rc','probtest']
+    checksuite_modes:
+      - balfrin: 't'
+    ensemble_num:
+      - balfrin_cpu_nvidia: [11,42,45,31,14,24,34,43,48,1,50,46,41]
+      - balfrin_cpu_nvidia_mixed: [37,6,17,31,18,41,28,43,40]
+    tolerance_factor:
+      - balfrin: 10
diff --git a/src/atm_dyn_iconam/mo_nh_stepping.f90 b/src/atm_dyn_iconam/mo_nh_stepping.f90
index cff2fe650c..0fa950bc75 100644
--- a/src/atm_dyn_iconam/mo_nh_stepping.f90
+++ b/src/atm_dyn_iconam/mo_nh_stepping.f90
@@ -1192,7 +1192,7 @@ MODULE mo_nh_stepping
             CALL nwp_vdiff_update_seaice ( &
                 & p_patch(jg), .TRUE., p_lnd_state(jg)%diag_lnd%fr_seaice(:,:), &
                 & ext_data(jg)%atm%list_sea, ext_data(jg)%atm%list_seaice, &
-                & p_lnd_state(jg)%prog_wtr(nnow_rcf(jg)), lacc=.FALSE. &
+                & p_lnd_state(jg)%prog_wtr(nnow_rcf(jg)), lacc=.TRUE. &
               )
           ELSE
             ! rebuild index lists for water and seaice based on fr_seaice, 
diff --git a/src/atm_phy_bcs/mo_bc_aeropt_cmip6_volc.f90 b/src/atm_phy_bcs/mo_bc_aeropt_cmip6_volc.f90
index c4b8ad6ad4..5d179ef21a 100644
--- a/src/atm_phy_bcs/mo_bc_aeropt_cmip6_volc.f90
+++ b/src/atm_phy_bcs/mo_bc_aeropt_cmip6_volc.f90
@@ -25,6 +25,7 @@ MODULE mo_bc_aeropt_cmip6_volc
   USE mo_bcs_time_interpolation, ONLY: t_time_interpolation_weights, &
        &                               calculate_time_interpolation_weights
   USE mo_time_config,            ONLY: time_config
+  USE mo_fortran_tools,          ONLY: assert_acc_device_only
 
   IMPLICIT NONE
 
@@ -181,10 +182,6 @@ CONTAINS
 
     DEALLOCATE(zalt, zlat)
 
-    !$ACC UPDATE DEVICE(aod_v_s, ext_v_s, ssa_v_s, asy_v_s, aod_v_t, ext_v_t, ssa_v_t) &
-    !$ACC   DEVICE(r_alt_clim, r_lat_clim) &
-    !$ACC   ASYNC(1)
-
   END SUBROUTINE su_bc_aeropt_cmip6_volc
 
 
@@ -293,11 +290,13 @@ CONTAINS
 
       pre_year = mtime_current%date%year
 
+      ! The following arrays are created in su_bc_aeropt_cmip6_volc and changed in read_months_bc_aeropt_cmip6_volc
       !$ACC UPDATE DEVICE(aod_v_s, ext_v_s, ssa_v_s, asy_v_s, aod_v_t, ext_v_t, ssa_v_t) &
       !$ACC   DEVICE(r_alt_clim, r_lat_clim) &
       !$ACC   ASYNC(1)
 
     END IF ! iyear > pre_year
+
   END SUBROUTINE read_bc_aeropt_cmip6_volc
 
 
@@ -309,7 +308,7 @@ CONTAINS
       & krow,                  nb_sw,           nb_lw,                &
       & zf,                    dz,                                    &
       & paer_tau_sw_vr,        paer_piz_sw_vr,  paer_cg_sw_vr,        &
-      & paer_tau_lw_vr                                                )
+      & paer_tau_lw_vr,        lacc                                   )
 
     ! INPUT PARAMETERS
     TYPE(datetime), POINTER, INTENT(IN) :: current_date !< Current date and time.
@@ -354,12 +353,20 @@ CONTAINS
     TYPE(t_time_interpolation_weights) :: tiw
     INTEGER :: nm1, nm2
 
+    LOGICAL, OPTIONAL, INTENT(IN) :: lacc
+
     CHARACTER(len=*), PARAMETER :: subroutine_name = &
         & 'mo_bc_aeropt_cmip6_volc:set_bc_aeropt_cmip6_volc'
 
+    CALL assert_acc_device_only(subroutine_name, lacc)
+
     tiw = calculate_time_interpolation_weights(current_date)
     nm1 = tiw%month1_index
     nm2 = tiw%month2_index
+    !$ACC DATA COPYIN(tiw) &
+    !$ACC   CREATE(kindex, l_kindex, wgt1_lat, wgt2_lat, inmw1_lat, inmw2_lat) &
+    !$ACC   CREATE(zext_s, zomg_s, zasy_s, zaod_s, zfact_s, zext_t, zomg_t, zaod_t, zfact_t) &
+    !$ACC   CREATE(zext_s_int, zext_t_int)
 
     IF (current_date%date%year /= pre_year) THEN
       WRITE (message_text,'(A,I4,A,I4)') 'Stale data: requested year is', current_date%date%year, &
@@ -377,7 +384,7 @@ CONTAINS
     dz_clim=r_alt_clim(1)-r_alt_clim(2)
     z_max_lim_clim=r_alt_clim(1)+0.5_wp*dz_clim
     CALL altitude_index( &
-        & jcs,            kproma,     zf,     dz_clim, &
+        & jcs, klev, kproma, zf, dz_clim, &
         & z_max_lim_clim, k_alt_clim, kindex, l_kindex )
 
     p_lat_shift=r_lat_shift
@@ -386,43 +393,50 @@ CONTAINS
         & jg,          jcs,            kproma,            kbdim,           &
         & krow,        wgt1_lat,       wgt2_lat,          inmw1_lat,       &
         & inmw2_lat,   p_lat_shift,    p_rdeltalat,       r_lat_clim,      &
-        & lat_clim,    norder                                              )
+        & lat_clim,    norder,         lacc                                )
 
+    !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
     ! 2. Solar radiation
     ! 2.1 interpolate optical properties solar radiation
+    !$ACC LOOP SEQ
     DO jwl=1,nb_sw
+      !$ACC LOOP SEQ
       DO jk=1,klev
+        !$ACC LOOP GANG(STATIC: 1) VECTOR PRIVATE(idx_lat_1, idx_lat_2, w1_lat, w2_lat, idx_lev)
         DO jl=jcs,kproma
-          idx_lat_1=inmw1_lat(jl)
-          idx_lat_2=inmw2_lat(jl)
-          w1_lat=wgt1_lat(jl)
-          w2_lat=wgt2_lat(jl)
-          idx_lev=kindex(jl,jk)
-          zext_s(jl,jk,jwl)=tiw%weight1*(w1_lat*ext_v_s(jwl,idx_lev,idx_lat_1,nm1)+ &
-                                        w2_lat*ext_v_s(jwl,idx_lev,idx_lat_2,nm1))+ &
-                            tiw%weight2*(w1_lat*ext_v_s(jwl,idx_lev,idx_lat_1,nm2)+ &
-                                        w2_lat*ext_v_s(jwl,idx_lev,idx_lat_2,nm2))
-          zomg_s(jl,jk,jwl)=tiw%weight1*(w1_lat*ssa_v_s(jwl,idx_lev,idx_lat_1,nm1)+ &
-                                        w2_lat*ssa_v_s(jwl,idx_lev,idx_lat_2,nm1))+ &
-                            tiw%weight2*(w1_lat*ssa_v_s(jwl,idx_lev,idx_lat_1,nm2)+ &
-                                        w2_lat*ssa_v_s(jwl,idx_lev,idx_lat_2,nm2))
-          zasy_s(jl,jk,jwl)=tiw%weight1*(w1_lat*asy_v_s(jwl,idx_lev,idx_lat_1,nm1)+ &
-                                        w2_lat*asy_v_s(jwl,idx_lev,idx_lat_2,nm1))+ &
-                            tiw%weight2*(w1_lat*asy_v_s(jwl,idx_lev,idx_lat_1,nm2)+ &
-                                        w2_lat*asy_v_s(jwl,idx_lev,idx_lat_2,nm2))
+          idx_lat_1 = inmw1_lat(jl)
+          idx_lat_2 = inmw2_lat(jl)
+          w1_lat = wgt1_lat(jl)
+          w2_lat = wgt2_lat(jl)
+          idx_lev = kindex(jl,jk)
+          zext_s(jl,jk,jwl) = tiw%weight1*(w1_lat*ext_v_s(jwl,idx_lev,idx_lat_1,nm1) + &
+                                           w2_lat*ext_v_s(jwl,idx_lev,idx_lat_2,nm1))+ &
+                              tiw%weight2*(w1_lat*ext_v_s(jwl,idx_lev,idx_lat_1,nm2) + &
+                                           w2_lat*ext_v_s(jwl,idx_lev,idx_lat_2,nm2))
+          zomg_s(jl,jk,jwl) = tiw%weight1*(w1_lat*ssa_v_s(jwl,idx_lev,idx_lat_1,nm1) + &
+                                           w2_lat*ssa_v_s(jwl,idx_lev,idx_lat_2,nm1))+ &
+                              tiw%weight2*(w1_lat*ssa_v_s(jwl,idx_lev,idx_lat_1,nm2) + &
+                                           w2_lat*ssa_v_s(jwl,idx_lev,idx_lat_2,nm2))
+          zasy_s(jl,jk,jwl) = tiw%weight1*(w1_lat*asy_v_s(jwl,idx_lev,idx_lat_1,nm1) + &
+                                           w2_lat*asy_v_s(jwl,idx_lev,idx_lat_2,nm1))+ &
+                              tiw%weight2*(w1_lat*asy_v_s(jwl,idx_lev,idx_lat_1,nm2) + &
+                                           w2_lat*asy_v_s(jwl,idx_lev,idx_lat_2,nm2))
         END DO
       END DO
     END DO
+
+    !$ACC LOOP SEQ
     DO jwl=1,nb_sw
+      !$ACC LOOP GANG(STATIC: 1) VECTOR PRIVATE(idx_lat_1, idx_lat_2, w1_lat, w2_lat)
       DO jl=jcs,kproma
-        idx_lat_1=inmw1_lat(jl)
-        idx_lat_2=inmw2_lat(jl)
-        w1_lat=wgt1_lat(jl)
-        w2_lat=wgt2_lat(jl)
-        zaod_s(jl,jwl)=tiw%weight1*(w1_lat*aod_v_s(jwl,idx_lat_1,nm1)+ &
-                                   w2_lat*aod_v_s(jwl,idx_lat_2,nm1))+ &
-                       tiw%weight2*(w1_lat*aod_v_s(jwl,idx_lat_1,nm2)+ &
-                                   w2_lat*aod_v_s(jwl,idx_lat_2,nm2))
+        idx_lat_1 = inmw1_lat(jl)
+        idx_lat_2 = inmw2_lat(jl)
+        w1_lat = wgt1_lat(jl)
+        w2_lat = wgt2_lat(jl)
+        zaod_s(jl,jwl) = tiw%weight1*(w1_lat*aod_v_s(jwl,idx_lat_1,nm1) + &
+                                      w2_lat*aod_v_s(jwl,idx_lat_2,nm1))+ &
+                         tiw%weight2*(w1_lat*aod_v_s(jwl,idx_lat_1,nm2) + &
+                                      w2_lat*aod_v_s(jwl,idx_lat_2,nm2))
       END DO
     END DO
 
@@ -432,78 +446,113 @@ CONTAINS
     !     independent of the height level. Generally, the aerosol composition
     !     depends on height, this leads to different ratios of the extinction
     !     between two given wavelengths at different heights.
-    zext_s_int(jcs:kproma,1:nb_sw)=0._wp
-    DO jwl=1,nb_sw
-      DO jk=1,klev
-        zext_s_int(jcs:kproma,jwl)=zext_s_int(jcs:kproma,jwl) + &
-                 zext_s(jcs:kproma,jk,jwl)*dz(jcs:kproma,jk)
+    !$ACC LOOP SEQ
+    DO jwl = 1, nb_sw
+      !$ACC LOOP GANG(STATIC: 1) VECTOR
+      DO jl = jcs, kproma
+        zext_s_int(jl,jwl) = 0._wp
       END DO
     END DO
-    WHERE (zext_s_int(jcs:kproma,1:nb_sw) > 0._wp)
-      zfact_s(jcs:kproma,1:nb_sw)=zaod_s(jcs:kproma,1:nb_sw)/ &
-                              zext_s_int(jcs:kproma,1:nb_sw)
-    ELSEWHERE
-      zfact_s(jcs:kproma,1:nb_sw)=1._wp
-    END WHERE
-    DO jwl=1,nb_sw
-      DO jk=1,klev
-        zext_s(jcs:kproma,jk,jwl)=zext_s(jcs:kproma,jk,jwl)* &
-               dz(jcs:kproma,jk)*zfact_s(jcs:kproma,jwl)
+
+    !$ACC LOOP SEQ
+    DO jwl = 1, nb_sw
+      !$ACC LOOP SEQ
+      DO jk = 1, klev
+        !$ACC LOOP GANG(STATIC: 1) VECTOR
+        DO jl = jcs, kproma
+          zext_s_int(jl, jwl) = zext_s_int(jl, jwl) + &
+              & zext_s(jl, jk, jwl) * dz(jl, jk)
+        END DO
+      END DO
+    END DO
+
+    !$ACC LOOP SEQ
+    DO jwl = 1, nb_sw
+      !$ACC LOOP GANG(STATIC: 1) VECTOR
+      DO jl = jcs, kproma
+        IF (zext_s_int(jl, jwl) > 0._wp) THEN
+          zfact_s(jl, jwl) = zaod_s(jl, jwl) / zext_s_int(jl, jwl)
+        ELSE
+          zfact_s(jl, jwl) = 1._wp
+        END IF
+      END DO
+    END DO
+
+    !$ACC LOOP SEQ
+    DO jwl = 1, nb_sw
+      !$ACC LOOP SEQ
+      DO jk = 1, klev
+        !$ACC LOOP GANG(STATIC: 1) VECTOR
+        DO jl = jcs, kproma
+          zext_s(jl, jk, jwl) = zext_s(jl, jk, jwl) * dz(jl, jk) * zfact_s(jl, jwl)
+        END DO
       END DO
     END DO
 
     ! 2.3 add optical parameters to the optical parameters of aerosols
     !     inverse height profile
-    DO jk=1,klev
-      jki=klev-jk+1
-      WHERE (zext_s(jcs:kproma,jki,1:nb_sw)>0._wp)
-        paer_cg_sw_vr(jcs:kproma,jk,1:nb_sw)=paer_tau_sw_vr(jcs:kproma,jk,1:nb_sw)*&
-          paer_piz_sw_vr(jcs:kproma,jk,1:nb_sw)*paer_cg_sw_vr(jcs:kproma,jk,1:nb_sw)+&
-          zext_s(jcs:kproma,jki,1:nb_sw)*zomg_s(jcs:kproma,jki,1:nb_sw)*&
-          zasy_s(jcs:kproma,jki,1:nb_sw)
-        paer_piz_sw_vr(jcs:kproma,jk,1:nb_sw)=paer_tau_sw_vr(jcs:kproma,jk,1:nb_sw)*&
-          paer_piz_sw_vr(jcs:kproma,jk,1:nb_sw)+&
-          zext_s(jcs:kproma,jki,1:nb_sw)*zomg_s(jcs:kproma,jki,1:nb_sw)
-        paer_tau_sw_vr(jcs:kproma,jk,1:nb_sw)=paer_tau_sw_vr(jcs:kproma,jk,1:nb_sw)+&
-          zext_s(jcs:kproma,jki,1:nb_sw)
-        paer_piz_sw_vr(jcs:kproma,jk,1:nb_sw)=paer_piz_sw_vr(jcs:kproma,jk,1:nb_sw)/&
-          paer_tau_sw_vr(jcs:kproma,jk,1:nb_sw)
-        paer_cg_sw_vr(jcs:kproma,jk,1:nb_sw)=paer_cg_sw_vr(jcs:kproma,jk,1:nb_sw)/&
-          (paer_tau_sw_vr(jcs:kproma,jk,1:nb_sw)*paer_piz_sw_vr(jcs:kproma,jk,1:nb_sw))
-      END WHERE
+    !$ACC LOOP SEQ
+    DO jwl = 1, nb_sw
+      !$ACC LOOP SEQ
+      DO jk = 1, klev
+        jki = klev - jk + 1
+        !$ACC LOOP GANG(STATIC: 1) VECTOR
+        DO jl = jcs, kproma
+          IF (zext_s(jl, jki, jwl)>0._wp) THEN
+            paer_cg_sw_vr(jl, jk, jwl) = paer_tau_sw_vr(jl, jk, jwl) * &
+                & paer_piz_sw_vr(jl, jk, jwl) * paer_cg_sw_vr(jl, jk, jwl) + &
+                & zext_s(jl, jki, jwl) * zomg_s(jl, jki, jwl) * zasy_s(jl, jki, jwl)
+            paer_piz_sw_vr(jl, jk, jwl) = &
+                & paer_tau_sw_vr(jl, jk, jwl) * paer_piz_sw_vr(jl, jk, jwl) + &
+                & zext_s(jl, jki, jwl) * zomg_s(jl, jki, jwl)
+            paer_tau_sw_vr(jl, jk, jwl) = paer_tau_sw_vr(jl, jk, jwl) + &
+                & zext_s(jl, jki, jwl)
+            paer_piz_sw_vr(jl, jk, jwl) = paer_piz_sw_vr(jl, jk, jwl) / &
+                & paer_tau_sw_vr(jl, jk, jwl)
+            paer_cg_sw_vr(jl, jk, jwl) = paer_cg_sw_vr(jl, jk, jwl) / &
+                & (paer_tau_sw_vr(jl, jk, jwl) * paer_piz_sw_vr(jl, jk, jwl))
+          END IF
+        END DO
+      END DO
     END DO
 
     ! 3. far infrared
     ! 2.1 interpolate optical properties thermal radiation
-    DO jwl=1,nb_lw
-      DO jk=1,klev
-        DO jl=jcs,kproma
-          idx_lat_1=inmw1_lat(jl)
-          idx_lat_2=inmw2_lat(jl)
-          w1_lat=wgt1_lat(jl)
-          w2_lat=wgt2_lat(jl)
-          idx_lev=kindex(jl,jk)
-          zext_t(jl,jk,jwl)=tiw%weight1*(w1_lat*ext_v_t(jwl,idx_lev,idx_lat_1,nm1)+ &
-                                        w2_lat*ext_v_t(jwl,idx_lev,idx_lat_2,nm1))+ &
-                            tiw%weight2*(w1_lat*ext_v_t(jwl,idx_lev,idx_lat_1,nm2)+ &
-                                        w2_lat*ext_v_t(jwl,idx_lev,idx_lat_2,nm2))
-          zomg_t(jl,jk,jwl)=tiw%weight1*(w1_lat*ssa_v_t(jwl,idx_lev,idx_lat_1,nm1)+ &
-                                        w2_lat*ssa_v_t(jwl,idx_lev,idx_lat_2,nm1))+ &
-                            tiw%weight2*(w1_lat*ssa_v_t(jwl,idx_lev,idx_lat_1,nm2)+ &
-                                        w2_lat*ssa_v_t(jwl,idx_lev,idx_lat_2,nm2))
+    !$ACC LOOP SEQ
+    DO jwl = 1, nb_lw
+      !$ACC LOOP SEQ
+      DO jk = 1, klev
+        !$ACC LOOP GANG(STATIC: 1) VECTOR PRIVATE(idx_lat_1, idx_lat_2, w1_lat, w2_lat, idx_lev)
+        DO jl = jcs, kproma
+          idx_lat_1 = inmw1_lat(jl)
+          idx_lat_2 = inmw2_lat(jl)
+          w1_lat = wgt1_lat(jl)
+          w2_lat = wgt2_lat(jl)
+          idx_lev = kindex(jl,jk)
+          zext_t(jl,jk,jwl) = tiw%weight1*(w1_lat*ext_v_t(jwl,idx_lev,idx_lat_1,nm1)+ &
+                                           w2_lat*ext_v_t(jwl,idx_lev,idx_lat_2,nm1))+ &
+                              tiw%weight2*(w1_lat*ext_v_t(jwl,idx_lev,idx_lat_1,nm2)+ &
+                                           w2_lat*ext_v_t(jwl,idx_lev,idx_lat_2,nm2))
+          zomg_t(jl,jk,jwl) = tiw%weight1*(w1_lat*ssa_v_t(jwl,idx_lev,idx_lat_1,nm1)+ &
+                                           w2_lat*ssa_v_t(jwl,idx_lev,idx_lat_2,nm1))+ &
+                              tiw%weight2*(w1_lat*ssa_v_t(jwl,idx_lev,idx_lat_1,nm2)+ &
+                                           w2_lat*ssa_v_t(jwl,idx_lev,idx_lat_2,nm2))
         END DO
       END DO
     END DO
-    DO jwl=1,nb_lw
-      DO jl=jcs,kproma
-        idx_lat_1=inmw1_lat(jl)
-        idx_lat_2=inmw2_lat(jl)
-        w1_lat=wgt1_lat(jl)
-        w2_lat=wgt2_lat(jl)
-        zaod_t(jl,jwl)=tiw%weight1*(w1_lat*aod_v_t(jwl,idx_lat_1,nm1)+ &
-                                   w2_lat*aod_v_t(jwl,idx_lat_2,nm1))+ &
-                       tiw%weight2*(w1_lat*aod_v_t(jwl,idx_lat_1,nm2)+ &
-                                   w2_lat*aod_v_t(jwl,idx_lat_2,nm2))
+
+    !$ACC LOOP SEQ
+    DO jwl = 1, nb_lw
+      !$ACC LOOP GANG(STATIC: 1) VECTOR PRIVATE(idx_lat_1, idx_lat_2, w1_lat, w2_lat)
+      DO jl = jcs, kproma
+        idx_lat_1 = inmw1_lat(jl)
+        idx_lat_2 = inmw2_lat(jl)
+        w1_lat = wgt1_lat(jl)
+        w2_lat = wgt2_lat(jl)
+        zaod_t(jl,jwl) = tiw%weight1*(w1_lat*aod_v_t(jwl,idx_lat_1,nm1)+ &
+                                      w2_lat*aod_v_t(jwl,idx_lat_2,nm1))+ &
+                         tiw%weight2*(w1_lat*aod_v_t(jwl,idx_lat_1,nm2)+ &
+                                      w2_lat*aod_v_t(jwl,idx_lat_2,nm2))
       END DO
     END DO
 
@@ -513,45 +562,77 @@ CONTAINS
     !     independent of the height level. Generally, the aerosol composition
     !     depends on height, this leads to different ratios of the extinction
     !     between two given wavelengths at different heights.
-    zext_t_int(jcs:kproma,1:nb_lw)=0._wp
-    DO jwl=1,nb_lw
-      DO jk=1,klev
-        zext_t_int(jcs:kproma,jwl)=zext_t_int(jcs:kproma,jwl) + &
-                zext_t(jcs:kproma,jk,jwl)*dz(jcs:kproma,jk)
+    !$ACC LOOP SEQ
+    DO jwl = 1, nb_lw
+      !$ACC LOOP GANG(STATIC: 1) VECTOR
+      DO jl = jcs, kproma
+        zext_t_int(jl, jwl) = 0._wp
       END DO
     END DO
-    WHERE (zext_t_int(jcs:kproma,1:nb_lw) > 0._wp)
-      zfact_t(jcs:kproma,1:nb_lw)=zaod_t(jcs:kproma,1:nb_lw)/ &
-                              zext_t_int(jcs:kproma,1:nb_lw)
-    ELSEWHERE
-      zfact_t(jcs:kproma,1:nb_lw)=1._wp
-    END WHERE
-    DO jwl=1,nb_lw
-      DO jk=1,klev
-        zext_t(jcs:kproma,jk,jwl)=zext_t(jcs:kproma,jk,jwl)* &
-              dz(jcs:kproma,jk)*zfact_t(jcs:kproma,jwl)
+
+    !$ACC LOOP SEQ
+    DO jwl = 1, nb_lw
+      !$ACC LOOP SEQ
+      DO jk = 1, klev
+        !$ACC LOOP GANG(STATIC: 1) VECTOR
+        DO jl = jcs, kproma
+          zext_t_int(jl,jwl) = zext_t_int(jl,jwl) + zext_t(jl,jk,jwl) * dz(jl,jk)
+        END DO
+      END DO
+    END DO
+
+    !$ACC LOOP SEQ
+    DO jwl = 1, nb_lw
+      !$ACC LOOP GANG(STATIC: 1) VECTOR
+      DO jl = jcs, kproma
+        IF (zext_t_int(jl, jwl) > 0._wp) THEN
+          zfact_t(jl, jwl) = zaod_t(jl, jwl) / zext_t_int(jl, jwl)
+        ELSE
+          zfact_t(jl, jwl) = 1._wp
+        END IF
+      END DO
+    END DO
+
+    !$ACC LOOP SEQ
+    DO jwl = 1, nb_lw
+      !$ACC LOOP SEQ
+      DO jk = 1, klev
+        !$ACC LOOP GANG(STATIC: 1) VECTOR
+        DO jl = jcs, kproma
+          zext_t(jl, jk, jwl) = zext_t(jl, jk, jwl) * dz(jl, jk) * zfact_t(jl, jwl)
+        END DO
       END DO
     END DO
 
     ! 2.3 add optical parameters to the optical parameters of aerosols
     !     inverse height profile
-    DO jk=1,klev
-      jki=klev-jk+1
-      ! use explicit DO loop to circumvent possible SXf90 compiler bug
-      DO jc = jcs,kproma
-        paer_tau_lw_vr(jc,jk,1:nb_lw)=paer_tau_lw_vr(jc,jk,1:nb_lw) + &
-              zext_t(jc,jki,1:nb_lw)*(1._wp-zomg_t(jc,jki,1:nb_lw))
-      ENDDO
+    !$ACC LOOP SEQ
+    DO jwl = 1, nb_lw
+      !$ACC LOOP SEQ
+      DO jk = 1, klev
+        jki = klev - jk + 1
+
+        !$ACC LOOP GANG(STATIC: 1) VECTOR
+        DO jl = jcs, kproma
+          paer_tau_lw_vr(jl, jk, jwl) = paer_tau_lw_vr(jl, jk, jwl) + &
+              & zext_t(jl, jki, jwl) * (1._wp - zomg_t(jl,jki,jwl))
+        END DO
+      END DO
     END DO
+    !$ACC END PARALLEL
+
+    !$ACC WAIT(1)
+    !$ACC END DATA
 
   END SUBROUTINE add_bc_aeropt_cmip6_volc
 
   !------------------------------------------------------------------------
   SUBROUTINE altitude_index ( &
-        & jcs, kproma, zf, dz_clim, z_max_lim_clim, k_lev_clim, kindex, l_kindex &
+        & jcs, klev, kproma, zf, dz_clim, z_max_lim_clim, k_lev_clim, kindex, l_kindex &
       )
 
     INTEGER, INTENT(IN) :: jcs !< Minimum block index.
+    INTEGER, INTENT(IN) :: klev !< Number of vertical levels.
     INTEGER, INTENT(IN) :: kproma !< Maximum block index.
     REAL(wp), INTENT(IN) :: zf(:,:) !< Mid-layer altitudes of ICON grid (jc,jl).
     REAL(wp), INTENT(IN) :: dz_clim !< Layer thickness of climatology.
@@ -563,16 +644,25 @@ CONTAINS
     LOGICAL, INTENT(OUT) :: l_kindex(:,:)
 
     REAL(wp) :: dz_clim_inv
+    INTEGER :: jc, jl !< loop indices
 
     dz_clim_inv = 1._wp/dz_clim
-    kindex(jcs:kproma,:) = FLOOR((z_max_lim_clim-zf(jcs:kproma,:))*dz_clim_inv)+1
-
-    WHERE (kindex(jcs:kproma,:) < 1 .OR. kindex(jcs:kproma,:) > k_alt_clim)
-      l_kindex(jcs:kproma,:) = .FALSE.
-      kindex(jcs:kproma,:) = k_lev_clim+1
-    ELSEWHERE
-      l_kindex(jcs:kproma,:) = .TRUE.
-    END WHERE
+
+    !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
+    !$ACC LOOP GANG VECTOR COLLAPSE(2)
+    DO jl = 1, klev
+      DO jc = jcs, kproma
+        kindex(jc,jl) = FLOOR((z_max_lim_clim-zf(jc,jl))*dz_clim_inv)+1
+        IF (kindex(jc,jl) < 1 .OR. kindex(jc,jl) > k_alt_clim) THEN
+          l_kindex(jc,jl) = .FALSE.
+          kindex(jc,jl) = k_lev_clim+1
+        ELSE
+          l_kindex(jc,jl) = .TRUE.
+        ENDIF
+      ENDDO
+    ENDDO
+    !$ACC END PARALLEL
+
   END SUBROUTINE altitude_index
 
   !>
diff --git a/src/atm_phy_bcs/mo_bc_aeropt_kinne.f90 b/src/atm_phy_bcs/mo_bc_aeropt_kinne.f90
index 0e6ad102ab..47f7365963 100644
--- a/src/atm_phy_bcs/mo_bc_aeropt_kinne.f90
+++ b/src/atm_phy_bcs/mo_bc_aeropt_kinne.f90
@@ -1,7 +1,3 @@
-!
-! Read and apply monthly aerosol optical properties of S. Kinne
-! from yearly files.
-!
 ! ICON
 !
 ! ---------------------------------------------------------------
@@ -13,6 +9,9 @@
 ! SPDX-License-Identifier: BSD-3-Clause
 ! ---------------------------------------------------------------
 
+! Read and apply monthly aerosol optical properties of S. Kinne
+! from yearly files.
+
 MODULE mo_bc_aeropt_kinne
 
   USE mo_kind,                 ONLY: wp, i8
@@ -20,7 +19,7 @@ MODULE mo_bc_aeropt_kinne
   USE mo_impl_constants,       ONLY: max_dom
   USE mo_grid_config,          ONLY: n_dom
   USE mo_parallel_config,      ONLY: nproma
-  USE mo_exception,            ONLY: finish, message, message_text, warning
+  USE mo_exception,            ONLY: finish, message, message_text
   USE mo_io_config,            ONLY: default_read_method
   USE mo_time_config,          ONLY: time_config
   USE mo_read_interface,       ONLY: openInputFile, closeFile, on_cells, &
@@ -32,6 +31,7 @@ MODULE mo_bc_aeropt_kinne
   USE mo_timer,                ONLY: ltimer, timer_start, timer_stop, &
     &                                timer_coupling
   USE mo_atmo_aero_provider_coupling, ONLY: couple_atmo_to_aero_provider
+  USE mo_fortran_tools,        ONLY: set_acc_host_or_device
 
   IMPLICIT NONE
 
@@ -87,7 +87,7 @@ SUBROUTINE su_bc_aeropt_kinne(p_patch, nbndlw, nbndsw, opt_from_coupler)
 
   INTEGER                         :: jg
   INTEGER                         :: nblks_len, nblks
-  LOGICAL                         :: from_coupler = .FALSE.
+  LOGICAL                         :: from_coupler
 
   jg = p_patch%id
 
@@ -123,8 +123,12 @@ SUBROUTINE su_bc_aeropt_kinne(p_patch, nbndlw, nbndsw, opt_from_coupler)
   ENDIF
 
 ! on first call allocate structure for all grids
-  IF ( jg == 1 ) ALLOCATE(ext_aeropt_kinne(n_dom))
+  IF ( jg == 1 ) THEN
+    ALLOCATE(ext_aeropt_kinne(n_dom))
+    !$ACC ENTER DATA CREATE(ext_aeropt_kinne)
+  END IF
 
+  from_coupler = .FALSE.
   IF (PRESENT(opt_from_coupler)) from_coupler = opt_from_coupler
 
   IF ( from_coupler ) THEN
@@ -145,19 +149,17 @@ SUBROUTINE su_bc_aeropt_kinne(p_patch, nbndlw, nbndsw, opt_from_coupler)
   CALL message('mo_bc_aeropt_kinne:su_bc_aeropt_kinne', message_text)
 
 ! allocate memory for optical properties on grid jg
-  ALLOCATE(ext_aeropt_kinne(jg)% aod_c_s(nblks_len,nbndsw,nblks,imonth_beg:imonth_end))
-  ALLOCATE(ext_aeropt_kinne(jg)% aod_f_s(nblks_len,nbndsw,nblks,imonth_beg:imonth_end))
-  ALLOCATE(ext_aeropt_kinne(jg)% ssa_c_s(nblks_len,nbndsw,nblks,imonth_beg:imonth_end))
-  ALLOCATE(ext_aeropt_kinne(jg)% ssa_f_s(nblks_len,nbndsw,nblks,imonth_beg:imonth_end))
-  ALLOCATE(ext_aeropt_kinne(jg)% asy_c_s(nblks_len,nbndsw,nblks,imonth_beg:imonth_end))
-  ALLOCATE(ext_aeropt_kinne(jg)% asy_f_s(nblks_len,nbndsw,nblks,imonth_beg:imonth_end))
-  ALLOCATE(ext_aeropt_kinne(jg)% aod_c_f(nblks_len,nbndlw,nblks,imonth_beg:imonth_end))
-  ALLOCATE(ext_aeropt_kinne(jg)% ssa_c_f(nblks_len,nbndlw,nblks,imonth_beg:imonth_end))
-  ALLOCATE(ext_aeropt_kinne(jg)% asy_c_f(nblks_len,nbndlw,nblks,imonth_beg:imonth_end))
-  ALLOCATE(ext_aeropt_kinne(jg)% z_km_aer_c_mo(nblks_len,lev_clim,nblks,imonth_beg:imonth_end))
-  ALLOCATE(ext_aeropt_kinne(jg)% z_km_aer_f_mo(nblks_len,lev_clim,nblks,imonth_beg:imonth_end))
-  !$ACC ENTER DATA CREATE(ext_aeropt_kinne(jg))
-
+  ALLOCATE(ext_aeropt_kinne(jg)%aod_c_s(nblks_len,nbndsw,nblks,imonth_beg:imonth_end))
+  ALLOCATE(ext_aeropt_kinne(jg)%aod_f_s(nblks_len,nbndsw,nblks,imonth_beg:imonth_end))
+  ALLOCATE(ext_aeropt_kinne(jg)%ssa_c_s(nblks_len,nbndsw,nblks,imonth_beg:imonth_end))
+  ALLOCATE(ext_aeropt_kinne(jg)%ssa_f_s(nblks_len,nbndsw,nblks,imonth_beg:imonth_end))
+  ALLOCATE(ext_aeropt_kinne(jg)%asy_c_s(nblks_len,nbndsw,nblks,imonth_beg:imonth_end))
+  ALLOCATE(ext_aeropt_kinne(jg)%asy_f_s(nblks_len,nbndsw,nblks,imonth_beg:imonth_end))
+  ALLOCATE(ext_aeropt_kinne(jg)%aod_c_f(nblks_len,nbndlw,nblks,imonth_beg:imonth_end))
+  ALLOCATE(ext_aeropt_kinne(jg)%ssa_c_f(nblks_len,nbndlw,nblks,imonth_beg:imonth_end))
+  ALLOCATE(ext_aeropt_kinne(jg)%asy_c_f(nblks_len,nbndlw,nblks,imonth_beg:imonth_end))
+  ALLOCATE(ext_aeropt_kinne(jg)%z_km_aer_c_mo(nblks_len,lev_clim,nblks,imonth_beg:imonth_end))
+  ALLOCATE(ext_aeropt_kinne(jg)%z_km_aer_f_mo(nblks_len,lev_clim,nblks,imonth_beg:imonth_end))
   !$ACC ENTER DATA CREATE(ext_aeropt_kinne(jg)%aod_c_s, ext_aeropt_kinne(jg)%aod_f_s) &
   !$ACC   CREATE(ext_aeropt_kinne(jg)%ssa_c_s, ext_aeropt_kinne(jg)%ssa_f_s) &
   !$ACC   CREATE(ext_aeropt_kinne(jg)%asy_c_s, ext_aeropt_kinne(jg)%asy_f_s) &
@@ -177,14 +179,6 @@ SUBROUTINE su_bc_aeropt_kinne(p_patch, nbndlw, nbndsw, opt_from_coupler)
   ext_aeropt_kinne(jg)% z_km_aer_c_mo(:,:,:,:) = 0._wp
   ext_aeropt_kinne(jg)% z_km_aer_f_mo(:,:,:,:) = 0._wp
 
-  !$ACC UPDATE DEVICE(ext_aeropt_kinne(jg)%aod_c_s, ext_aeropt_kinne(jg)%aod_f_s) &
-  !$ACC   DEVICE(ext_aeropt_kinne(jg)%ssa_c_s, ext_aeropt_kinne(jg)%ssa_f_s) &
-  !$ACC   DEVICE(ext_aeropt_kinne(jg)%asy_c_s, ext_aeropt_kinne(jg)%asy_f_s) &
-  !$ACC   DEVICE(ext_aeropt_kinne(jg)%aod_c_f, ext_aeropt_kinne(jg)%ssa_c_f) &
-  !$ACC   DEVICE(ext_aeropt_kinne(jg)%asy_c_f, ext_aeropt_kinne(jg)%z_km_aer_c_mo) &
-  !$ACC   DEVICE(ext_aeropt_kinne(jg)%z_km_aer_f_mo) &
-  !$ACC   ASYNC(1)
-
 END SUBROUTINE su_bc_aeropt_kinne
 
   !> SUBROUTINE shift_months_bc_aeropt_kinne -- shifts December of current year into imonth=0 and 
@@ -267,6 +261,7 @@ SUBROUTINE read_bc_aeropt_kinne(mtime_current, p_patch, l_filename_year, nbndlw,
       ext_aeropt_kinne(jg)%z_km_aer_f_mo, ext_aeropt_kinne(jg)%z_km_aer_c_mo)
     IF (ltimer) CALL timer_stop(timer_coupling)
 
+    ! Created in su_bc_aeropt_kinne and changed in couple_atmo_to_aero_provider
     !$ACC UPDATE DEVICE(ext_aeropt_kinne(jg)%aod_c_s, ext_aeropt_kinne(jg)%aod_f_s) &
     !$ACC   DEVICE(ext_aeropt_kinne(jg)%ssa_c_s, ext_aeropt_kinne(jg)%ssa_f_s) &
     !$ACC   DEVICE(ext_aeropt_kinne(jg)%asy_c_s, ext_aeropt_kinne(jg)%asy_f_s) &
@@ -363,6 +358,7 @@ SUBROUTINE read_bc_aeropt_kinne(mtime_current, p_patch, l_filename_year, nbndlw,
     pre_year(jg) = mtime_current%date%year
     is_transient(jg) = l_filename_year
 
+    ! Created in su_bc_aeropt_kinne and changed in read_months_bc_aeropt_kinne
     !$ACC UPDATE DEVICE(ext_aeropt_kinne(jg)%aod_c_s, ext_aeropt_kinne(jg)%aod_f_s) &
     !$ACC   DEVICE(ext_aeropt_kinne(jg)%ssa_c_s, ext_aeropt_kinne(jg)%ssa_f_s) &
     !$ACC   DEVICE(ext_aeropt_kinne(jg)%asy_c_s, ext_aeropt_kinne(jg)%asy_f_s) &
@@ -371,7 +367,8 @@ SUBROUTINE read_bc_aeropt_kinne(mtime_current, p_patch, l_filename_year, nbndlw,
     !$ACC   DEVICE(ext_aeropt_kinne(jg)%z_km_aer_f_mo) &
     !$ACC   ASYNC(1)
 
-  END IF    
+  END IF
+
 END SUBROUTINE read_bc_aeropt_kinne
 !-------------------------------------------------------------------------
 !> SUBROUTINE set_bc_aeropt_kinne
@@ -380,62 +377,64 @@ END SUBROUTINE read_bc_aeropt_kinne
 !! The height profile is taken into account.
 SUBROUTINE set_bc_aeropt_kinne (    current_date,                         &
           & jg,                                                           &
-          & jcs,                    kproma,             kbdim,            &
-          & klev,                   krow,                                 &
+          & jcs,                    jce,                nproma,           &
+          & klev,                   jb,                                   &
           & nb_sw,                  nb_lw,                                &
           & zf,                     dz,                                   &
           & paer_tau_sw_vr,         paer_piz_sw_vr,     paer_cg_sw_vr,    &
           & paer_tau_lw_vr,                                               & 
-          & opt_use_acc, opt_from_coupler )
+          & lacc,                   opt_from_coupler                      )
 
   ! !INPUT PARAMETERS
 
   TYPE(datetime), POINTER, INTENT(in) :: current_date
   INTEGER,INTENT(in)  :: jg,     &! grid index
-                         jcs,    &! actual block length (start)
-                         kproma, &! actual block length (end)
-                         kbdim,  &! maximum block length (=nproma)
+                         jcs,    &! actual block, start at column with index jcs
+                         jce,    &! actual block, end at column with index jce 
+                         nproma, &! maximum block length
                          klev,   &! number of vertical levels
-                         krow,   &! block index
+                         jb,     &! block index
                          nb_sw,  &! number of wave length bands (solar)
                          nb_lw    ! number of wave length bands (far IR)
-  REAL(wp),INTENT(in) :: zf(kbdim,klev)  ,& ! geometric height at full level [m]
-                         dz(kbdim,klev)     ! geometric height thickness     [m]
+  REAL(wp),INTENT(in) :: zf(nproma,klev)  ,& ! geometric height at full level [m]
+                         dz(nproma,klev)     ! geometric height thickness     [m]
 ! !OUTPUT PARAMETERS
-  REAL(wp),INTENT(out),DIMENSION(kbdim,klev,nb_sw):: &
+  REAL(wp),INTENT(out),DIMENSION(nproma,klev,nb_sw):: &
    paer_tau_sw_vr,   & !aerosol optical depth (solar), sum_i(tau_i)
    paer_piz_sw_vr,   & !weighted sum of single scattering albedos, 
                        !sum_i(tau_i*omega_i)
    paer_cg_sw_vr       !weighted sum of asymmetry factors, 
                        !sum_i(tau_i*omega_i*g_i)
-  REAL(wp),INTENT(out),DIMENSION(kbdim,klev,nb_lw):: &
+  REAL(wp),INTENT(out),DIMENSION(nproma,klev,nb_lw):: &
    paer_tau_lw_vr      !aerosol optical depth (far IR)
-  LOGICAL, INTENT(IN), OPTIONAL                          :: opt_use_acc
   LOGICAL, INTENT(IN), OPTIONAL                          :: opt_from_coupler
 
 ! !LOCAL VARIABLES
   
   INTEGER                           :: jl,jk,jwl
-  REAL(wp), DIMENSION(kbdim,klev)   :: zh_vr, &
+  REAL(wp), DIMENSION(nproma,klev)   :: zh_vr, &
                                        zdeltag_vr
-  REAL(wp), DIMENSION(kbdim)        :: zq_int ! integral height profile
-  REAL(wp), DIMENSION(kbdim,nb_lw)  :: zs_i
-  REAL(wp), DIMENSION(kbdim,nb_sw)  :: zt_c, zt_f, &
+  REAL(wp), DIMENSION(nproma)        :: zq_int ! integral height profile
+  REAL(wp), DIMENSION(nproma,nb_lw)  :: zs_i
+  REAL(wp), DIMENSION(nproma,nb_sw)  :: zt_c, zt_f, &
                                        zs_c, zs_f, &
-                                       zg_c, zg_f, & ! time interpolated
-                                       ! aod, ssa ,ssa*asy 
-                                       ! (coarse (c), fine natural (n), 
-                                       !  fine anthropogenic (a))
-                                       ztaua_c,ztaua_f ! optical depths
+                                       zg_c, zg_f ! time interpolated
+
+  REAL(wp)                           :: ztaua_c, ztaua_f ! optical depths
                                        ! at various altitudes
-  REAL(wp), DIMENSION(kbdim,klev)   :: zq_aod_c, zq_aod_f ! altitude profile
+  REAL(wp), DIMENSION(nproma,klev)    :: zq_aod_c, zq_aod_f ! altitude profile
                                        ! on echam grid (coarse and fine mode)
   INTEGER                           :: kindex ! index field
   TYPE(t_time_interpolation_weights) :: tiw
-  LOGICAL :: use_acc  = .FALSE.        ! Default: no acceleration
-  LOGICAL :: from_coupler = .FALSE.    ! Default: aerosol from interpolated files
+  LOGICAL :: from_coupler              ! Default: aerosol from interpolated files
+
+  LOGICAL, OPTIONAL, INTENT(in) :: lacc !< GPU flag
+  LOGICAL :: lzacc
+
+  CALL set_acc_host_or_device(lzacc, lacc)
+
+  from_coupler = .FALSE.
 
-  IF (PRESENT(opt_use_acc)) use_acc = opt_use_acc
   IF (PRESENT(opt_from_coupler)) from_coupler = opt_from_coupler
 
   tiw = calculate_time_interpolation_weights(current_date)
@@ -446,156 +445,156 @@ SUBROUTINE set_bc_aeropt_kinne (    current_date,                         &
     CALL finish('mo_bc_aeropt_kinne:set_bc_aeropt_kinne', message_text)
   END IF
 
-  !$ACC DATA PRESENT(zf, dz, paer_tau_sw_vr, paer_piz_sw_vr, paer_cg_sw_vr) &
-  !$ACC   PRESENT(paer_tau_lw_vr, ext_aeropt_kinne) &
-  !$ACC   CREATE(zh_vr, zdeltag_vr, zq_int, zs_i, zt_c, zt_f, zs_c, zs_f) &
-  !$ACC   CREATE(zg_c, zg_f, ztaua_c, ztaua_f, zq_aod_c, zq_aod_f) &
-  !$ACC   COPYIN(tiw) IF(use_acc)
+  !$ACC DATA CREATE(zh_vr, zdeltag_vr, zq_int, zs_i, zt_c, zt_f, zs_c, zs_f) &
+  !$ACC   CREATE(zg_c, zg_f, zq_aod_c, zq_aod_f) &
+  !$ACC   COPYIN(tiw) &
+  !$ACC   IF(lzacc)
+
+  !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1) IF(lzacc)
 
 ! (i) calculate altitude above NN and layer thickness in 
 !     echam for altitude profiles
-  !$ACC PARALLEL LOOP DEFAULT(PRESENT) GANG VECTOR COLLAPSE(2) ASYNC(1) IF(use_acc)
+  !$ACC LOOP SEQ
   DO jk=1,klev
-     DO jl=jcs,kproma
-        zdeltag_vr(jl,jk)=dz(jl,klev-jk+1)
-        zh_vr(jl,jk)=zf(jl,klev-jk+1)
-     END DO
+    !$ACC LOOP GANG(STATIC: 1) VECTOR
+    DO jl = jcs, jce
+      zdeltag_vr(jl,jk)=dz(jl,klev-jk+1)
+      zh_vr(jl,jk)=zf(jl,klev-jk+1)
+    END DO
   END DO
 
 ! (ii) calculate height profiles on echam grid for coarse and fine mode
-  !$ACC KERNELS DEFAULT(PRESENT) ASYNC(1) IF(use_acc)
-  zq_aod_f(jcs:kproma,1:klev)=0._wp
-  zq_aod_c(jcs:kproma,1:klev)=0._wp
-  !$ACC END KERNELS
+  !$ACC LOOP SEQ
+  DO jk = 1, klev
+    !$ACC LOOP GANG(STATIC: 1) VECTOR
+    DO jl = jcs, jce 
+      zq_aod_f(jl,jk)=0._wp
+      zq_aod_c(jl,jk)=0._wp
+    END DO
+  END DO
 
   IF ( from_coupler ) THEN
-    !$ACC PARALLEL LOOP DEFAULT(PRESENT) GANG VECTOR COLLAPSE(2) ASYNC(1) IF(use_acc)
-    DO jk=1,klev
-      DO jl=jcs,kproma
+    !$ACC LOOP SEQ
+    DO jk = 1, klev
+      !$ACC LOOP GANG(STATIC: 1) VECTOR PRIVATE(kindex)
+      DO jl = jcs, jce 
         kindex = MAX(INT(zh_vr(jl,jk)*rdz_clim+0.5_wp),1)
         IF (kindex > 0 .and. kindex <= lev_clim ) THEN
           zq_aod_c(jl,jk)= &
-            & ext_aeropt_kinne(jg)% z_km_aer_c_mo(jl,kindex,krow,1)
+            & ext_aeropt_kinne(jg)%z_km_aer_c_mo(jl,kindex,jb,1)
           zq_aod_f(jl,jk)= &
-            & ext_aeropt_kinne(jg)% z_km_aer_f_mo(jl,kindex,krow,1)
+            & ext_aeropt_kinne(jg)%z_km_aer_f_mo(jl,kindex,jb,1)
         END IF
       END DO
     END DO
   ELSE
-    !$ACC PARALLEL LOOP DEFAULT(PRESENT) GANG VECTOR COLLAPSE(2) ASYNC(1) IF(use_acc)
-    DO jk=1,klev
-      DO jl=jcs,kproma
+    !$ACC LOOP SEQ
+    DO jk = 1, klev
+      !$ACC LOOP GANG(STATIC: 1) VECTOR PRIVATE(kindex)
+      DO jl = jcs, jce
         kindex = MAX(INT(zh_vr(jl,jk)*rdz_clim+0.5_wp),1)
         IF (kindex > 0 .and. kindex <= lev_clim ) THEN
           zq_aod_c(jl,jk)= &
-            & ext_aeropt_kinne(jg)% z_km_aer_c_mo(jl,kindex,krow,tiw%month1_index)*tiw%weight1+ &
-            & ext_aeropt_kinne(jg)% z_km_aer_c_mo(jl,kindex,krow,tiw%month2_index)*tiw%weight2
+            & ext_aeropt_kinne(jg)%z_km_aer_c_mo(jl,kindex,jb,tiw%month1_index)*tiw%weight1+ &
+            & ext_aeropt_kinne(jg)%z_km_aer_c_mo(jl,kindex,jb,tiw%month2_index)*tiw%weight2
           zq_aod_f(jl,jk)= &
-            & ext_aeropt_kinne(jg)% z_km_aer_f_mo(jl,kindex,krow,tiw%month1_index)*tiw%weight1+ &
-            & ext_aeropt_kinne(jg)% z_km_aer_f_mo(jl,kindex,krow,tiw%month2_index)*tiw%weight2
+            & ext_aeropt_kinne(jg)%z_km_aer_f_mo(jl,kindex,jb,tiw%month1_index)*tiw%weight1+ &
+            & ext_aeropt_kinne(jg)%z_km_aer_f_mo(jl,kindex,jb,tiw%month2_index)*tiw%weight2
         END IF
       END DO
     END DO
   END IF
   
-! normalize height profile for coarse mode
-  !$ACC KERNELS DEFAULT(PRESENT) ASYNC(1) IF(use_acc)
-  zq_int(jcs:kproma)=0._wp
-  !$ACC END KERNELS
+  ! normalize height profile for coarse mode
+  !$ACC LOOP GANG(STATIC: 1) VECTOR
+  DO jl = jcs, jce
+    zq_int(jl)=0._wp
+  END DO
 
-  !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1) IF(use_acc)
   !$ACC LOOP SEQ
   DO jk=1,klev
-     !$ACC LOOP GANG VECTOR
-     DO jl=jcs,kproma
+    !$ACC LOOP GANG(STATIC: 1) VECTOR
+    DO jl=jcs,jce
         zq_int(jl)=zq_int(jl)+ &
                        & zq_aod_c(jl,jk)*zdeltag_vr(jl,jk)
      END DO
   END DO
-  !$ACC END PARALLEL
 
-  !$ACC PARALLEL LOOP DEFAULT(PRESENT) GANG VECTOR ASYNC(1) IF(use_acc)
-  DO jl=jcs,kproma
-     IF (zq_int(jl) <= 0._wp) zq_int(jl)=1._wp
+  !$ACC LOOP GANG(STATIC: 1) VECTOR
+  DO jl=jcs,jce
+     IF (zq_int(jl) <= 0._wp) zq_int(jl) = 1._wp
   END DO
 
-  !$ACC PARALLEL LOOP DEFAULT(PRESENT) GANG VECTOR COLLAPSE(2) ASYNC(1) IF(use_acc)
+  !$ACC LOOP SEQ
   DO jk=1,klev
-     DO jl=jcs,kproma
-        zq_aod_c(jl,jk)=zdeltag_vr(jl,jk)*zq_aod_c(jl,jk) / zq_int(jl)
-     END DO
+    !$ACC LOOP GANG(STATIC: 1) VECTOR
+    DO jl=jcs,jce
+      zq_aod_c(jl,jk)=zdeltag_vr(jl,jk)*zq_aod_c(jl,jk) / zq_int(jl)
+    END DO
   END DO
 
-! normalize height profile for fine mode
-  !$ACC KERNELS DEFAULT(PRESENT) ASYNC(1) IF(use_acc)
-  zq_int(jcs:kproma)=0._wp
-  !$ACC END KERNELS
+  ! normalize height profile for fine mode
+  !$ACC LOOP GANG(STATIC: 1) VECTOR
+  DO jl = jcs,jce 
+    zq_int(jl) = 0._wp
+  END DO
 
-  !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1) IF(use_acc)
   !$ACC LOOP SEQ
   DO jk=1,klev
-    !$ACC LOOP GANG VECTOR
-    DO jl=jcs,kproma
-       zq_int(jl)=zq_int(jl) + zq_aod_f(jl,jk)*zdeltag_vr(jl,jk)
+    !$ACC LOOP GANG(STATIC: 1) VECTOR
+    DO jl=jcs,jce
+      zq_int(jl) = zq_int(jl) + zq_aod_f(jl,jk)*zdeltag_vr(jl,jk)
     END DO
   END DO
-  !$ACC END PARALLEL
 
-  !$ACC PARALLEL LOOP DEFAULT(PRESENT) GANG VECTOR ASYNC(1) IF(use_acc)
-  DO jl=jcs,kproma
-    IF (zq_int(jl) <= 0._wp) zq_int(jl)=1._wp
+  !$ACC LOOP GANG(STATIC: 1) VECTOR
+  DO jl=jcs,jce
+    IF (zq_int(jl) <= 0._wp) zq_int(jl) = 1._wp
   END DO
 
-  !$ACC PARALLEL LOOP DEFAULT(PRESENT) GANG VECTOR COLLAPSE(2) ASYNC(1) IF(use_acc)
+  !$ACC LOOP SEQ
   DO jk=1,klev
-    DO jl=jcs,kproma
-      zq_aod_f(jl,jk)=zdeltag_vr(jl,jk)*zq_aod_f(jl,jk)/zq_int(jl)
+    !$ACC LOOP GANG(STATIC: 1) VECTOR
+    DO jl=jcs,jce
+      zq_aod_f(jl,jk) = zdeltag_vr(jl,jk)*zq_aod_f(jl,jk)/zq_int(jl)
     END DO
   END DO
 
 ! (iii) far infrared
-!  !$ACC KERNELS DEFAULT(PRESENT) COPYIN(tiw) ASYNC(1) IF(use_acc)
-!  IF ( from_coupler ) THEN
-!     zs_i(jcs:kproma,1:nb_lw)=1._wp-ext_aeropt_kinne(jg)%ssa_c_f(jcs:kproma,1:nb_lw,krow,1)
-!  ELSE
-!     zs_i(jcs:kproma,1:nb_lw)=1._wp-(tiw%weight1*ext_aeropt_kinne(jg)% ssa_c_f(jcs:kproma,1:nb_lw,krow,tiw%month1_index)+ &
-!                                     tiw%weight2*ext_aeropt_kinne(jg)% ssa_c_f(jcs:kproma,1:nb_lw,krow,tiw%month2_index))
-!  END IF
-!  !$ACC END KERNELS
-
   IF ( from_coupler ) THEN
-     !$ACC PARALLEL LOOP DEFAULT(PRESENT) GANG VECTOR COLLAPSE(2) ASYNC(1) IF(use_acc)
-      DO jwl=1,nb_lw
-         DO jl=jcs,kproma
-            zs_i(jl,jwl)=1._wp-ext_aeropt_kinne(jg)%ssa_c_f(jl, jwl, krow, 1)
-         END DO
+    !$ACC LOOP SEQ
+    DO jwl=1,nb_lw
+      !$ACC LOOP GANG(STATIC: 1) VECTOR
+      DO jl=jcs,jce
+        zs_i(jl,jwl) = 1._wp - ext_aeropt_kinne(jg)%ssa_c_f(jl,jwl,jb,1)
       END DO
+    END DO
   ELSE
-     !$ACC PARALLEL LOOP DEFAULT(PRESENT) GANG VECTOR COLLAPSE(2) ASYNC(1) IF(use_acc)
-      DO jwl=1,nb_lw
-         DO jl=jcs,kproma
-            zs_i(jl,jwl)=1._wp-(tiw%weight1*ext_aeropt_kinne(jg)% ssa_c_f(jl, jwl, krow, tiw%month1_index)+ &
-                                tiw%weight2*ext_aeropt_kinne(jg)% ssa_c_f(jl, jwl, krow, tiw%month2_index))
-         END DO
+    !$ACC LOOP SEQ
+    DO jwl=1,nb_lw
+      !$ACC LOOP GANG(STATIC: 1) VECTOR
+        DO jl=jcs,jce
+        zs_i(jl,jwl) = 1._wp - (tiw%weight1*ext_aeropt_kinne(jg)%ssa_c_f(jl,jwl,jb,tiw%month1_index) + &
+                                tiw%weight2*ext_aeropt_kinne(jg)%ssa_c_f(jl,jwl,jb,tiw%month2_index))
       END DO
+    END DO
   END IF
 
-  !$ACC PARALLEL LOOP DEFAULT(PRESENT) GANG VECTOR COLLAPSE(3) ASYNC(1) IF(use_acc)
+  !$ACC LOOP SEQ
   DO jk=1,klev
+     !$ACC LOOP SEQ
      DO jwl=1,nb_lw
-        DO jl=jcs,kproma
-           !
-           ! ATTENTION: The output data in paer_tau_lw_vr are stored with indices 1:kproma-jcs+1
-           !
+        !$ACC LOOP GANG(STATIC: 1) VECTOR
+        DO jl=jcs,jce
            IF ( from_coupler ) THEN
               paer_tau_lw_vr(jl,jk,jwl)=zq_aod_c(jl,jk) * &
                    zs_i(jl,jwl) * &
-                   ext_aeropt_kinne(jg)% aod_c_f(jl,jwl,krow,1)
+                   ext_aeropt_kinne(jg)% aod_c_f(jl,jwl,jb,1)
            ELSE
               paer_tau_lw_vr(jl,jk,jwl)=zq_aod_c(jl,jk) * &
                     zs_i(jl,jwl) * &
-                    (tiw%weight1*ext_aeropt_kinne(jg)% aod_c_f(jl,jwl,krow,tiw%month1_index) + &
-                    tiw%weight2*ext_aeropt_kinne(jg)% aod_c_f(jl,jwl,krow,tiw%month2_index))
+                    (tiw%weight1*ext_aeropt_kinne(jg)% aod_c_f(jl,jwl,jb,tiw%month1_index) + &
+                    tiw%weight2*ext_aeropt_kinne(jg)% aod_c_f(jl,jwl,jb,tiw%month2_index))
            END IF
         END DO
      END DO
@@ -604,67 +603,67 @@ SUBROUTINE set_bc_aeropt_kinne (    current_date,                         &
 ! (iv) solar radiation
 ! time interpolated single scattering albedo (omega_f, omega_c)
   IF ( from_coupler ) THEN
-      !$ACC PARALLEL LOOP DEFAULT(PRESENT) GANG VECTOR COLLAPSE(2) ASYNC(1) IF(use_acc)
-      DO jwl=1,nb_sw
-         DO jl=jcs,kproma
-            zs_c(jl, jwl) = ext_aeropt_kinne(jg)% ssa_c_s(jl, jwl,krow,1)
-            zs_f(jl, jwl) = ext_aeropt_kinne(jg)% ssa_f_s(jl, jwl,krow,1)
-
-            zg_c(jl, jwl) = ext_aeropt_kinne(jg)% asy_c_s(jl, jwl,krow,1)
-            zg_f(jl, jwl) = ext_aeropt_kinne(jg)% asy_f_s(jl, jwl,krow,1)
-
-            zt_c(jl, jwl) = ext_aeropt_kinne(jg)% aod_c_s(jl, jwl,krow,1)
-            zt_f(jl, jwl) = ext_aeropt_kinne(jg)% aod_f_s(jl, jwl,krow,1)
-         END DO
+    !$ACC LOOP SEQ
+    DO jwl = 1, nb_sw
+      !$ACC LOOP GANG(STATIC: 1) VECTOR
+      DO jl = jcs, jce
+        zs_c(jl,jwl) = ext_aeropt_kinne(jg)%ssa_c_s(jl,jwl,jb,1)
+        zs_f(jl,jwl) = ext_aeropt_kinne(jg)%ssa_f_s(jl,jwl,jb,1)
+        ! time interpolated asymmetry factor (g_c, g_{n,a})jb
+        zg_c(jl,jwl) = ext_aeropt_kinne(jg)%asy_c_s(jl,jwl,jb,1)
+        zg_f(jl,jwl) = ext_aeropt_kinne(jg)%asy_f_s(jl,jwl,jb,1)
+        ! time interpolated aerosol optical depths
+        zt_c(jl,jwl) = ext_aeropt_kinne(jg)%aod_c_s(jl,jwl,jb,1)
+        zt_f(jl,jwl) = ext_aeropt_kinne(jg)%aod_f_s(jl,jwl,jb,1)
       END DO
-      !$ACC END PARALLEL LOOP
+    END DO
   ELSE
-     !$ACC PARALLEL LOOP DEFAULT(PRESENT) GANG VECTOR COLLAPSE(2) ASYNC(1) IF(use_acc)
-      DO jwl=1,nb_sw
-         DO jl=jcs,kproma
-            zs_c(jl, jwl) = tiw%weight1*ext_aeropt_kinne(jg)% ssa_c_s(jl, jwl,krow,tiw%month1_index) + &
-                            tiw%weight2*ext_aeropt_kinne(jg)% ssa_c_s(jl, jwl,krow,tiw%month2_index)
-            zs_f(jl, jwl) = tiw%weight1*ext_aeropt_kinne(jg)% ssa_f_s(jl, jwl,krow,tiw%month1_index) + &
-                            tiw%weight2*ext_aeropt_kinne(jg)% ssa_f_s(jl, jwl,krow,tiw%month2_index)
-
-            zg_c(jl, jwl) = tiw%weight1*ext_aeropt_kinne(jg)% asy_c_s(jl, jwl,krow,tiw%month1_index) + &
-                            tiw%weight2*ext_aeropt_kinne(jg)% asy_c_s(jl, jwl,krow,tiw%month2_index)
-            zg_f(jl, jwl) = tiw%weight1*ext_aeropt_kinne(jg)% asy_f_s(jl, jwl,krow,tiw%month1_index) + &
-                            tiw%weight2*ext_aeropt_kinne(jg)% asy_f_s(jl, jwl,krow,tiw%month2_index)
-
-            zt_c(jl, jwl) = tiw%weight1*ext_aeropt_kinne(jg)% aod_c_s(jl, jwl,krow,tiw%month1_index) + &
-                            tiw%weight2*ext_aeropt_kinne(jg)% aod_c_s(jl, jwl,krow,tiw%month2_index)
-            zt_f(jl, jwl) = tiw%weight1*ext_aeropt_kinne(jg)% aod_f_s(jl, jwl,krow,tiw%month1_index) + &
-                            tiw%weight2*ext_aeropt_kinne(jg)% aod_f_s(jl, jwl,krow,tiw%month2_index)
-         END DO
+    !$ACC LOOP SEQ
+    DO jwl = 1, nb_sw
+      !$ACC LOOP GANG(STATIC: 1) VECTOR
+      DO jl = jcs, jce
+        zs_c(jl,jwl) = tiw%weight1*ext_aeropt_kinne(jg)%ssa_c_s(jl,jwl,jb,tiw%month1_index) + &
+                       tiw%weight2*ext_aeropt_kinne(jg)%ssa_c_s(jl,jwl,jb,tiw%month2_index)
+        zs_f(jl,jwl) = tiw%weight1*ext_aeropt_kinne(jg)%ssa_f_s(jl,jwl,jb,tiw%month1_index) + &
+                       tiw%weight2*ext_aeropt_kinne(jg)%ssa_f_s(jl,jwl,jb,tiw%month2_index)
+        ! time interpolated asymmetry factor (g_c, g_{n,a})
+        zg_c(jl,jwl) = tiw%weight1*ext_aeropt_kinne(jg)%asy_c_s(jl,jwl,jb,tiw%month1_index) + &
+                       tiw%weight2*ext_aeropt_kinne(jg)%asy_c_s(jl,jwl,jb,tiw%month2_index)
+        zg_f(jl,jwl) = tiw%weight1*ext_aeropt_kinne(jg)%asy_f_s(jl,jwl,jb,tiw%month1_index) + &
+                       tiw%weight2*ext_aeropt_kinne(jg)%asy_f_s(jl,jwl,jb,tiw%month2_index)
+        ! time interpolated aerosol optical depths
+        zt_c(jl,jwl) = tiw%weight1*ext_aeropt_kinne(jg)%aod_c_s(jl,jwl,jb,tiw%month1_index) + &
+                       tiw%weight2*ext_aeropt_kinne(jg)%aod_c_s(jl,jwl,jb,tiw%month2_index)
+        zt_f(jl,jwl) = tiw%weight1*ext_aeropt_kinne(jg)%aod_f_s(jl,jwl,jb,tiw%month1_index) + &
+                       tiw%weight2*ext_aeropt_kinne(jg)%aod_f_s(jl,jwl,jb,tiw%month2_index)
       END DO
-      !$ACC END PARALLEL LOOP
+    END DO
   END IF
- 
-! height interpolation
-! calculate optical properties
-  !$ACC PARALLEL LOOP DEFAULT(PRESENT) GANG VECTOR COLLAPSE(3) ASYNC(1) IF(use_acc)
+
+  ! height interpolation
+  ! calculate optical properties
+  !$ACC LOOP SEQ
   DO jk=1,klev
-     DO jwl=1,nb_sw
-        DO jl=jcs,kproma
+    !$ACC LOOP SEQ
+    DO jwl=1,nb_sw
+        !$ACC LOOP GANG(STATIC: 1) VECTOR PRIVATE(ztaua_c, ztaua_f)
+        DO jl=jcs,jce
            ! aerosol optical depth 
-           ztaua_c(jl,jwl) = zt_c(jl,jwl)*zq_aod_c(jl,jk)
-           ztaua_f(jl,jwl) = zt_f(jl,jwl)*zq_aod_f(jl,jk)
-           paer_tau_sw_vr(jl,jk,jwl) = &
-                         & ztaua_c(jl,jwl) + &
-                         & ztaua_f(jl,jwl) 
-           paer_piz_sw_vr(jl,jk,jwl) = &
-                      & ztaua_c(jl,jwl)*zs_c(jl,jwl) + &
-                      & ztaua_f(jl,jwl)*zs_f(jl,jwl)
+           ztaua_c = zt_c(jl,jwl)*zq_aod_c(jl,jk)
+           ztaua_f = zt_f(jl,jwl)*zq_aod_f(jl,jk)
+           paer_tau_sw_vr(jl,jk,jwl) = ztaua_c + ztaua_f
+           paer_piz_sw_vr(jl,jk,jwl) = ztaua_c * zs_c(jl,jwl) + ztaua_f * zs_f(jl,jwl)
+
            IF (paer_tau_sw_vr(jl,jk,jwl) /= 0._wp) THEN
               paer_piz_sw_vr(jl,jk,jwl) = paer_piz_sw_vr(jl,jk,jwl) / &
                                               & paer_tau_sw_vr(jl,jk,jwl)
            ELSE
               paer_piz_sw_vr(jl,jk,jwl) = 1._wp
            END IF
-           paer_cg_sw_vr(jl,jk,jwl)  = &
-                         & ztaua_c(jl,jwl)*zs_c(jl,jwl)*zg_c(jl,jwl) + &
-                         & ztaua_f(jl,jwl)*zs_f(jl,jwl)*zg_f(jl,jwl)
+
+           paer_cg_sw_vr(jl,jk,jwl) = &
+                         & ztaua_c*zs_c(jl,jwl)*zg_c(jl,jwl) + &
+                         & ztaua_f*zs_f(jl,jwl)*zg_f(jl,jwl)
            IF (paer_tau_sw_vr(jl,jk,jwl) /= 0._wp) THEN
               paer_cg_sw_vr (jl,jk,jwl) = paer_cg_sw_vr (jl,jk,jwl) / &
                                               & paer_piz_sw_vr(jl,jk,jwl) / &
@@ -675,6 +674,8 @@ SUBROUTINE set_bc_aeropt_kinne (    current_date,                         &
         END DO
      END DO
   END DO
+
+  !$ACC END PARALLEL
   !$ACC WAIT(1)
   !$ACC END DATA
   
@@ -850,4 +851,5 @@ END SUBROUTINE read_months_bc_aeropt_kinne
     CALL closeFile(stream_id)
 
   END SUBROUTINE read_single_month_bc_aeropt_kinne
+
 END MODULE mo_bc_aeropt_kinne
diff --git a/src/atm_phy_bcs/mo_bc_aeropt_splumes.f90 b/src/atm_phy_bcs/mo_bc_aeropt_splumes.f90
index ad271df2b3..90fb12c968 100644
--- a/src/atm_phy_bcs/mo_bc_aeropt_splumes.f90
+++ b/src/atm_phy_bcs/mo_bc_aeropt_splumes.f90
@@ -1,7 +1,3 @@
-!
-! Read and apply monthly aerosol optical properties of S. Kinne
-! from yearly files.
-!
 ! ICON
 !
 ! ---------------------------------------------------------------
@@ -13,6 +9,9 @@
 ! SPDX-License-Identifier: BSD-3-Clause
 ! ---------------------------------------------------------------
 
+! Read and apply monthly aerosol optical properties of S. Kinne
+! from yearly files.
+
 ! ---------------------------
 #include "consistent_fma.inc"
 ! ---------------------------
@@ -25,16 +24,11 @@ MODULE mo_bc_aeropt_splumes
                                    & read_bcast_real_2D, read_bcast_real_3D, &
                                    & closeFile
   USE mo_model_domain,         ONLY: p_patch
-  USE mo_impl_constants,       ONLY: min_rlcell_int, grf_bdywidth_c
-  USE mo_loopindices,          ONLY: get_indices_c
+  USE mo_fortran_tools,        ONLY: assert_acc_device_only
   USE mo_math_constants,       ONLY: rad2deg
   USE mtime,                   ONLY: datetime, getDayOfYearFromDateTime, &
-       &                             getNoOfSecondsElapsedInDayDateTime, &
        &                             getNoOfDaysInYearDateTime
   
-!!$, on_cells, &
-!!$    &                                t_stream_id, read_0D_real, read_3D_time
-
   IMPLICIT NONE
 
   PRIVATE
@@ -45,6 +39,8 @@ MODULE mo_bc_aeropt_splumes
        nfeatures = 2            ,& !< Number of features per plume
        ntimes    = 52           ,& !< Number of times resolved per year (52 => weekly resolution)
        nyears    = 251             !< Number of years of available forcing
+  CHARACTER(LEN=*), PARAMETER :: cfname = 'MACv2.0-SP_v1.nc'
+
   REAL(wp), POINTER ::                    &
        plume_lat   (:)  ,& !< (nplumes) latitude where plume maximizes
        plume_lon   (:)  ,& !< (nplumes) longitude where plume maximizes
@@ -72,19 +68,16 @@ MODULE mo_bc_aeropt_splumes
                            !< (nfeatures + 1) to account for BB background
        year_weight (:,:)    ,& !< (nyear,nplumes) Yearly weight for plume
        ann_cycle   (:,:,:)     !< (nfeatures,ntimes,nplumes) annual cycle for feature
-  REAL(wp)                 :: &
-       time_weight (nfeatures,nplumes), &    !< Time-weights to account for BB background
-     & time_weight_bg (nfeatures,nplumes)    !< as time_wight but for natural background in Twomey effect
+  LOGICAL                  :: sp_initialized = .FALSE.
 
-  CHARACTER(LEN=256)       :: cfname
-  LOGICAL                  :: sp_initialized
+  !$ACC DECLARE CREATE(angstrom, asy550, ssa550)
 
   CONTAINS
 
   ! -----------------------------------------------------------------
-  ! SETUP_BC_AEROPT_SPLUMES:  This subroutine should be called at initialization to 
+  ! setup_bc_aeropt_splumes:  This subroutine should be called at initialization to
   !            read the netcdf data that describes the simple plume
-  !            climatology.  The information needs to be either read 
+  !            climatology.  The information needs to be either read
   !            by each processor or distributed to processors.
   !
   SUBROUTINE setup_bc_aeropt_splumes
@@ -93,7 +86,6 @@ MODULE mo_bc_aeropt_splumes
     !
     INTEGER           :: ifile_id
 
-    cfname='MACv2.0-SP_v1.nc'
     CALL openInputFile(ifile_id, cfname)
 
     CALL read_1d_wrapper(ifile_id=ifile_id,        variable_name='plume_lat',&
@@ -182,21 +174,31 @@ MODULE mo_bc_aeropt_splumes
                        & module_name='mo_bc_aeropt_splumes',                  &
                        & sub_prog_name='setup_bc_aeropt_splumes'               )
     CALL closeFile(ifile_id)
+
     sp_initialized = .TRUE.
-    RETURN
-  END SUBROUTINE SETUP_BC_AEROPT_SPLUMES
+
+    !$ACC ENTER DATA CREATE(plume_lat, plume_lon, beta_a, beta_b, aod_spmx, aod_fmbg, ssa550) &
+    !$ACC   CREATE(asy550, angstrom, sig_lat_W, sig_lat_E, sig_lon_W, sig_lon_E, theta) &
+    !$ACC   CREATE(ftr_weight, year_weight, ann_cycle)
+
+    !$ACC UPDATE DEVICE(plume_lat, plume_lon, beta_a, beta_b, aod_spmx, aod_fmbg, ssa550) &
+    !$ACC   DEVICE(asy550, angstrom, sig_lat_W, sig_lat_E, sig_lon_W, sig_lon_E, theta) &
+    !$ACC   DEVICE(ftr_weight, year_weight, ann_cycle) ASYNC(1)
+
+  END SUBROUTINE setup_bc_aeropt_splumes
   ! ------------------------------------------------------------------------------------------------------------------------
   ! SET_TIME_WEIGHT:  The simple plume model assumes that meteorology constrains plume shape and that only source strength
   ! influences the amplitude of a plume associated with a given source region.   This routine retrieves the temporal weights
   ! for the plumes.  Each plume feature has its own temporal weights which varies yearly.  The annual cycle is indexed by
   ! week in the year and superimposed on the yearly mean value of the weight. 
   !
-  SUBROUTINE set_time_weight(year_fr)
+  SUBROUTINE set_time_weight(current_dt, time_weight, time_weight_bg)
     !
     ! ---------- 
     !
-    REAL(wp), INTENT(IN) ::  &
-         year_fr           !< Fractional Year (1850.0 - 2100.99)
+    TYPE(datetime), INTENT(IN) :: current_dt !< Current date and time
+    REAL(wp), INTENT(OUT) :: time_weight(nfeatures,nplumes) !< Time-weights to account for BB background
+    REAL(wp), INTENT(OUT) :: time_weight_bg(nfeatures,nplumes) !< as time_weight but for natural background in Twomey effect
 
     INTEGER          ::  &
          iyear          ,& !< Integer year values between 1 and 156 (1850-2100) 
@@ -205,138 +207,132 @@ MODULE mo_bc_aeropt_splumes
     !
     ! ---------- 
     !
-    iyear = FLOOR(year_fr) - 1849
-    iweek = FLOOR((year_fr - FLOOR(year_fr)) * ntimes) + 1
 
-    IF ((iweek > ntimes) .OR. (iweek < 1) .OR. (iyear > nyears) .OR. (iyear < 1)) STOP 'Time out of bounds in set_time_weight'
+    iyear = INT(current_dt%date%year) - 1849
+    iweek = 1 + FLOOR( &
+        & REAL(getDayOfYearFromDateTime(current_dt) - 1, wp) / REAL(getNoOfDaysInYearDateTime(current_dt), wp) * ntimes &
+      )
+
+    IF ((iweek > ntimes) .OR. (iweek < 1) .OR. (iyear > nyears) .OR. (iyear < 1)) THEN
+      CALL finish('mo_bc_aeropt_splumes:set_time_weight', 'time index out of bounds')
+    END IF
+
+    !$ACC PARALLEL LOOP DEFAULT(PRESENT) ASYNC(1)
     DO iplume=1,nplumes
       time_weight(1,iplume) = year_weight(iyear,iplume) * ann_cycle(1,iweek,iplume)
       time_weight(2,iplume) = year_weight(iyear,iplume) * ann_cycle(2,iweek,iplume)
       time_weight_bg(1,iplume) = ann_cycle(1,iweek,iplume)
-      time_weight_bg(2,iplume) = ann_cycle(2,iweek,iplume)  
-      
-    END DO    
-    RETURN
+      time_weight_bg(2,iplume) = ann_cycle(2,iweek,iplume)
+    END DO
+    !$ACC END PARALLEL LOOP
+
   END SUBROUTINE set_time_weight
   !
   ! ---------------------------------------------------------------------------------------------
-  ! SP_AOP_PROFILE:  This subroutine calculates the simple plume aerosol and cloud active optical 
-  !                  properites based on the the simple plume fit to the MPI Aerosol Climatology
-  !                  (Version 2).  It sums over nplumes to provide a profile of aerosol
-  !                  optical properties on a host models vertical grid. 
+  ! sp_plume_profile_550:
+  !                  This subroutine calculates the simple plume aerosol and cloud active optical
+  !                  properites at 550nm based on the the simple plume fit to the MPI Aerosol
+  !                  Climatology (Version 2).
   !
-  SUBROUTINE sp_aop_profile(           nlevels        ,&
-     & jcs            ,ncol           ,ncol_max       ,lambda         ,oro            ,lon            , &
-     & lat            ,year_fr        ,z              ,dz             ,dNovrN         ,aod_prof       , &
-     & ssa_prof       ,asy_prof       )
-    !
-    ! ---------- 
-    !
-    INTEGER, INTENT(IN)        :: &
-       & nlevels,                 & !< number of levels
-       & jcs,                     & !< start index in block 
-       & ncol,                    & !< number of columns (end index)
-       & ncol_max                   !< first dimension of 2d-vars as declared in calling (sub)program [nproma]
-
-    REAL(wp), INTENT(IN)       :: &
-       & lambda,                  & !< wavelength
-       & year_fr,                 & !< Fractional Year (1903.0 is the 0Z on the first of January 1903, Gregorian)
-       & oro(ncol),               & !< orographic height (m)
-       & lon(ncol),               & !< longitude in degrees E
-       & lat(ncol),               & !< latitude in degrees N
-       & z (ncol_max,nlevels),    & !< height above sea-level (m)
-       & dz(ncol_max,nlevels)       !< level thickness (difference between half levels)
-
-    REAL(wp), INTENT(OUT)      ::     &
-       & dNovrN(ncol)               , & !< anthropogenic increment to cloud drop number concentration 
-       & aod_prof(ncol_max,nlevels) , & !< profile of aerosol optical depth
-       & ssa_prof(ncol_max,nlevels) , & !< profile of single scattering albedo
-       & asy_prof(ncol_max,nlevels)     !< profile of asymmetry parameter
-
-    INTEGER                    :: iplume, icol, k
-
-    REAL(wp)                   ::  &
-       & eta(ncol_max,nlevels),    & !< normalized height (by 15 km)
-       & z_beta(ncol_max,nlevels), & !< profile for scaling column optical depth
-       & prof(ncol_max,nlevels),   & !< scaled profile (by beta function)
-       & beta_sum(ncol),           & !< vertical sum of beta function
-       & ssa(ncol),                & !< aerosol optical depth 
-       & asy(ncol),                & !< aerosol optical depth 
-       & cw_an(ncol),              & !< column weight for simple plume (anthropogenic) aod at 550 nm
-       & cw_bg(ncol),              & !< column weight for fine-mode indurstrial background aod at 550 nm
-       & caod_sp(ncol),            & !< column simple plume (anthropogenic) aod at 550 nm
-       & caod_bg(ncol),            & !< column fine-mode natural background aod at 550 nm
-       & a_plume1,                 & !< gaussian longitude factor for feature 1
-       & a_plume2,                 & !< gaussian longitude factor for feature 2
-       & b_plume1,                 & !< gaussian latitude factor for feature 1
-       & b_plume2,                 & !< gaussian latitude factor for feature 2
-       & delta_lat,                & !< latitude offset
-       & delta_lon,                & !< longitude offset
-       & delta_lon_t,              & !< threshold for maximum longitudinal plume extent used in transition from 360 to 0 degrees
-       & lon1,                     & !< rotated longitude for feature 1
-       & lat1,                     & !< rotated latitude for feature 2
-       & lon2,                     & !< rotated longitude for feature 1
-       & lat2,                     & !< rotated latitude for feature 2
-       & f1,                       & !< contribution from feature 1
-       & f2,                       & !< contribution from feature 2
-       & f3,                       & !< contribution from feature 1 in natural background of Twomey effect
-       & f4,                       & !< contribution from feature 2 in natural background of Twomey effect
-       & aod_550,                  & !< aerosol optical depth at 550nm
-       & aod_lmd,                  & !< aerosol optical depth at input wavelength
-       & lfactor                     !< factor to compute wavelength dependence of optical properties
-    !
-    ! ---------- 
-    !
-    ! initialize input data (by calling setup at first instance) 
-    !
-    IF (.NOT.sp_initialized) CALL setup_bc_aeropt_splumes
-    !
-    ! get time weights
-    !
-    CALL set_time_weight(year_fr)
-    !
-    ! initialize variables, including output
-    !
-    DO k=1,nlevels
-      DO icol=jcs,ncol
-        aod_prof(icol,k) = 0.0_wp
-        ssa_prof(icol,k) = 0.0_wp
-        asy_prof(icol,k) = 0.0_wp
-        z_beta(icol,k)   = MERGE(1.0_wp, 0.0_wp, z(icol,k) >= oro(icol))
-        eta(icol,k)      = MAX(0.0_wp,MIN(1.0_wp,z(icol,k)/15000._wp))
-      END DO
-    END DO
-    DO icol=jcs,ncol
-      dNovrN(icol)   = 1.0_wp
+  SUBROUTINE sp_plume_profile_550( &
+        & nlevels, jcs, jce, nproma, time_weight, time_weight_bg, z, dz, oro, lon, lat, aod_550, dNovrN &
+      )
+
+    INTEGER, INTENT(IN) :: nlevels !< number of levels
+    INTEGER, INTENT(IN) :: jcs !< start index in block
+    INTEGER, INTENT(IN) :: jce !< end index in block
+    INTEGER, INTENT(IN) :: nproma !< first dimension of 2d-vars as declared in calling (sub)program
+
+    REAL(wp), INTENT(IN) :: time_weight(nfeatures,nplumes) !< Time-weights to account for BB background.
+    REAL(wp), INTENT(IN) :: time_weight_bg(nfeatures,nplumes) !< as time_weight but for natural background in Twomey effect.
+
+    REAL(wp), INTENT(IN) :: z(nproma,nlevels) !< height above sea-level (m)
+    REAL(wp), INTENT(IN) :: dz(nproma,nlevels) !< level thickness (difference between half levels)
+    REAL(wp), INTENT(IN) :: oro(nproma) !< orographic height (m)
+    REAL(wp), INTENT(IN) :: lon(nproma) !< longitude in degrees E
+    REAL(wp), INTENT(IN) :: lat(nproma) !< latitude in degrees N
+
+    REAL(wp), INTENT(OUT) :: aod_550(nproma,nlevels,nplumes) !< AOD at 550nm at each level for each plume.
+    REAL(wp), INTENT(INOUT), OPTIONAL :: dNovrN(nproma) !< anthropogenic increment to cloud drop number concentration
+
+    REAL(wp) :: caod_sp(jcs:jce) !< column simple plume (anthropogenic) aod at 550 nm
+    REAL(wp) :: caod_bg(jcs:jce) !< column fine-mode natural background aod at 550 nm
+    REAL(wp) :: cw_an(jcs:jce) !< column weight for simple plume (anthropogenic) aod at 550 nm
+    REAL(wp) :: cw_bg(jcs:jce) !< column weight for fine-mode indurstrial background aod at 550 nm
+    REAL(wp) :: prof(jcs:jce,nlevels) !< scaled profile (by beta function)
+    REAL(wp) :: beta_sum(jcs:jce) !< vertical sum of beta function
+
+    REAL(wp) :: eta !< normalized height (by 15 km)
+    REAL(wp) :: delta_lat !< latitude offset
+    REAL(wp) :: delta_lon !< longitude offset
+    REAL(wp) :: delta_lon_t !< threshold for maximum longitudinal plume extent used in transition from 360 to 0 degrees
+    REAL(wp) :: a_plume1 !< gaussian longitude factor for feature 1
+    REAL(wp) :: b_plume1 !< gaussian latitude factor for feature 1
+    REAL(wp) :: a_plume2 !< gaussian longitude factor for feature 2
+    REAL(wp) :: b_plume2 !< gaussian latitude factor for feature 2
+    REAL(wp) :: lon1 !< rotated longitude for feature 1
+    REAL(wp) :: lat1 !< rotated latitude for feature 1
+    REAL(wp) :: lon2 !< rotated longitude for feature 2
+    REAL(wp) :: lat2 !< rotated latitude for feature 2
+    REAL(wp) :: f1 !< contribution from feature 1
+    REAL(wp) :: f2 !< contribution from feature 2
+    REAL(wp) :: f3 !< contribution from feature 1 in natural background of Twomey effect
+    REAL(wp) :: f4 !< contribution from feature 2 in natural background of Twomey effect
+
+    INTEGER :: iplume, icol, k
+    LOGICAL :: have_dNovrN
+
+    have_dNovrN = PRESENT(dNovrN)
+
+    !$ACC DATA CREATE(caod_sp, caod_bg, cw_an, cw_bg, prof, beta_sum) NO_CREATE(dNovrN)
+
+    !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
+    !$ACC LOOP GANG(STATIC: 1) VECTOR
+    DO icol=jcs,jce
       caod_sp(icol)  = 0.00_wp
       caod_bg(icol)  = 0.02_wp
     END DO
+
     !
     ! sum contribution from plumes to construct composite profiles of aerosol otpical properties
     !
+    !$ACC LOOP SEQ
+!PREVENT_INCONSISTENT_IFORT_FMA
     DO iplume=1,nplumes
       !
       ! calculate vertical distribution function from parameters of beta distribution
       !
-      DO icol=jcs,ncol
+
+      !$ACC LOOP GANG(STATIC: 1) VECTOR
+      DO icol=jcs,jce
         beta_sum(icol) = 0._wp
       END DO
+
+      !$ACC LOOP SEQ
       DO k=1,nlevels
-        DO icol=jcs,ncol
-          prof(icol,k)   = (eta(icol,k)**(beta_a(iplume)-1._wp) * (1._wp-eta(icol,k))**(beta_b(iplume)-1._wp))*dz(icol,k)
+        !$ACC LOOP GANG(STATIC: 1) VECTOR PRIVATE(eta)
+        DO icol=jcs,jce
+          eta = MIN(MAX(0.0_wp, z(icol,k)/15000._wp), 1.0_wp)
+          prof(icol,k) = (eta**(beta_a(iplume)-1._wp) * (1._wp-eta)**(beta_b(iplume)-1._wp))*dz(icol,k)
           beta_sum(icol) = beta_sum(icol) + prof(icol,k)
         END DO
       END DO
+
+      !$ACC LOOP SEQ
       DO k=1,nlevels
-        DO icol=jcs,ncol
-          prof(icol,k)   = prof(icol,k) / beta_sum(icol) * z_beta(icol,k)
+        !$ACC LOOP GANG(STATIC: 1) VECTOR
+        DO icol=jcs,jce
+          IF (z(icol,k) >= oro(icol)) THEN
+            prof(icol,k) = prof(icol,k) / beta_sum(icol)
+          ELSE
+            prof(icol,k) = 0._wp
+          END IF
         END DO
       END DO
-      !
-      ! calculate plume weights
-      !
-!PREVENT_INCONSISTENT_IFORT_FMA
-      DO icol=jcs,ncol
+
+      !$ACC LOOP GANG(STATIC: 1) VECTOR PRIVATE(delta_lat, delta_lon, delta_lon_t, a_plume1) &
+      !$ACC   PRIVATE(b_plume1, a_plume2, b_plume2, lon1, lat1, lon2, lat2, f1, f2, f3, f4)
+      DO icol=jcs,jce
         !
         ! get plume-center relative spatial parameters for specifying amplitude of plume at given lat and lon
         !
@@ -360,53 +356,111 @@ MODULE mo_bc_aeropt_splumes
         ! calculate contribution to plume from its different features, to get a column weight for the anthropogenic
         ! (cw_an) and the fine-mode background aerosol (cw_bg)
         !
-        f1 = time_weight(1,iplume) * ftr_weight(1,iplume) * EXP(-1._wp* (a_plume1 * ((lon1)**2) + (b_plume1 * ((lat1)**2)))) 
-        f2 = time_weight(2,iplume) * ftr_weight(2,iplume) * EXP(-1._wp* (a_plume2 * ((lon2)**2) + (b_plume2 * ((lat2)**2)))) 
-        f3 = time_weight_bg(1,iplume) * ftr_weight(1,iplume) * EXP(-1.* (a_plume1 * ((lon1)**2) + (b_plume1 * ((lat1)**2)))) 
-        f4 = time_weight_bg(2,iplume) * ftr_weight(2,iplume) * EXP(-1.* (a_plume2 * ((lon2)**2) + (b_plume2 * ((lat2)**2))))
+        f1 = time_weight(1,iplume) * ftr_weight(1,iplume) * EXP(-(a_plume1 * ((lon1)**2) + (b_plume1 * ((lat1)**2))))
+        f2 = time_weight(2,iplume) * ftr_weight(2,iplume) * EXP(-(a_plume2 * ((lon2)**2) + (b_plume2 * ((lat2)**2))))
+        f3 = time_weight_bg(1,iplume) * ftr_weight(1,iplume) * EXP(-(a_plume1 * ((lon1)**2) + (b_plume1 * ((lat1)**2))))
+        f4 = time_weight_bg(2,iplume) * ftr_weight(2,iplume) * EXP(-(a_plume2 * ((lon2)**2) + (b_plume2 * ((lat2)**2))))
 
 
         cw_an(icol) = f1 * aod_spmx(iplume) + f2 * aod_spmx(iplume)  
-        cw_bg(icol) = f3 * aod_fmbg(iplume) + f4 * aod_fmbg(iplume) 
-        !
-        ! calculate wavelength-dependent scattering properties
-        !
-        lfactor   = MIN(1.0_wp,700.0_wp/lambda)
-        ssa(icol) = (ssa550(iplume) * lfactor**4) / ((ssa550(iplume) * lfactor**4) + ((1-ssa550(iplume)) * lfactor))
-        asy(icol) =  asy550(iplume) * SQRT(lfactor)
+        cw_bg(icol) = f3 * aod_fmbg(iplume) + f4 * aod_fmbg(iplume)
       END DO
-      !
-      ! distribute plume optical properties across its vertical profile weighting by optical depth and scaling for
-      ! wavelength using the anstrom parameter. 
-      !      
-      lfactor = EXP(-angstrom(iplume) * LOG(lambda/550.0_wp))
+
+      !$ACC LOOP SEQ
       DO k=1,nlevels
-        DO icol = jcs,ncol
-          aod_550          = prof(icol,k)     * cw_an(icol)
-          aod_lmd          = aod_550          * lfactor
-          caod_sp(icol)    = caod_sp(icol)    + aod_550
-          caod_bg(icol)    = caod_bg(icol)    + prof(icol,k) * cw_bg(icol)
-          asy_prof(icol,k) = asy_prof(icol,k) + aod_lmd * ssa(icol) * asy(icol)
-          ssa_prof(icol,k) = ssa_prof(icol,k) + aod_lmd * ssa(icol)
+        !$ACC LOOP GANG(STATIC: 1) VECTOR
+        DO icol = jcs,jce
+          aod_550(icol,k,iplume) = prof(icol,k) * cw_an(icol)
+          caod_sp(icol) = caod_sp(icol) + aod_550(icol,k,iplume)
+          caod_bg(icol) = caod_bg(icol) + prof(icol,k) * cw_bg(icol)
+        END DO
+      END DO
+    END DO ! iplume
+
+    IF (have_dNovrN) THEN
+      !$ACC LOOP GANG(STATIC: 1) VECTOR
+      DO icol=jcs,jce
+        dNovrN(icol) = LOG((1000.0_wp * (caod_sp(icol) + caod_bg(icol))) + 1.0_wp)/LOG((1000.0_wp * caod_bg(icol)) + 1.0_wp)
+      END DO
+    END IF
+
+    !$ACC END PARALLEL
+    !$ACC WAIT(1)
+    !$ACC END DATA
+
+  END SUBROUTINE sp_plume_profile_550
+
+  !
+  ! ---------------------------------------------------------------------------------------------
+  ! sp_aop_profile_wavelength: This routine computes the wavelength-adjusted simple plume aerosol
+  !                  optical properties away from 500nm.  It sums over nplumes to provide a
+  !                  profile of aerosol optical properties on a host models vertical grid.
+  !
+  SUBROUTINE sp_aop_profile_wavelength(nlevels, jcs, jce, nproma, lambda, aod_550, aod_prof, ssa_prof, asy_prof)
+
+    !$ACC ROUTINE GANG
+
+    INTEGER, INTENT(IN) :: nlevels !< number of levels
+    INTEGER, INTENT(IN) :: jcs !< start index in block
+    INTEGER, INTENT(IN) :: jce !< end index in block
+    INTEGER, INTENT(IN) :: nproma !< first dimension of 2d-vars as declared in calling (sub)program
+
+    REAL(wp), INTENT(IN) :: lambda !< Wavelength [nm].
+    REAL(wp), INTENT(IN) :: aod_550(nproma,nlevels,nplumes) !< AOD at 550nm at each level for each plume.
+
+    REAL(wp), INTENT(OUT) :: aod_prof(nproma,nlevels) !< profile of aerosol optical depth @ lambda
+    REAL(wp), INTENT(OUT) :: ssa_prof(nproma,nlevels) !< profile of single_scattering albedo @ lambda
+    REAL(wp), INTENT(OUT) :: asy_prof(nproma,nlevels) !< profile of asymmetry parameter @ lambda
+
+    REAL(wp) :: lfactor
+    REAL(wp) :: ssa
+    REAL(wp) :: asy
+    REAL(wp) :: aod_lmd
+
+    INTEGER :: iplume, k, icol
+
+    !$ACC LOOP SEQ
+    DO k = 1, nlevels
+      !$ACC LOOP GANG(STATIC: 1) VECTOR PRIVATE(aod_lmd)
+      DO icol = jcs, jce
+        aod_prof(icol,k) = 0._wp
+        ssa_prof(icol,k) = 0._wp
+        asy_prof(icol,k) = 0._wp
+      END DO
+    END DO
+
+    !$ACC LOOP SEQ
+!PREVENT_INCONSISTENT_IFORT_FMA
+    DO iplume = 1, nplumes
+      lfactor = MIN(1.0_wp,700.0_wp/lambda)
+      ssa = (ssa550(iplume) * lfactor**4) / ((ssa550(iplume) * lfactor**4) + ((1-ssa550(iplume)) * lfactor))
+      asy = asy550(iplume) * SQRT(lfactor)
+
+      !$ACC LOOP SEQ
+      DO k = 1, nlevels
+        !$ACC LOOP GANG(STATIC: 1) VECTOR PRIVATE(aod_lmd)
+        DO icol = jcs, jce
+          aod_lmd = aod_550(icol,k,iplume) * EXP(-angstrom(iplume) * LOG(lambda/550.0_wp))
+          asy_prof(icol,k) = asy_prof(icol,k) + aod_lmd * ssa * asy
+          ssa_prof(icol,k) = ssa_prof(icol,k) + aod_lmd * ssa
           aod_prof(icol,k) = aod_prof(icol,k) + aod_lmd
         END DO
       END DO
     END DO
+
     !
     ! complete optical depth weighting
     !
-    DO k=1,nlevels
-      DO icol = jcs,ncol
-        ! VM: deleted MERGE which causes problems on cray if used in this manner
-        !asy_prof(icol,k) = MERGE(asy_prof(icol,k)/ssa_prof(icol,k), 0.0_wp, ssa_prof(icol,k) > TINY(1._wp))
-        !ssa_prof(icol,k) = MERGE(ssa_prof(icol,k)/aod_prof(icol,k), 1.0_wp, aod_prof(icol,k) > TINY(1._wp))
+    !$ACC LOOP SEQ
+    DO k = 1, nlevels
+      !$ACC LOOP GANG(STATIC: 1) VECTOR
+      DO icol = jcs, jce
         IF (ssa_prof(icol,k) > TINY(1._wp)) THEN
           asy_prof(icol,k) = asy_prof(icol,k)/ssa_prof(icol,k)
         ELSE
           asy_prof(icol,k) = 0.0_wp
         END IF
 
-        !vm test:
         IF (aod_prof(icol,k) > TINY(1._wp)) THEN
           ssa_prof(icol,k) = ssa_prof(icol,k)/aod_prof(icol,k)
         ELSE
@@ -414,116 +468,162 @@ MODULE mo_bc_aeropt_splumes
         END IF
       END DO
     END DO
-    !
-    ! calcuate effective radius normalization (divisor) factor
-    !
-    DO icol=jcs,ncol
-      dNovrN(icol) = LOG((1000.0_wp * (caod_sp(icol) + caod_bg(icol))) + 1.0_wp)/LOG((1000.0_wp * caod_bg(icol)) + 1.0_wp)
-    END DO
 
-    RETURN
-  END SUBROUTINE sp_aop_profile
+  END SUBROUTINE sp_aop_profile_wavelength
+
   ! -----------------------------------------------------------------------------------------------
-  ! ADD_BC_AEROPT_SPLUMES:  This subroutine provides the interface to simple plume (sp) fit to the
-  !                         MPI Aerosol Climatology (Version 2). It does so by collecting or 
+  ! add_bc_aeropt_splumes:  This subroutine provides the interface to simple plume (sp) fit to the
+  !                         MPI Aerosol Climatology (Version 2). It does so by collecting or
   !                         deriving spatio-temporal information and calling the simple plume
   !                         aerosol subroutine and incrementing the background aerosol properties
   !                         (and effective radius) with the anthropogenic plumes.
   !
-  SUBROUTINE add_bc_aeropt_splumes                                                ( &
-     & jg, jcs        ,kproma         ,kbdim          ,klev           ,krow        ,&
+  SUBROUTINE add_bc_aeropt_splumes( jg                                             ,&
+     & jcs            ,jce            ,nproma         ,klev           ,jb          ,&
      & nb_sw          ,this_datetime  ,zf             ,dz             ,z_sfc       ,&
      & sw_wv1         ,sw_wv2         ,aod_sw_vr      ,ssa_sw_vr      ,asy_sw_vr   ,&
-     & x_cdnc                                                                      )                                                  
+     & x_cdnc         ,lacc                                                         )
     !
     ! --- 0.1 Variables passed through argument list
     INTEGER, INTENT(IN) ::            &
          jg                          ,& !< domain index
          jcs                         ,& !< start index in current block
-         kproma                      ,& !< end index in current block
-         kbdim                       ,& !< block dimension (greater than or equal to kproma)
+         jce                         ,& !< end index in current block
+         nproma                      ,& !< block dimension
          klev                        ,& !< number of full levels
-         krow                        ,& !< index for current block
+         jb                          ,& !< index for current block
          nb_sw                          !< number of bands in short wave
 
     TYPE(datetime), POINTER      :: this_datetime
 
     REAL(wp), INTENT (IN)        :: &
-         zf(kbdim,klev),            & !< geometric height at full level [m]
-         dz(kbdim,klev),            & !< geometric height thickness     [m]
-         z_sfc(kbdim),              & !< geometric height of surface    [m]
-         sw_wv1(nb_sw),             & !< smallest wave number in each of the sw bands
+         zf(nproma,klev),            & !< geometric height at full level [m]
+         dz(nproma,klev),            & !< geometric height thickness     [m]
+         z_sfc(nproma),              & !< geometric height of surface    [m]
+         sw_wv1(nb_sw),              & !< smallest wave number in each of the sw bands
          sw_wv2(nb_sw)                !< largest  wave number in each of the sw bands
 
     REAL(wp), INTENT (INOUT) ::       &
-         aod_sw_vr(kbdim,klev,nb_sw) ,& !< Aerosol shortwave optical depth
-         ssa_sw_vr(kbdim,klev,nb_sw) ,& !< Aerosol single scattering albedo
-         asy_sw_vr(kbdim,klev,nb_sw) ,& !< Aerosol asymmetry parameter
-         x_cdnc(kbdim)                  !< Scale factor for Cloud Droplet Number Concentration
+         aod_sw_vr(nproma,klev,nb_sw) ,& !< Aerosol shortwave optical depth
+         ssa_sw_vr(nproma,klev,nb_sw) ,& !< Aerosol single scattering albedo
+         asy_sw_vr(nproma,klev,nb_sw)    !< Aerosol asymmetry parameter
+    REAL(wp), INTENT(OUT), OPTIONAL:: &
+         x_cdnc(nproma)                  !< Scale factor for Cloud Droplet Number Concentration
+
+    LOGICAL, OPTIONAL, INTENT(IN) :: lacc !< OpenACC flag.
   
     !
-    ! --- 0.2 Dummy variables
+    ! --- 0.2 Local variables
     !
     INTEGER ::                        &
          jk                          ,& !< index for looping over vertical dimension
          jki                         ,& !< index for looping over vertical dimension for reversing
          jl                          ,& !< index for looping over block
          jwl                            !< index for looping over wavelengths
-    
+
+    REAL(wp) :: time_weight(nfeatures,nplumes)
+    REAL(wp) :: time_weight_bg(nfeatures,nplumes)
+
+    REAL(wp) :: aod_550(nproma,klev,nplumes)
+
     REAL(wp) ::                       &
-         year_fr                     ,& !< time in year fraction (1989.0 is 0Z on Jan 1 1989)
          lambda                      ,& !< wavelength at central band wavenumber [nm]
-         lon_sp(kproma)              ,& !< longitude passed to sp
-         lat_sp(kproma)              ,& !< latitude passed to sp
-         z_fl_vr(kbdim,klev)         ,& !< level height [m], vertically reversed indexing (1=lowest level)
-         dz_vr(kbdim,klev)           ,& !< level thickness [m], vertically reversed 
-         sp_aod_vr(kbdim,klev)       ,& !< simple plume aerosol optical depth, vertically reversed 
-         sp_ssa_vr(kbdim,klev)       ,& !< simple plume single scattering albedo, vertically reversed
-         sp_asy_vr(kbdim,klev)       ,& !< simple plume asymmetry factor, vertically reversed indexing
-         sp_xcdnc(kproma)               !< drop number scale factor
-
-    year_fr = REAL(this_datetime%date%year,wp) &
-         +((REAL(getDayOfYearFromDateTime(this_datetime),wp) &
-         +REAL(getNoOfSecondsElapsedInDayDateTime(this_datetime),wp)/86400.0_wp) &
-         /REAL(getNoOfDaysInYearDateTime(this_datetime),wp))
+         lon_sp(nproma)              ,& !< longitude passed to sp
+         lat_sp(nproma)              ,& !< latitude passed to sp
+         z_fl_vr(nproma,klev)        ,& !< level height [m], vertically reversed indexing (1=lowest level)
+         dz_vr(nproma,klev)          ,& !< level thickness [m], vertically reversed 
+         sp_aod_vr(nproma,klev)      ,& !< simple plume aerosol optical depth, vertically reversed 
+         sp_ssa_vr(nproma,klev)      ,& !< simple plume single scattering albedo, vertically reversed
+         sp_asy_vr(nproma,klev)         !< simple plume asymmetry factor, vertically reversed indexing
+
+    CALL assert_acc_device_only('add_bc_aeropt_splumes',lacc)
+    !
+    ! ----------
+    !
+    ! initialize input data (by calling setup at first instance)
+    !
+    IF (.NOT.sp_initialized) CALL setup_bc_aeropt_splumes
+
     IF (this_datetime%date%year > 1850) THEN
-      ! 
+
+      !$ACC DATA CREATE(time_weight, time_weight_bg, aod_550, lon_sp, lat_sp, z_fl_vr, dz_vr) &
+      !$ACC   CREATE(sp_aod_vr, sp_ssa_vr, sp_asy_vr)
+
+      !
+      ! get time weights
+      !
+      CALL set_time_weight(this_datetime, time_weight, time_weight_bg)
+
+      !
       ! --- 1.1 geographic information
       !
+
+      !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
+      !$ACC LOOP SEQ
       DO jk=1,klev
         jki=klev-jk+1
-        DO jl=jcs,kproma
+        !$ACC LOOP GANG(STATIC: 1) VECTOR
+        DO jl=jcs,jce
           dz_vr  (jl,jk) = dz(jl,jki)
           z_fl_vr(jl,jk) = zf(jl,jki)
         END DO
       END DO
 
-      lon_sp(jcs:kproma) = p_patch(jg)%cells%center(jcs:kproma,krow)%lon*rad2deg
-      lat_sp(jcs:kproma) = p_patch(jg)%cells%center(jcs:kproma,krow)%lat*rad2deg
+      !$ACC LOOP GANG(STATIC: 1) VECTOR
+      DO jl=jcs,jce
+        lon_sp(jl) = p_patch(jg)%cells%center(jl,jb)%lon * rad2deg
+        lat_sp(jl) = p_patch(jg)%cells%center(jl,jb)%lat * rad2deg
+      END DO
+      !$ACC END PARALLEL
+
+      !
       ! --- 1.2 Aerosol Shortwave properties
       !
       ! get aerosol optical properties in each band, and adjust effective radius
       !
+
+      CALL sp_plume_profile_550( &
+          & nlevels=klev, &
+          & jcs=jcs, &
+          & jce=jce, &
+          & nproma=nproma, &
+          & time_weight=time_weight(:,:), &
+          & time_weight_bg=time_weight_bg(:,:), &
+          & z=z_fl_vr(:,:), &
+          & dz=dz_vr(:,:), &
+          & oro=z_sfc(:), &
+          & lon=lon_sp(:), &
+          & lat=lat_sp(:), &
+          & aod_550=aod_550(:,:,:), &
+          & dNovrN=x_cdnc(:) &
+        )
+
+      !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
+      !$ACC LOOP SEQ
       DO jwl = 1,nb_sw
         lambda = 1.e7_wp/ (0.5_wp * (sw_wv1(jwl) + sw_wv2(jwl)))
-        CALL sp_aop_profile(                                              klev                , &
-           & jcs                ,kproma             ,kbdim               ,lambda              , &
-           & z_sfc(:)           ,lon_sp(:)          ,lat_sp(:)           ,year_fr             , &
-           & z_fl_vr(:,:)       ,dz_vr(:,:)         ,sp_xcdnc(:)         ,sp_aod_vr(:,:)      , &
-           & sp_ssa_vr(:,:)     ,sp_asy_vr(:,:)                                               )
 
+        CALL sp_aop_profile_wavelength ( &
+            & nlevels=klev, &
+            & jcs=jcs, &
+            & jce=jce, &
+            & nproma=nproma, &
+            & lambda=lambda, &
+            & aod_550=aod_550, &
+            & aod_prof=sp_aod_vr, &
+            & ssa_prof=sp_ssa_vr, &
+            & asy_prof=sp_asy_vr &
+          )
+
+        !$ACC LOOP SEQ
         DO jk=1,klev
-          DO jl=jcs,kproma
+          !$ACC LOOP GANG(STATIC: 1) VECTOR
+          DO jl=jcs,jce
             asy_sw_vr(jl,jk,jwl) = asy_sw_vr(jl,jk,jwl) * ssa_sw_vr(jl,jk,jwl) * aod_sw_vr(jl,jk,jwl)    &
                  + sp_asy_vr(jl,jk)   * sp_ssa_vr(jl,jk)    * sp_aod_vr(jl,jk)
             ssa_sw_vr(jl,jk,jwl) = ssa_sw_vr(jl,jk,jwl) * aod_sw_vr(jl,jk,jwl)                           &
                  + sp_ssa_vr(jl,jk)   * sp_aod_vr(jl,jk)
             aod_sw_vr(jl,jk,jwl) = aod_sw_vr(jl,jk,jwl) + sp_aod_vr(jl,jk)
-
-            !asy_sw_vr(jl,jk,jwl) = MERGE(asy_sw_vr(jl,jk,jwl)/ssa_sw_vr(jl,jk,jwl),asy_sw_vr(jl,jk,jwl), &
-                 !ssa_sw_vr(jl,jk,jwl) > TINY(1.0_wp))
-            !ssa_sw_vr(jl,jk,jwl) = MERGE(ssa_sw_vr(jl,jk,jwl)/aod_sw_vr(jl,jk,jwl),ssa_sw_vr(jl,jk,jwl), &
-                 !aod_sw_vr(jl,jk,jwl) > TINY(1.0_wp))
             IF (ssa_sw_vr(jl,jk,jwl) > TINY(1.0_wp)) THEN
               asy_sw_vr(jl,jk,jwl) = asy_sw_vr(jl,jk,jwl)/ssa_sw_vr(jl,jk,jwl)
             ELSE
@@ -539,11 +639,10 @@ MODULE mo_bc_aeropt_splumes
           END DO
         END DO
       END DO
+      !$ACC END PARALLEL
 
-      DO jl=jcs,kproma
-        x_cdnc(jl) = sp_xcdnc(jl)
-      END DO
-      RETURN
+      !$ACC WAIT(1)
+      !$ACC END DATA
     END IF
  
   END SUBROUTINE add_bc_aeropt_splumes
@@ -552,18 +651,18 @@ MODULE mo_bc_aeropt_splumes
                            & return_pointer,           file_name,            &
                            & variable_dimls,           module_name,          &
                            & sub_prog_name                                   )
-    INTEGER, INTENT(in)            :: ifile_id      !< file id from which 
+    INTEGER, INTENT(in)            :: ifile_id      !< file id from which
                                                     !< variable is read
-    CHARACTER(LEN=*),INTENT(in)    :: variable_name !< name of variable 
+    CHARACTER(LEN=*),INTENT(in)    :: variable_name !< name of variable
                                                     !< to be read
     REAL(wp), POINTER,INTENT(out)  :: return_pointer(:) !< values of variable
-    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: file_name     !< file name of file 
+    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: file_name     !< file name of file
                                                     !< contain respective var.
     INTEGER, INTENT(in),OPTIONAL   :: variable_dimls(1)!< dimension length of
                                                     !< variable
-    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: module_name!< name of module 
+    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: module_name!< name of module
                                            !< containing calling subprogr.
-    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: sub_prog_name!< name of calling 
+    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: sub_prog_name!< name of calling
                                                         !< subprogram
     CHARACTER(LEN=32)                   :: ci_length, cj_length
     CHARACTER(LEN=1024)                 :: message1, message2
@@ -602,18 +701,18 @@ MODULE mo_bc_aeropt_splumes
                            & return_pointer,           file_name,            &
                            & variable_dimls,           module_name,          &
                            & sub_prog_name                                   )
-    INTEGER, INTENT(in)            :: ifile_id      !< file id from which 
+    INTEGER, INTENT(in)            :: ifile_id      !< file id from which
                                                     !< variable is read
-    CHARACTER(LEN=*),INTENT(in)    :: variable_name !< name of variable 
+    CHARACTER(LEN=*),INTENT(in)    :: variable_name !< name of variable
                                                     !< to be read
     REAL(wp), POINTER,INTENT(out)  :: return_pointer(:,:) !< values of variable
-    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: file_name     !< file name of file 
+    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: file_name     !< file name of file
                                                     !< contain respective var.
     INTEGER, INTENT(in),OPTIONAL   :: variable_dimls(2)!< dimension length of
                                                     !< variable
-    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: module_name!< name of module 
+    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: module_name!< name of module
                                            !< containing calling subprogr.
-    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: sub_prog_name!< name of calling 
+    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: sub_prog_name!< name of calling
                                                         !< subprogram
     CHARACTER(LEN=32)                   :: ci_length(2), cj_length(2)
     CHARACTER(LEN=1024)                 :: message1, message2
@@ -660,19 +759,19 @@ MODULE mo_bc_aeropt_splumes
                            & return_pointer,           file_name,            &
                            & variable_dimls,           module_name,          &
                            & sub_prog_name                                   )
-    INTEGER, INTENT(in)            :: ifile_id      !< file id from which 
+    INTEGER, INTENT(in)            :: ifile_id      !< file id from which
                                                     !< variable is read
-    CHARACTER(LEN=*),INTENT(in)    :: variable_name !< name of variable 
+    CHARACTER(LEN=*),INTENT(in)    :: variable_name !< name of variable
                                                     !< to be read
-    REAL(wp), POINTER,INTENT(out)  :: return_pointer(:,:,:) !< values of 
+    REAL(wp), POINTER,INTENT(out)  :: return_pointer(:,:,:) !< values of
                                                     !< variable
-    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: file_name     !< file name of file 
+    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: file_name     !< file name of file
                                                     !< contain respective var.
     INTEGER, INTENT(in),OPTIONAL   :: variable_dimls(3)!< dimension length of
                                                     !< variable
-    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: module_name!< name of module 
+    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: module_name!< name of module
                                            !< containing calling subprogr.
-    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: sub_prog_name!< name of calling 
+    CHARACTER(LEN=*),INTENT(in),OPTIONAL:: sub_prog_name!< name of calling
                                                         !< subprogram
     CHARACTER(LEN=32)                   :: ci_length(3), cj_length(3)
     CHARACTER(LEN=1024)                 :: message1, message2
diff --git a/src/atm_phy_nwp/mo_ecrad.f90 b/src/atm_phy_nwp/mo_ecrad.f90
index b285f775f9..514e81f174 100644
--- a/src/atm_phy_nwp/mo_ecrad.f90
+++ b/src/atm_phy_nwp/mo_ecrad.f90
@@ -161,13 +161,17 @@ CONTAINS
   SUBROUTINE del_opt_ptrs(self)
     CLASS(t_opt_ptrs),INTENT(inout) :: self
 
+    !$ACC WAIT
     IF (ASSOCIATED(self%ptr_od) ) THEN
+      !$ACC EXIT DATA DELETE(self%ptr_od)
       NULLIFY(self%ptr_od)
     ENDIF
     IF (ASSOCIATED(self%ptr_ssa) ) THEN
+      !$ACC EXIT DATA DELETE(self%ptr_ssa)
       NULLIFY(self%ptr_ssa)
     ENDIF
     IF (ASSOCIATED(self%ptr_g) ) THEN
+      !$ACC EXIT DATA DELETE(self%ptr_g)
       NULLIFY(self%ptr_g)
     ENDIF
   END SUBROUTINE del_opt_ptrs
diff --git a/src/atm_phy_nwp/mo_nwp_aerosol.f90 b/src/atm_phy_nwp/mo_nwp_aerosol.f90
index 1b91fd2ad8..80ba5090ee 100644
--- a/src/atm_phy_nwp/mo_nwp_aerosol.f90
+++ b/src/atm_phy_nwp/mo_nwp_aerosol.f90
@@ -1,8 +1,3 @@
-!
-! This module prepares aerosol for the use in radiation
-!
-!
-!
 ! ICON
 !
 ! ---------------------------------------------------------------
@@ -14,6 +9,8 @@
 ! SPDX-License-Identifier: BSD-3-Clause
 ! ---------------------------------------------------------------
 
+! This module prepares aerosol for the use in radiation
+
 !----------------------------
 #include "omp_definitions.inc"
 !----------------------------
@@ -32,14 +29,16 @@ MODULE mo_nwp_aerosol
   USE mo_impl_constants,          ONLY: min_rlcell_int, SUCCESS, &
                                     &   iss, iorg, ibc, iso4, idu, n_camsaermr
   USE mo_impl_constants_grf,      ONLY: grf_bdywidth_c
-  USE mo_physical_constants,      ONLY: rd, grav, cpd
+  USE mo_physical_constants,      ONLY: rd, grav, cpd, rdv, o_m_rdv
   USE mo_reader_cams,             ONLY: t_cams_reader
   USE mo_interpolate_time,        ONLY: t_time_intp, intModeLinearMonthlyClim, intModeLinear
   USE mo_io_units,                ONLY: filename_max
-  USE mo_fortran_tools,           ONLY: init, set_acc_host_or_device, assert_acc_host_only
+  USE mo_fortran_tools,           ONLY: init, set_acc_host_or_device, assert_acc_device_only
   USE mo_util_string,             ONLY: int2string, associate_keyword, t_keyword_list, with_keywords
 ! ICON configuration
   USE mo_atm_phy_nwp_config,      ONLY: atm_phy_nwp_config, iprog_aero, icpl_aero_conv
+  USE mo_run_config,              ONLY: iqv
+  USE mo_satad,                   ONLY: sat_pres_water
   USE mo_radiation_config,        ONLY: irad_aero, iRadAeroConstKinne, iRadAeroKinne, iRadAeroCAMSclim,     &
                                     &   iRadAeroCAMStd, iRadAeroVolc, iRadAeroKinneVolc, iRadAeroART, &
                                     &   iRadAeroKinneVolcSP, iRadAeroKinneSP, iRadAeroTegen,                &
@@ -152,7 +151,7 @@ CONTAINS
     REAL(wp), POINTER, INTENT(in) :: &
       &  wavenum1_sw(:),       & !< Shortwave wavenumber lower band bounds
       &  wavenum2_sw(:)          !< Shortwave wavenumber upper band bounds
-    REAL(wp), INTENT(inout) :: &
+    REAL(wp), ALLOCATABLE, TARGET, INTENT(inout) :: &
       &  zaeq1(:,:,:),         & !< Tegen optical thicknesses       1: continental
       &  zaeq2(:,:,:),         & !< relative to 550 nm, including   2: maritime
       &  zaeq3(:,:,:),         & !< a vertical profile              3: desert
@@ -196,7 +195,7 @@ CONTAINS
     jg     = pt_patch%id
 
     CALL set_acc_host_or_device(lzacc, lacc)
-  
+
     SELECT CASE(irad_aero)
 !---------------------------------------------------------------------------------------
 ! Tegen aerosol (+ART if chosen)
@@ -205,6 +204,13 @@ CONTAINS
 
         !$ACC DATA CREATE(latitude) IF(lzacc)
 
+        ALLOCATE( zaeq1( nproma, pt_patch%nlev, pt_patch%nblks_c), &
+          &       zaeq2( nproma, pt_patch%nlev, pt_patch%nblks_c), &
+          &       zaeq3( nproma, pt_patch%nlev, pt_patch%nblks_c), &
+          &       zaeq4( nproma, pt_patch%nlev, pt_patch%nblks_c), &
+          &       zaeq5( nproma, pt_patch%nlev, pt_patch%nblks_c)  )
+        !$ACC ENTER DATA CREATE(zaeq1, zaeq2, zaeq3, zaeq4, zaeq5) IF(lzacc)
+
         ! Outer two rows need dummy values as RRTM always starts at 1
         rl_start   = 1
         rl_end     = 2
@@ -224,7 +230,7 @@ CONTAINS
               zaeq3(jc,jk,jb) = 0._wp
               zaeq4(jc,jk,jb) = 0._wp
               zaeq5(jc,jk,jb) = 0._wp
-              ENDDO
+            ENDDO
           ENDDO
           !$ACC END PARALLEL
         ENDDO
@@ -252,8 +258,9 @@ CONTAINS
           ENDDO
           !$ACC END PARALLEL
 
-          CALL nwp_aerosol_tegen(i_startidx, i_endidx, pt_patch%nlev, pt_patch%nlevp1, &
-            &                    prm_diag%k850(:,jb), pt_diag%temp(:,:,jb), pt_diag%pres(:,:,jb), pt_diag%pres_ifc(:,:,jb), &
+          CALL nwp_aerosol_tegen(i_startidx, i_endidx, pt_patch%nlev, pt_patch%nlevp1, prm_diag%k850(:,jb), &
+            &                    pt_diag%temp(:,:,jb), pt_diag%pres(:,:,jb),                              &
+            &                    pt_diag%pres_ifc(:,:,jb),  prm_diag%tot_cld(:,:,jb,iqv),                 &
             &                    ext_data%atm_td%aer_ss(:,jb,imo1),   ext_data%atm_td%aer_org(:,jb,imo1), &
             &                    ext_data%atm_td%aer_bc(:,jb,imo1),   ext_data%atm_td%aer_so4(:,jb,imo1), &
             &                    ext_data%atm_td%aer_dust(:,jb,imo1), ext_data%atm_td%aer_ss(:,jb,imo2),  &
@@ -359,16 +366,6 @@ CONTAINS
 !---------------------------------------------------------------------------------------
       CASE(iRadAeroConstKinne, iRadAeroKinne, iRadAeroVolc, iRadAeroKinneVolc, iRadAeroKinneVolcSP, iRadAeroKinneSP)
 
-!$OMP PARALLEL
-        ! These Tegen climatological aerosol fields are not used here but need to be initialized
-        ! to avoid runtime error in the upscaling to the reduced radiation grid (upscale_rad_input)
-        CALL init(zaeq1(:,:,:), lacc=.FALSE.)
-        CALL init(zaeq2(:,:,:), lacc=.FALSE.)
-        CALL init(zaeq3(:,:,:), lacc=.FALSE.)
-        CALL init(zaeq4(:,:,:), lacc=.FALSE.)
-        CALL init(zaeq5(:,:,:), lacc=.FALSE.)
-!$OMP END PARALLEL
-
         rl_start   = grf_bdywidth_c-1
         rl_end     = min_rlcell_int
         i_startblk = pt_patch%cells%start_block(rl_start)
@@ -384,9 +381,6 @@ CONTAINS
         WRITE(message_text,'(a,i2,a)') 'irad_aero = ', irad_aero,' requires to compile with --enable-ecrad.'
         CALL finish(routine, message_text)
 #endif
-#ifdef _OPENACC
-        IF (lzacc) CALL finish(routine, "irad_aero==*Kinne* is not ported to openACC.")
-#endif
 
         ! Update Kinne aerosol from files once per day
         CALL nwp_aerosol_daily_update_kinne(mtime_datetime, pt_patch, dt_rad, inwp_radiation, &
@@ -398,6 +392,7 @@ CONTAINS
           &      ssa_sw(nproma,pt_patch%nlev,pt_patch%nblks_c,nbands_sw)  , &
           &      g_sw  (nproma,pt_patch%nlev,pt_patch%nblks_c,nbands_sw)  , &
           &      STAT=istat)
+        !$ACC ENTER DATA CREATE(od_lw, od_sw, ssa_sw, g_sw) IF(lzacc)
         IF(istat /= SUCCESS) &
           &  CALL finish(routine, 'Allocation of od_lw, od_sw, ssa_sw, g_sw failed')
 
@@ -413,22 +408,27 @@ CONTAINS
             &                    pt_patch%id, jb, i_startidx, i_endidx, pt_patch%nlev, &
             &                    nbands_lw, nbands_sw, wavenum1_sw(:), wavenum2_sw(:), &
             &                    od_lw(:,:,jb,:), od_sw(:,:,jb,:),                     &
-            &                    ssa_sw(:,:,jb,:), g_sw(:,:,jb,:), cloud_num_fac(:)    )
+            &                    ssa_sw(:,:,jb,:), g_sw(:,:,jb,:), cloud_num_fac(:),   &
+            &                    lacc=lzacc)
 
           IF ( atm_phy_nwp_config(pt_patch%id)%lscale_cdnc ) THEN
+#ifdef _OPENACC
+            IF (lzacc) CALL finish(routine, "lscale_cdnc not ported to OpenACC.")
+#endif
             prm_diag%cloud_num_fac(:,jb) = cloud_num_fac(:)
           ENDIF
 
           IF ( var_in_output(jg)%aod_550nm ) THEN
             CALL calc_aod550_kinne(i_startidx, i_endidx, pt_patch%nlev, od_sw(:,:,jb,10), &
-              &                    prm_diag%aod_550nm(:,jb), lacc)
+              &                    prm_diag%aod_550nm(:,jb), lacc=lzacc)
           END IF
 
           ! Compute cloud number concentration depending on aerosol climatology
           ! if aerosol-microphysics or aerosol-convection coupling is turned on
           IF (atm_phy_nwp_config(pt_patch%id)%icpl_aero_gscp == 3 .OR. icpl_aero_conv == 1) THEN
-            CALL nwp_cpl_aero_gscp_conv(i_startidx, i_endidx, pt_patch%nlev, pt_diag%pres_sfc(:,jb), pt_diag%pres(:,:,jb), &
-              &                         prm_diag%acdnc(:,:,jb), prm_diag%cloud_num(:,jb), lacc)
+            CALL nwp_cpl_aero_gscp_conv(i_startidx, i_endidx, pt_patch%nlev, pt_diag%pres_sfc(:,jb), &
+                                        pt_diag%pres(:,:,jb), prm_diag%acdnc(:,:,jb), prm_diag%cloud_num(:,jb), &
+                                        lacc=lzacc)
           ENDIF
 
         END DO
@@ -438,15 +438,12 @@ CONTAINS
       ! CAMS climatology/forecasted aerosols
       CASE(iRadAeroCAMSclim,iRadAeroCAMStd)
 
-!$OMP PARALLEL
-        ! These Tegen climatological aerosol fields are not used here but need to be initialized
-        ! to avoid runtime error in the upscaling to the reduced radiation grid (upscale_rad_input)
-        CALL init(zaeq1(:,:,:), lacc=.FALSE.)
-        CALL init(zaeq2(:,:,:), lacc=.FALSE.)
-        CALL init(zaeq3(:,:,:), lacc=.FALSE.)
-        CALL init(zaeq4(:,:,:), lacc=.FALSE.)
-        CALL init(zaeq5(:,:,:), lacc=.FALSE.)
-!$OMP END PARALLEL
+#ifdef _OPENACC
+        IF (lzacc) THEN
+          WRITE(message_text,'(a,i2,a)') 'irad_aero = ', irad_aero,' not ported to OpenACC.'
+          CALL finish(routine, message_text)
+        ENDIF
+#endif
 
         rl_start   = grf_bdywidth_c+1
         rl_end     = min_rlcell_int
@@ -535,17 +532,22 @@ CONTAINS
     ! 10th band range (442 - 625nm) is used to output aod_550 nm
     ! due to a lack of spectrally resolved information for a particular wavelength
 
-    CALL assert_acc_host_only("calc_aod550_kinne", lacc)
+    CALL assert_acc_device_only("calc_aod550_kinne", lacc)
 
+    !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
+    !$ACC LOOP GANG(STATIC: 1) VECTOR
     DO jc = i_startidx, i_endidx
       aod_550nm(jc) = 0.0_wp
     ENDDO
 
+    !$ACC LOOP SEQ
     DO jk = 1, nlev
+      !$ACC LOOP GANG(STATIC: 1) VECTOR
       DO jc = i_startidx, i_endidx
         aod_550nm(jc) = aod_550nm(jc) + od_sw_band10(jc,jk)
       ENDDO !jc
     ENDDO !jk
+    !$ACC END PARALLEL
 
   END SUBROUTINE calc_aod550_kinne
 
@@ -586,7 +588,7 @@ CONTAINS
   !---------------------------------------------------------------------------------------
   SUBROUTINE nwp_aerosol_kinne(mtime_datetime, zf, zh, dz, jg, jb, i_startidx, i_endidx, nlev, &
     &                          nbands_lw, nbands_sw, wavenum1_sw, wavenum2_sw,     &
-    &                          od_lw, od_sw, ssa_sw, g_sw, cloud_num_fac)
+    &                          od_lw, od_sw, ssa_sw, g_sw, cloud_num_fac, lacc)
     TYPE(datetime), POINTER, INTENT(in) :: &
       &  mtime_datetime                      !< Current datetime
     REAL(wp), INTENT(in) ::                &
@@ -616,12 +618,40 @@ CONTAINS
       &  x_cdnc(nproma),                   & !< Scale factor for Cloud Droplet Number Concentration
       &  x_cdnc_ref(nproma)                  !< x_cdnc for the reference year 2005
     INTEGER ::                             &
-      &  jk, jc                              !< Loop index
+      &  jk, jc, jwl                         !< Loop indices
+    CHARACTER(len=*), PARAMETER :: &
+      &  routine = modname//':nwp_aerosol_kinne'
+    LOGICAL, INTENT(in), OPTIONAL :: lacc   !< If true, use openacc
+    LOGICAL :: lzacc
+
+    CALL set_acc_host_or_device(lzacc, lacc)
+
+    !$ACC DATA CREATE(od_lw_vr, od_sw_vr, g_sw_vr, ssa_sw_vr, x_cdnc) IF(lzacc)
+
+    !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1) IF(lzacc)
+    !$ACC LOOP SEQ
+    DO jwl = 1, nbands_lw
+      !$ACC LOOP GANG(STATIC: 1) VECTOR COLLAPSE(2)
+      DO jk = 1, nlev
+        DO jc = 1, nproma
+          od_lw_vr(jc,jk,jwl)  = 0.0_wp
+        END DO
+      END DO
+    END DO
+
+    !$ACC LOOP SEQ
+    DO jwl = 1, nbands_sw
+      !$ACC LOOP GANG(STATIC: 1) VECTOR COLLAPSE(2)
+      DO jk = 1, nlev
+        DO jc = 1, nproma
+          od_sw_vr(jc,jk,jwl)  = 0.0_wp
+          ssa_sw_vr(jc,jk,jwl) = 1.0_wp
+          g_sw_vr(jc,jk,jwl)   = 0.0_wp
+        END DO
+      END DO
+    END DO
+    !$ACC END PARALLEL
 
-    od_lw_vr(:,:,:)  = 0.0_wp
-    od_sw_vr(:,:,:)  = 0.0_wp
-    ssa_sw_vr(:,:,:) = 1.0_wp
-    g_sw_vr (:,:,:)  = 0.0_wp
 
     ! Tropospheric Kinne aerosol
     IF (ANY( irad_aero == (/iRadAeroConstKinne,iRadAeroKinne,iRadAeroKinneVolc, &
@@ -629,21 +659,24 @@ CONTAINS
       CALL set_bc_aeropt_kinne(mtime_datetime, jg, i_startidx, i_endidx, nproma, nlev, jb, &
         &                      nbands_sw, nbands_lw, zf(:,:), dz(:,:),            &
         &                      od_sw_vr(:,:,:), ssa_sw_vr(:,:,:),                 &
-        &                      g_sw_vr (:,:,:), od_lw_vr(:,:,:)                   )
+        &                      g_sw_vr (:,:,:), od_lw_vr(:,:,:), lacc=lzacc)
     ENDIF
 
     ! Volcanic stratospheric aerosols for CMIP6
     IF (ANY( irad_aero == (/iRadAeroVolc,iRadAeroKinneVolc,iRadAeroKinneVolcSP/) )) THEN 
-     CALL add_bc_aeropt_cmip6_volc(mtime_datetime, jg, i_startidx, i_endidx, nproma, nlev, jb, &
-       &                           nbands_sw, nbands_lw, zf(:,:), dz(:,:),            &
-       &                           od_sw_vr(:,:,:), ssa_sw_vr(:,:,:),                 &
-       &                           g_sw_vr (:,:,:), od_lw_vr(:,:,:)                   )
+      CALL add_bc_aeropt_cmip6_volc(mtime_datetime, jg, i_startidx, i_endidx, nproma, nlev, jb, &
+        &                           nbands_sw, nbands_lw, zf(:,:), dz(:,:),            &
+        &                           od_sw_vr(:,:,:), ssa_sw_vr(:,:,:),                 &
+        &                           g_sw_vr (:,:,:), od_lw_vr(:,:,:), lacc=lzacc       )
     END IF
 
     ! Simple plumes
     IF (ANY( irad_aero == (/iRadAeroKinneVolcSP,iRadAeroKinneSP/) )) THEN
 
       IF (atm_phy_nwp_config(jg)%lscale_cdnc) THEN
+#ifdef _OPENACC
+        CALL finish(routine, "lscale_cdnc not ported to OpenACC.")
+#endif
         ! get x_cdnc_ref; the simple plume scheme uses 2005 as reference year
         mtime_2005 => newDatetime(mtime_datetime)
         mtime_2005%date%year = 2005
@@ -659,12 +692,16 @@ CONTAINS
 
       CALL add_bc_aeropt_splumes(jg, i_startidx, i_endidx, nproma, nlev, jb,  &
         &                        nbands_sw, mtime_datetime,          &
-        &                        zf(:,:), dz(:,:), zh(:,nlev+1),     &
-        &                        wavenum1_sw(:), wavenum2_sw(:),     &
-        &                        od_sw_vr(:,:,:), ssa_sw_vr(:,:,:),  &
-        &                        g_sw_vr (:,:,:), x_cdnc(:)          )
+        &                        zf(:,:), dz(:,:), zh(:,nlev+1),     & ! in
+        &                        wavenum1_sw(:), wavenum2_sw(:),     & ! in
+        &                        od_sw_vr(:,:,:), ssa_sw_vr(:,:,:),  & ! inout
+        &                        g_sw_vr (:,:,:), x_cdnc(:),         & ! inout
+        &                        lacc=lzacc                          )
 
       IF (atm_phy_nwp_config(jg)%lscale_cdnc) THEN
+#ifdef _OPENACC
+        CALL finish(routine, "lscale_cdnc not ported to OpenACC.")
+#endif
         ! apply scaling with safety limits:
         DO jc = i_startidx, i_endidx
           cloud_num_fac(jc) = x_cdnc(jc) / MAX(1e-6_wp, x_cdnc_ref(jc))
@@ -675,13 +712,32 @@ CONTAINS
 
     END IF
 
+    !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1) IF(lzacc)
     ! Vertically reverse the fields:
+    !$ACC LOOP SEQ
     DO jk = 1, nlev
-      od_lw (:,jk,:) = od_lw_vr (:,nlev-jk+1,:)
-      od_sw (:,jk,:) = od_sw_vr (:,nlev-jk+1,:)
-      ssa_sw(:,jk,:) = ssa_sw_vr(:,nlev-jk+1,:)
-      g_sw  (:,jk,:) = g_sw_vr  (:,nlev-jk+1,:)
-    ENDDO
+      !$ACC LOOP SEQ
+      DO jwl = 1, nbands_lw
+        !$ACC LOOP GANG(STATIC: 1) VECTOR
+        DO jc = 1, nproma
+          od_lw (jc,jk,jwl) = od_lw_vr (jc,nlev-jk+1,jwl)
+        END DO
+      END DO
+
+      !$ACC LOOP SEQ
+      DO jwl = 1, nbands_sw
+        !$ACC LOOP GANG(STATIC: 1) VECTOR
+        DO jc = 1, nproma
+          od_sw (jc,jk,jwl) = od_sw_vr (jc,nlev-jk+1,jwl)
+          ssa_sw(jc,jk,jwl) = ssa_sw_vr(jc,nlev-jk+1,jwl)
+          g_sw  (jc,jk,jwl) = g_sw_vr  (jc,nlev-jk+1,jwl)
+        END DO
+      END DO
+    END DO
+    !$ACC END PARALLEL
+
+    !$ACC WAIT(1)
+    !$ACC END DATA
 
   END SUBROUTINE nwp_aerosol_kinne
 
@@ -926,7 +982,7 @@ CONTAINS
 
   END SUBROUTINE cams_forecast_prep
   !---------------------------------------------------------------------------------------
-  SUBROUTINE nwp_aerosol_tegen ( istart, iend, nlev, nlevp1, k850, temp, pres, pres_ifc,                 &
+  SUBROUTINE nwp_aerosol_tegen ( istart, iend, nlev, nlevp1, k850, temp, pres, pres_ifc, qv,             &
     &                            aer_ss_mo1, aer_org_mo1, aer_bc_mo1, aer_so4_mo1, aer_dust_mo1,         &
     &                            aer_ss_mo2, aer_org_mo2, aer_bc_mo2, aer_so4_mo2, aer_dust_mo2,         &
     &                            pref_aerdis,latitude, dpres_mc, time_weight,                            &
@@ -939,7 +995,7 @@ CONTAINS
       &  k850(:)                             !< Index of 850 hPa layer
     REAL(wp), INTENT(in)                :: &
       &  temp(:,:), pres(:,:),             & !< temperature and pressure at full level
-      &  pres_ifc(:,:),                    & !< pressure at half level
+      &  pres_ifc(:,:), qv(:,:),           & !< pressure at half level, specific humidity
       &  aer_ss_mo1(:), aer_org_mo1(:),    & !< Month 1 climatology from extpar file (sea salt, organic)
       &  aer_bc_mo1(:), aer_so4_mo1(:),    & !< Month 1 climatology from extpar file (blck carbon, sulphate)
       &  aer_dust_mo1(:),                  & !< Month 1 climatology from extpar file (dust)
@@ -977,7 +1033,7 @@ CONTAINS
       &  zaeqso (nproma), zaeqsn,          &
       &  zptrop (nproma), zdtdz(nproma),   &
       &  zlatfac(nproma), zstrfac,         &
-      &  zpblfac, zslatq
+      &  zpblfac, zslatq, tunefac_pbl, rh, humidity_fac
     REAL(wp), PARAMETER                 :: &
       & ztrbga = 0.03_wp  / (101325.0_wp - 19330.0_wp), &
       ! original value for zstbga of 0.045 is much higher than recently published climatologies
@@ -987,6 +1043,9 @@ CONTAINS
     LOGICAL                             :: &
       &  lzacc                               !< non-optional version of lacc
 
+    ! increase aerosol enhancement in stable PBLs with prognostic aersosol
+    tunefac_pbl = MERGE(1._wp, 2._wp, iprog_aero <= 1)
+
     CALL set_acc_host_or_device(lzacc, lacc)
 
     !$ACC DATA CREATE(zsign, zvdaes, zvdael, zvdaeu, zvdaed) &
@@ -1077,7 +1136,7 @@ CONTAINS
     !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1) IF(lzacc)
     !$ACC LOOP SEQ
     DO jk = 1,nlev
-      !$ACC LOOP GANG VECTOR PRIVATE(zaeqsn, zaeqln, zaeqsun, zaequn, zaeqdn, zstrfac, zpblfac)
+      !$ACC LOOP GANG VECTOR PRIVATE(zaeqsn, zaeqln, zaeqsun, zaequn, zaeqdn, zstrfac, zpblfac, rh, humidity_fac)
       DO jc = istart, iend
         zaeqsn  = zvdaes(jc,jk+1) * aerosol(jc,iss)
         zaeqln  = zvdael(jc,jk+1) * aerosol(jc,iorg)
@@ -1087,8 +1146,11 @@ CONTAINS
 
         ! stratosphere factor: 1 in stratosphere, 0 in troposphere, width of transition zone 0.1*p_TP
         zstrfac = MIN(1._wp,MAX(0._wp,10._wp*(zptrop(jc)-pres(jc,jk))/zptrop(jc)))
-        ! PBL stability factor; enhance organic, sulfate and black carbon aerosol for stable stratification
-        zpblfac = 1._wp + MIN(1.5_wp,1.e2_wp*MAX(0._wp, zdtdz(jc) + grav/cpd))
+        ! PBL stability factor; enhance organic, sulfate and black carbon aerosol for stable stratification;
+        ! account for particle growth in nearly saturated air
+        rh = qv(jc,jk)*pres(jc,jk)/((rdv+o_m_rdv*qv(jc,jk))*sat_pres_water(temp(jc,jk)))
+        humidity_fac = MERGE(0._wp, 20._wp*MAX(0._wp,rh-0.8_wp), iprog_aero <= 1)
+        zpblfac = 1._wp + tunefac_pbl*MIN(1.5_wp,1.e2_wp*MAX(0._wp, zdtdz(jc) + grav/cpd)) + humidity_fac
 
         zaeq1(jc,jk) = (1._wp-zstrfac)*MAX(zpblfac*(zaeqln-zaeqlo(jc)), ztrbga*zlatfac(jc)*dpres_mc(jc,jk))
         zaeq2(jc,jk) = (1._wp-zstrfac)*(zaeqsn-zaeqso(jc))
@@ -1175,31 +1237,71 @@ CONTAINS
   END SUBROUTINE get_time_intp_weights
 
   !---------------------------------------------------------------------------------------
-  SUBROUTINE nwp_aerosol_cleanup(od_lw, od_sw, ssa_sw, g_sw)
+  SUBROUTINE nwp_aerosol_cleanup(zaeq1, zaeq2, zaeq3, zaeq4, zaeq5, od_lw, od_sw, ssa_sw, g_sw, lacc)
+
     CHARACTER(len=*), PARAMETER :: &
       &  routine = modname//':nwp_aerosol_cleanup'
 
     REAL(wp), ALLOCATABLE, INTENT(inout) :: &
+      &  zaeq1(:,:,:),         & !< Tegen optical thicknesses       1: continental
+      &  zaeq2(:,:,:),         & !< relative to 550 nm, including   2: maritime
+      &  zaeq3(:,:,:),         & !< a vertical profile              3: desert
+      &  zaeq4(:,:,:),         & !< for 5 different                 4: urban
+      &  zaeq5(:,:,:),         & !< aerosol species.                5: stratospheric background
       &  od_lw(:,:,:,:),       & !< Longwave optical thickness
       &  od_sw(:,:,:,:),       & !< Shortwave optical thickness
       &  ssa_sw(:,:,:,:),      & !< Shortwave asymmetry factor
       &  g_sw(:,:,:,:)           !< Shortwave single scattering albedo
     ! Local variables
     INTEGER :: istat
+    LOGICAL, INTENT(IN), OPTIONAL :: lacc
+
+    CALL assert_acc_device_only("nwp_aerosol_cleanup", lacc)
+
+    !$ACC WAIT
+    IF( ALLOCATED(zaeq1) ) THEN
+      !$ACC EXIT DATA DELETE(zaeq1)
+      DEALLOCATE(zaeq1, STAT=istat)
+      IF(istat /= SUCCESS) CALL finish(routine, 'Deallocation of zaeq1 failed.')
+    ENDIF
+    IF( ALLOCATED(zaeq2) ) THEN
+      !$ACC EXIT DATA DELETE(zaeq2)
+      DEALLOCATE(zaeq2, STAT=istat)
+      IF(istat /= SUCCESS) CALL finish(routine, 'Deallocation of zaeq2 failed.')
+    ENDIF
+    IF( ALLOCATED(zaeq3) ) THEN
+      !$ACC EXIT DATA DELETE(zaeq3)
+      DEALLOCATE(zaeq3, STAT=istat)
+      IF(istat /= SUCCESS) CALL finish(routine, 'Deallocation of zaeq3 failed.')
+    ENDIF
+    IF( ALLOCATED(zaeq4) ) THEN
+      !$ACC EXIT DATA DELETE(zaeq4)
+      DEALLOCATE(zaeq4, STAT=istat)
+      IF(istat /= SUCCESS) CALL finish(routine, 'Deallocation of zaeq4 failed.')
+    ENDIF
+    IF( ALLOCATED(zaeq5) ) THEN
+      !$ACC EXIT DATA DELETE(zaeq5)
+      DEALLOCATE(zaeq5, STAT=istat)
+      IF(istat /= SUCCESS) CALL finish(routine, 'Deallocation of zaeq5 failed.')
+    ENDIF
 
     IF( ALLOCATED(od_lw) ) THEN
+      !$ACC EXIT DATA DELETE(od_lw)
       DEALLOCATE(od_lw, STAT=istat)
       IF(istat /= SUCCESS) CALL finish(routine, 'Deallocation of od_lw failed.')
     ENDIF
     IF( ALLOCATED(od_sw) ) THEN
+      !$ACC EXIT DATA DELETE(od_sw)
       DEALLOCATE(od_sw, STAT=istat)
       IF(istat /= SUCCESS) CALL finish(routine, 'Deallocation of od_sw failed.')
     ENDIF
     IF( ALLOCATED(ssa_sw) ) THEN
+      !$ACC EXIT DATA DELETE(ssa_sw)
       DEALLOCATE(ssa_sw, STAT=istat)
       IF(istat /= SUCCESS) CALL finish(routine, 'Deallocation of ssa_sw failed.')
     ENDIF
     IF( ALLOCATED(g_sw) ) THEN
+      !$ACC EXIT DATA DELETE(g_sw)
       DEALLOCATE(g_sw, STAT=istat)
       IF(istat /= SUCCESS) CALL finish(routine, 'Deallocation of g_sw failed.')
     ENDIF
@@ -1207,4 +1309,3 @@ CONTAINS
   END SUBROUTINE nwp_aerosol_cleanup
 
 END MODULE mo_nwp_aerosol
-
diff --git a/src/atm_phy_nwp/mo_nwp_ecrad_init.f90 b/src/atm_phy_nwp/mo_nwp_ecrad_init.f90
index 262d493240..8dda39f2b9 100644
--- a/src/atm_phy_nwp/mo_nwp_ecrad_init.f90
+++ b/src/atm_phy_nwp/mo_nwp_ecrad_init.f90
@@ -418,12 +418,17 @@ CONTAINS
     !$ACC   COPYIN(ecrad_conf%i_g_from_reordered_g_lw) &
     !$ACC   COPYIN(ecrad_conf%i_emiss_from_band_lw) &
     !$ACC   COPYIN(ecrad_conf%pdf_sampler) &
-    !$ACC   COPYIN(ecrad_conf%sw_albedo_weights)
+    !$ACC   COPYIN(ecrad_conf%sw_albedo_weights) &
+    !$ACC   COPYIN(ecrad_conf%gas_optics_sw)
     !$ACC ENTER DATA COPYIN(ecrad_conf%cloud_optics%liq_coeff_lw) &
     !$ACC   COPYIN(ecrad_conf%cloud_optics%liq_coeff_sw) &
     !$ACC   COPYIN(ecrad_conf%cloud_optics%ice_coeff_lw) &
     !$ACC   COPYIN(ecrad_conf%cloud_optics%ice_coeff_sw) &
-    !$ACC   COPYIN(ecrad_conf%pdf_sampler%val)
+    !$ACC   COPYIN(ecrad_conf%pdf_sampler%val) &
+    !$ACC   COPYIN(ecrad_conf%gas_optics_sw%spectral_def) &
+    !$ACC   COPYIN(ecrad_conf%gas_optics_sw%spectral_def)
+    !$ACC ENTER DATA COPYIN(ecrad_conf%gas_optics_sw%spectral_def%wavenumber1_band) &
+    !$ACC   COPYIN(ecrad_conf%gas_optics_sw%spectral_def%wavenumber2_band)
 
 #ifdef _OPENACC
     CALL ecrad_openacc_crosscheck(ecrad_conf)
@@ -486,8 +491,7 @@ CONTAINS
         CALL finish(routine,'ecrad_conf%i_solver_sw == ISolverCloudless not ported to GPU')
     END SELECT
 
-
-    IF (ecrad_conf%use_aerosols == .FALSE.) THEN
+    IF (.NOT. ecrad_conf%use_aerosols) THEN
       CALL finish(routine,'ecrad_conf%use_aerosols == .FALSE. not ported to GPU.')
     ENDIF
 
diff --git a/src/atm_phy_nwp/mo_nwp_ecrad_interface.f90 b/src/atm_phy_nwp/mo_nwp_ecrad_interface.f90
index f67e89d753..49ae69dfe2 100644
--- a/src/atm_phy_nwp/mo_nwp_ecrad_interface.f90
+++ b/src/atm_phy_nwp/mo_nwp_ecrad_interface.f90
@@ -1,4 +1,14 @@
+! ICON
+!
+! ---------------------------------------------------------------
+! Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
+! Contact information: icon-model.org
 !
+! See AUTHORS.TXT for a list of authors
+! See LICENSES/ for license information
+! SPDX-License-Identifier: BSD-3-Clause
+! ---------------------------------------------------------------
+
 ! This module is the interface between ICON:nwp_radiation to the radiation scheme ecRad
 !
 ! - There are two interfaces within this module: nwp_ecrad_radiation and
@@ -17,19 +27,6 @@
 ! - The transfer of data from ICON to ecRad and vice versa is performed within
 !   routines from mo_nwp_ecrad_utilities and mo_nwp_ecrad_prep_aerosol, independent of
 !   the choice to use a reduced radiation grid or not.
-!
-!
-!
-! ICON
-!
-! ---------------------------------------------------------------
-! Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
-! Contact information: icon-model.org
-!
-! See AUTHORS.TXT for a list of authors
-! See LICENSES/ for license information
-! SPDX-License-Identifier: BSD-3-Clause
-! ---------------------------------------------------------------
 
 !----------------------------
 #include "omp_definitions.inc"
@@ -115,17 +112,16 @@ CONTAINS
     TYPE(t_patch), TARGET,   INTENT(in)    :: pt_patch         !< Current domain info
     TYPE(t_external_data),   INTENT(in)    :: ext_data         !< External data container
 
-    REAL(wp),                INTENT(in)    ::             &
-      & zaeq1(nproma,pt_patch%nlev,pt_patch%nblks_c),     & !< Climatological aerosol (Tegen)
-      & zaeq2(nproma,pt_patch%nlev,pt_patch%nblks_c),     & !< Climatological aerosol (Tegen)
-      & zaeq3(nproma,pt_patch%nlev,pt_patch%nblks_c),     & !< Climatological aerosol (Tegen)
-      & zaeq4(nproma,pt_patch%nlev,pt_patch%nblks_c),     & !< Climatological aerosol (Tegen)
-      & zaeq5(nproma,pt_patch%nlev,pt_patch%nblks_c)        !< Climatological aerosol (Tegen)
-    REAL(wp), TARGET, ALLOCATABLE, INTENT(in) ::          &
-      & od_lw (:,:,:,:)                             ,     & !< LW aerosol optical thickness
-      & od_sw (:,:,:,:)                             ,     & !< SW aerosol optical thickness
-      & g_sw  (:,:,:,:)                             ,     & !< SW aerosol asymmetry factor
-      & ssa_sw(:,:,:,:)                                     !< SW aerosol single scattering albedo
+    REAL(wp), ALLOCATABLE, TARGET, INTENT(in) :: &
+      & zaeq1 (:,:,:),    & !< Climatological aerosol (Tegen)
+      & zaeq2 (:,:,:),    & !< Climatological aerosol (Tegen)
+      & zaeq3 (:,:,:),    & !< Climatological aerosol (Tegen)
+      & zaeq4 (:,:,:),    & !< Climatological aerosol (Tegen)
+      & zaeq5 (:,:,:),    & !< Climatological aerosol (Tegen)
+      & od_lw (:,:,:,:),  & !< LW aerosol optical thickness
+      & od_sw (:,:,:,:),  & !< SW aerosol optical thickness
+      & g_sw  (:,:,:,:),  & !< SW aerosol asymmetry factor
+      & ssa_sw(:,:,:,:)     !< SW aerosol single scattering albedo
 
     TYPE(t_nh_diag), TARGET, INTENT(in)         :: pt_diag       !< ICON diagnostic variables
     TYPE(t_nwp_phy_diag), TARGET, INTENT(inout) :: prm_diag      !< ICON physics diagnostics
@@ -221,7 +217,7 @@ CONTAINS
     ALLOCATE( zswflx_up_clr(nproma_sub,nlevp1), zswflx_dn_clr(nproma_sub,nlevp1) )
     ALLOCATE( opt_ptrs_lw(ecrad_conf%n_bands_lw), opt_ptrs_sw(ecrad_conf%n_bands_sw) )
     !$ACC ENTER DATA CREATE(cosmu0mask, zlwflx_up, zlwflx_dn, zswflx_up, zswflx_dn, zlwflx_up_clr, zlwflx_dn_clr) &
-    !$ACC   CREATE(zswflx_up_clr, zswflx_dn_clr) ASYNC(1)
+    !$ACC   CREATE(zswflx_up_clr, zswflx_dn_clr, opt_ptrs_lw, opt_ptrs_sw) ASYNC(1)
 
     CALL ecrad_single_level%allocate(nproma_sub, 2, 1, .true.) !< use_sw_albedo_direct, 2 bands
     ecrad_single_level%solar_irradiance = 1._wp            !< Obtain normalized fluxes which corresponds to the
@@ -325,7 +321,6 @@ CONTAINS
         end do
         !$ACC END PARALLEL
 
-        !$ACC DATA PRESENT(cosmu0mask)
         !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
         !$ACC LOOP GANG VECTOR
         do jc = 1, nproma_sub
@@ -340,7 +335,6 @@ CONTAINS
           ENDIF
         ENDDO
         !$ACC END PARALLEL
-        !$ACC END DATA
 
 ! Fill single level configuration type
         !$ACC WAIT
@@ -409,11 +403,14 @@ CONTAINS
             &  iRadAeroART)
             DO jw = 1, ecrad_conf%n_bands_lw
               opt_ptrs_lw(jw)%ptr_od  => od_lw(jcs:jce,:,jb,jw)
+              !$ACC ENTER DATA ATTACH(opt_ptrs_lw(jw)%ptr_od) ASYNC(1)
             ENDDO
             DO jw = 1, ecrad_conf%n_bands_sw
               opt_ptrs_sw(jw)%ptr_od  => od_sw(jcs:jce,:,jb,jw)
               opt_ptrs_sw(jw)%ptr_ssa => ssa_sw(jcs:jce,:,jb,jw)
               opt_ptrs_sw(jw)%ptr_g   => g_sw(jcs:jce,:,jb,jw)
+              !$ACC ENTER DATA ATTACH(opt_ptrs_sw(jw)%ptr_od, opt_ptrs_sw(jw)%ptr_ssa) &
+              !$ACC   ATTACH(opt_ptrs_sw(jw)%ptr_g) ASYNC(1)
             ENDDO
             CALL nwp_ecrad_prep_aerosol(1, nlev, i_startidx_rad, i_endidx_rad,   &
               &                         opt_ptrs_lw, opt_ptrs_sw,                &
@@ -498,7 +495,7 @@ CONTAINS
     IF ( ecrad_conf%use_aerosols ) CALL ecrad_aerosol%deallocate()
     CALL ecrad_flux%deallocate()
     !$ACC EXIT DATA DELETE(cosmu0mask, zlwflx_up, zlwflx_dn, zswflx_up, zswflx_dn, zlwflx_up_clr, zlwflx_dn_clr) &
-    !$ACC   DELETE(zswflx_up_clr, zswflx_dn_clr)
+    !$ACC   DELETE(zswflx_up_clr, zswflx_dn_clr, opt_ptrs_lw, opt_ptrs_sw)
     DEALLOCATE( cosmu0mask )
     DEALLOCATE( zlwflx_up,     zlwflx_dn,     zswflx_up,    zswflx_dn     )
     DEALLOCATE( zlwflx_up_clr, zlwflx_dn_clr, zswflx_up_clr,zswflx_dn_clr )
@@ -547,17 +544,16 @@ CONTAINS
     TYPE(t_patch), TARGET,   INTENT(in)    :: pt_par_patch     !< Parent domain info
     TYPE(t_external_data),   INTENT(in)    :: ext_data         !< External data container
 
-    REAL(wp),                INTENT(in)    ::             &
-      & zaeq1(nproma,pt_patch%nlev,pt_patch%nblks_c),     & !< Climatological aerosol (Tegen)
-      & zaeq2(nproma,pt_patch%nlev,pt_patch%nblks_c),     & !< Climatological aerosol (Tegen)
-      & zaeq3(nproma,pt_patch%nlev,pt_patch%nblks_c),     & !< Climatological aerosol (Tegen)
-      & zaeq4(nproma,pt_patch%nlev,pt_patch%nblks_c),     & !< Climatological aerosol (Tegen)
-      & zaeq5(nproma,pt_patch%nlev,pt_patch%nblks_c)        !< Climatological aerosol (Tegen)
-    REAL(wp), ALLOCATABLE,   INTENT(in)    ::             &
-      & od_lw (:,:,:,:)                             ,     & !< LW aerosol optical thickness
-      & od_sw (:,:,:,:)                             ,     & !< SW aerosol optical thickness
-      & g_sw  (:,:,:,:)                             ,     & !< SW aerosol asymmetry factor
-      & ssa_sw(:,:,:,:)                                     !< SW aerosol single scattering albedo
+    REAL(wp), ALLOCATABLE, TARGET, INTENT(in) :: &
+      & zaeq1 (:,:,:),    & !< Climatological aerosol (Tegen)
+      & zaeq2 (:,:,:),    & !< Climatological aerosol (Tegen)
+      & zaeq3 (:,:,:),    & !< Climatological aerosol (Tegen)
+      & zaeq4 (:,:,:),    & !< Climatological aerosol (Tegen)
+      & zaeq5 (:,:,:),    & !< Climatological aerosol (Tegen)
+      & od_lw (:,:,:,:),  & !< LW aerosol optical thickness
+      & od_sw (:,:,:,:),  & !< SW aerosol optical thickness
+      & g_sw  (:,:,:,:),  & !< SW aerosol asymmetry factor
+      & ssa_sw(:,:,:,:)     !< SW aerosol single scattering albedo
 
     TYPE(t_nh_diag), TARGET, INTENT(in)    :: pt_diag       !< ICON diagnostic variables
     TYPE(t_nwp_phy_diag),    INTENT(inout) :: prm_diag      !< ICON physics diagnostics
@@ -621,11 +617,6 @@ CONTAINS
       &  zrg_o3(:,:,:),              & !< Ozone mass mixing ratio on reduced grid
       &  zrg_tot_cld(:,:,:,:),       & !< Mass mixing ratio of water vapor, cloud water and cloud ice on reduced grid
       &  zrg_clc(:,:,:),             & !< Cloud cover on reduced grid
-      &  zrg_aeq1(:,:,:),            & !< Climatological aerosol on reduced grid
-      &  zrg_aeq2(:,:,:),            & !< Climatological aerosol on reduced grid
-      &  zrg_aeq3(:,:,:),            & !< Climatological aerosol on reduced grid
-      &  zrg_aeq4(:,:,:),            & !< Climatological aerosol on reduced grid
-      &  zrg_aeq5(:,:,:),            & !< Climatological aerosol on reduced grid
       &  zrg_trsolall(:,:,:),        & !< solar transmissivity, all sky, net down on reduced grid
       &  zrg_lwflxall(:,:,:),        & !< Terrestrial flux, all sky, net down on reduced grid
       &  zrg_lwflx_up_sfc(:,:),      & !< Longwave upward flux at surface on reduced grid
@@ -661,14 +652,17 @@ CONTAINS
     ! Indices and pointers of extra (optional) fields that are needed by radiation
     ! and therefore have to be aggregated to the radiation grid
     INTEGER :: irg_acdnc, irg_fr_glac, irg_fr_land,  irg_qr, irg_qs, irg_qg,  &
-      &        irg_reff_qr, irg_reff_qs, irg_reff_qg, irg_camsaermr(n_camsaermr)
+      &        irg_reff_qr, irg_reff_qs, irg_reff_qg, irg_camsaermr(n_camsaermr), &
+      &        irg_zaeq1, irg_zaeq2, irg_zaeq3, irg_zaeq4, irg_zaeq5
     INTEGER, DIMENSION (ecrad_conf%n_bands_lw) :: irg_od_lw
     INTEGER, DIMENSION (ecrad_conf%n_bands_sw) :: irg_od_sw, irg_ssa_sw, irg_g_sw
     REAL(wp), DIMENSION(:,:),  POINTER :: &
       &  ptr_acdnc => NULL(),                                                 &
       &  ptr_qr => NULL(),      ptr_qs => NULL(),      ptr_qg => NULL(),      &
       &  ptr_reff_qc => NULL(), ptr_reff_qi => NULL(), ptr_reff_qr => NULL(), &
-      &  ptr_reff_qs => NULL(), ptr_reff_qg => NULL()
+      &  ptr_reff_qs => NULL(), ptr_reff_qg => NULL(),                        &
+      &  ptr_aeq1 => NULL(), ptr_aeq2 => NULL(), ptr_aeq3 => NULL(),          &
+      &  ptr_aeq4 => NULL(), ptr_aeq5 => NULL()
 
     TYPE(t_opt_ptrs),ALLOCATABLE :: &
       &  opt_ptrs_lw(:), opt_ptrs_sw(:)    !< Contains pointers to aerosol optical properties
@@ -758,7 +752,7 @@ CONTAINS
       !$ACC   CREATE(zrg_trsol_nir_sfc, zrg_trsol_vis_sfc, zrg_trsol_par_sfc) &
       !$ACC   CREATE(zrg_fr_nir_sfc_diff, zrg_fr_vis_sfc_diff, zrg_fr_par_sfc_diff) &
       !$ACC   CREATE(zrg_trsol_dn_sfc_diff, zrg_trsol_clr_sfc) &
-      !$ACC   CREATE(zrg_lwflx_clr_sfc, aclcov) ASYNC(1)
+      !$ACC   CREATE(zrg_lwflx_clr_sfc, aclcov)
 
     ! Set dimensions for 3D radiative flux variables
     IF (atm_phy_nwp_config(jg)%l_3d_rad_fluxes) THEN
@@ -788,14 +782,8 @@ CONTAINS
     ALLOCATE(zrg_pres     (nproma,nlev_rg  ,nblks_par_c),   &
       &      zrg_temp     (nproma,nlev_rg  ,nblks_par_c),   &
       &      zrg_o3       (nproma,nlev_rg  ,nblks_par_c),   &
-      &      zrg_aeq1     (nproma,nlev_rg  ,nblks_par_c),   &
-      &      zrg_aeq2     (nproma,nlev_rg  ,nblks_par_c),   &
-      &      zrg_aeq3     (nproma,nlev_rg  ,nblks_par_c),   &
-      &      zrg_aeq4     (nproma,nlev_rg  ,nblks_par_c),   &
-      &      zrg_aeq5     (nproma,nlev_rg  ,nblks_par_c),   &
       &      zrg_clc      (nproma,nlev_rg  ,nblks_par_c))
-    !$ACC ENTER DATA CREATE(zrg_pres, zrg_temp, zrg_o3, zrg_aeq1, zrg_aeq2) &
-    !$ACC   CREATE(zrg_aeq3, zrg_aeq4, zrg_aeq5, zrg_clc) ASYNC(1)
+    !$ACC ENTER DATA CREATE(zrg_pres, zrg_temp, zrg_o3, zrg_clc) ASYNC(1)
 
     IF (atm_phy_nwp_config(jg)%icpl_rad_reff > 0) THEN
       ALLOCATE(zrg_reff_liq (nproma,nlev_rg,nblks_par_c),   &
@@ -830,32 +818,45 @@ CONTAINS
     irg_ssa_sw       = 0
     irg_g_sw         = 0
     irg_camsaermr(:) = 0
+    irg_zaeq1        = 0
+    irg_zaeq2        = 0
+    irg_zaeq3        = 0
+    irg_zaeq4        = 0
+    irg_zaeq5        = 0
 
     CALL input_extra_flds%construct(nlev_rg)  ! Extra fields in upscaling routine: 3D fields with nlev_rg
     CALL input_extra_2D%construct(1)          ! Extra fields in upscaling routine: 2D fields
     CALL input_extra_reff%construct(nlev_rg)  ! Extra fields in upscaling routine: extra Reff
 
     SELECT CASE (atm_phy_nwp_config(jg)%icpl_rad_reff)
-    CASE (0)  ! Own calculation of reff inside ecrad_set_clouds()
-      CALL input_extra_flds%assign(prm_diag%acdnc, irg_acdnc)
-      CALL input_extra_2D%assign(ext_data%atm%fr_land, irg_fr_land)
-      CALL input_extra_2D%assign(ext_data%atm%fr_glac, irg_fr_glac)
-    CASE (2) ! Option to use all hydrometeors reff individually
-      ! Set extra hydrometeors and extra effective radius (in different array due to different interpolation)
-      IF (ANY(ecrad_iqr == ecrad_hyd_list) ) THEN
-        CALL input_extra_flds%assign(pt_prog%tracer(:,:,:,iqr), irg_qr)
-        CALL input_extra_reff%assign(prm_diag%reff_qr(:,:,:), irg_reff_qr, assoc_hyd = irg_qr )
-      ENDIF
-      IF (ANY(ecrad_iqs == ecrad_hyd_list) ) THEN
-        CALL input_extra_flds%assign(pt_prog%tracer(:,:,:,iqs), irg_qs)
-        CALL input_extra_reff%assign(prm_diag%reff_qs(:,:,:), irg_reff_qs, assoc_hyd = irg_qs )
-      ENDIF
-      IF ( iqg >0 .AND. ANY(ecrad_iqg == ecrad_hyd_list) ) THEN
-        CALL input_extra_flds%assign(pt_prog%tracer(:,:,:,iqg), irg_qg)
-        CALL input_extra_reff%assign(prm_diag%reff_qg(:,:,:), irg_reff_qg, assoc_hyd = irg_qg )
-      ENDIF
+      CASE (0)  ! Own calculation of reff inside ecrad_set_clouds()
+        CALL input_extra_flds%assign(prm_diag%acdnc, irg_acdnc)
+        CALL input_extra_2D%assign(ext_data%atm%fr_land, irg_fr_land)
+        CALL input_extra_2D%assign(ext_data%atm%fr_glac, irg_fr_glac)
+      CASE (2) ! Option to use all hydrometeors reff individually
+        ! Set extra hydrometeors and extra effective radius (in different array due to different interpolation)
+        IF (ANY(ecrad_iqr == ecrad_hyd_list) ) THEN
+          CALL input_extra_flds%assign(pt_prog%tracer(:,:,:,iqr), irg_qr)
+          CALL input_extra_reff%assign(prm_diag%reff_qr(:,:,:), irg_reff_qr, assoc_hyd = irg_qr )
+        ENDIF
+        IF (ANY(ecrad_iqs == ecrad_hyd_list) ) THEN
+          CALL input_extra_flds%assign(pt_prog%tracer(:,:,:,iqs), irg_qs)
+          CALL input_extra_reff%assign(prm_diag%reff_qs(:,:,:), irg_reff_qs, assoc_hyd = irg_qs )
+        ENDIF
+        IF ( iqg >0 .AND. ANY(ecrad_iqg == ecrad_hyd_list) ) THEN
+          CALL input_extra_flds%assign(pt_prog%tracer(:,:,:,iqg), irg_qg)
+          CALL input_extra_reff%assign(prm_diag%reff_qg(:,:,:), irg_reff_qg, assoc_hyd = irg_qg )
+        ENDIF
     END SELECT
 
+    IF (irad_aero == iRadAeroTegen) THEN
+      CALL input_extra_flds%assign(zaeq1(:,:,:), irg_zaeq1)
+      CALL input_extra_flds%assign(zaeq2(:,:,:), irg_zaeq2)
+      CALL input_extra_flds%assign(zaeq3(:,:,:), irg_zaeq3)
+      CALL input_extra_flds%assign(zaeq4(:,:,:), irg_zaeq4)
+      CALL input_extra_flds%assign(zaeq5(:,:,:), irg_zaeq5)
+    ENDIF
+
     IF (ANY( irad_aero == (/iRadAeroConstKinne,iRadAeroKinne,iRadAeroVolc,iRadAeroART,  &
       &                     iRadAeroKinneVolc,iRadAeroKinneVolcSP,iRadAeroKinneSP/) )) THEN
       ! Aerosol extra fields
@@ -867,13 +868,13 @@ CONTAINS
         CALL input_extra_flds%assign(ssa_sw(:,:,:,jw), irg_ssa_sw(jw))
         CALL input_extra_flds%assign(g_sw(:,:,:,jw), irg_g_sw(jw))
       ENDDO
-    END IF
+    ENDIF
 
      IF (irad_aero == iRadAeroCAMSclim .OR. irad_aero == iRadAeroCAMStd) THEN
        DO jt = 1, n_camsaermr
          CALL input_extra_flds%assign(pt_diag%camsaermr(:,:,:,jt), irg_camsaermr(jt))
        ENDDO
-     END IF
+     ENDIF
 
     !$ACC DATA COPYIN(input_extra_flds, input_extra_2D, input_extra_reff)
     CALL input_extra_flds%acc_attach()
@@ -888,11 +889,11 @@ CONTAINS
     IF ( input_extra_2D%ntot > 0 )  THEN
       ALLOCATE( zrg_extra_2D(nproma,nblks_par_c,input_extra_2D%ntot) )
       !$ACC ENTER DATA CREATE(zrg_extra_2D) ASYNC(1)
-    END IF
+    ENDIF
     IF ( input_extra_reff%ntot  > 0 ) THEN
       ALLOCATE( zrg_extra_reff(nproma,input_extra_reff%nlev_rg,nblks_par_c,input_extra_reff%ntot) )
       !$ACC ENTER DATA CREATE(zrg_extra_reff) ASYNC(1)
-    END IF
+    ENDIF
 
 
     rl_start = 1 ! SR radiation is not set up to handle boundaries of nested domains
@@ -936,7 +937,7 @@ CONTAINS
       CALL init(zrg_swflx_dn_clr(:,:,:), 0._wp, lacc=.TRUE., opt_acc_async=.TRUE.)
     END IF
 
-!$OMP DO PRIVATE(jb, i_startidx, i_endidx), ICON_OMP_GUIDED_SCHEDULE
+!$OMP DO PRIVATE(jb, jc, i_startidx, i_endidx), ICON_OMP_GUIDED_SCHEDULE
     DO jb = i_startblk, i_endblk
       CALL get_indices_c(pt_patch, jb, i_startblk, i_endblk, &
         &                       i_startidx, i_endidx, rl_start, rl_end)
@@ -952,28 +953,25 @@ CONTAINS
 !$OMP END PARALLEL
 
 ! Upscale ICON input fields from full grid to reduced radiation grid
-
-    CALL upscale_rad_input(pt_patch%id, pt_par_patch%id,                                 &
-      &                    nlev_rg,                                                      &
-      &                    prm_diag%lw_emiss, prm_diag%cosmu0,                           &
-      &                    prm_diag%albvisdir, prm_diag%albnirdir, prm_diag%albvisdif,   &
-      &                    prm_diag%albnirdif, prm_diag%albdif, prm_diag%tsfctrad,       &
-      &                    prm_diag%ktype, pt_diag%pres_ifc, pt_diag%pres,               &
-      &                    pt_diag%temp, prm_diag%tot_cld, ptr_clc,                      &
-      &                    ext_data%atm%o3, zaeq1, zaeq2, zaeq3, zaeq4, zaeq5,           &
-      &                    zrg_emis_rad,                                                 &
-      &                    zrg_cosmu0, zrg_albvisdir, zrg_albnirdir, zrg_albvisdif,      &
-      &                    zrg_albnirdif, zrg_albdif, zrg_tsfc, zrg_rtype, zrg_pres_ifc, &
-      &                    zrg_pres, zrg_temp,                                           &
-      &                    zrg_tot_cld, zrg_clc, zrg_o3,                                 &
-      &                    zrg_aeq1, zrg_aeq2, zrg_aeq3, zrg_aeq4, zrg_aeq5,             &
-      &                    zlp_pres_ifc, zlp_tot_cld, prm_diag%buffer_rrg,               &
-      &                    atm_phy_nwp_config(jg)%icpl_rad_reff,                         &
-      &                    prm_diag%reff_qc, prm_diag%reff_qi,                           &
-      &                    zrg_reff_liq, zrg_reff_frz,                                   &
-      &                    input_extra_flds, zrg_extra_flds,                             &
-      &                    input_extra_2D, zrg_extra_2D,                                 &
-      &                    input_extra_reff, zrg_extra_reff, lacc=.TRUE.)
+    CALL upscale_rad_input(pt_patch%id, pt_par_patch%id,                                 & ! in
+      &                    nlev_rg,                                                      & ! in
+      &                    prm_diag%lw_emiss, prm_diag%cosmu0,                           & ! in
+      &                    prm_diag%albvisdir, prm_diag%albnirdir, prm_diag%albvisdif,   & ! in
+      &                    prm_diag%albnirdif, prm_diag%albdif, prm_diag%tsfctrad,       & ! in
+      &                    prm_diag%ktype, pt_diag%pres_ifc, pt_diag%pres,               & ! in
+      &                    pt_diag%temp, prm_diag%tot_cld, ptr_clc,                      & ! in
+      &                    ext_data%atm%o3, zrg_emis_rad,                                & ! in, out
+      &                    zrg_cosmu0, zrg_albvisdir, zrg_albnirdir, zrg_albvisdif,      & ! out
+      &                    zrg_albnirdif, zrg_albdif, zrg_tsfc, zrg_rtype, zrg_pres_ifc, & ! out
+      &                    zrg_pres, zrg_temp,                                           & ! out
+      &                    zrg_tot_cld, zrg_clc, zrg_o3,                                 & ! out
+      &                    zlp_pres_ifc, zlp_tot_cld, prm_diag%buffer_rrg,               & ! out, out, in
+      &                    atm_phy_nwp_config(jg)%icpl_rad_reff,                         & ! in
+      &                    prm_diag%reff_qc, prm_diag%reff_qi,                           & ! in
+      &                    zrg_reff_liq, zrg_reff_frz,                                   & ! opt out
+      &                    input_extra_flds, zrg_extra_flds,                             & ! opt in, opt out
+      &                    input_extra_2D, zrg_extra_2D,                                 & ! opt in, opt out
+      &                    input_extra_reff, zrg_extra_reff, lacc=.TRUE.)                  ! opt in, opt out
 
 ! Set indices for reduced grid loop
     IF (jg == 1 .AND. l_limited_area) THEN
@@ -1034,12 +1032,7 @@ CONTAINS
     !$ACC ENTER DATA CREATE(cosmu0mask) ASYNC(1)
     ALLOCATE(opt_ptrs_lw(ecrad_conf%n_bands_lw))
     ALLOCATE(opt_ptrs_sw(ecrad_conf%n_bands_sw))
-
-    !$ACC DATA PRESENT(cosmu0mask, zrg_cosmu0, zrg_tsfc) &
-    !$ACC   PRESENT(zrg_albvisdif, zrg_albnirdif, zrg_albvisdir, zrg_albnirdir) &
-    !$ACC   PRESENT(zrg_emis_rad, zrg_pres_ifc, zrg_temp, zrg_pres, zrg_o3) &
-    !$ACC   PRESENT(zrg_tot_cld, zrg_clc, zrg_aeq1, zrg_aeq2, zrg_aeq3, zrg_aeq4) &
-    !$ACC   PRESENT(zrg_aeq5)
+    !$ACC ENTER DATA CREATE(opt_ptrs_lw, opt_ptrs_sw) ASYNC(1)
 
 
 !$OMP DO PRIVATE(jb, jc, i_startidx, i_endidx,                  &
@@ -1047,7 +1040,9 @@ CONTAINS
 !$OMP            i_startidx_rad,i_endidx_rad,                   &
 !$OMP            ptr_acdnc, ptr_fr_land, ptr_fr_glac,           &
 !$OMP            ptr_reff_qc, ptr_reff_qi, ptr_qr, ptr_reff_qr, &
-!$OMP            ptr_qs, ptr_reff_qs, ptr_qg, ptr_reff_qg),     &
+!$OMP            ptr_qs, ptr_reff_qs, ptr_qg, ptr_reff_qg,      &
+!$OMP            ptr_aeq1, ptr_aeq2, ptr_aeq3, ptr_aeq4,        &
+!$OMP            ptr_aeq5),                                     &
 !$OMP ICON_OMP_GUIDED_SCHEDULE
     DO jb = i_startblk, i_endblk
       CALL get_indices_c(ptr_pp, jb, i_startblk, i_endblk, &
@@ -1090,6 +1085,23 @@ CONTAINS
         IF ( irg_reff_qs > 0 ) ptr_reff_qs => zrg_extra_reff(jcs:jce,:,jb,irg_reff_qs)
         IF ( irg_reff_qg > 0 ) ptr_reff_qg => zrg_extra_reff(jcs:jce,:,jb,irg_reff_qg)
 
+        IF (irad_aero == iRadAeroTegen) THEN
+          IF ( ALL((/irg_zaeq1, irg_zaeq2, irg_zaeq3, irg_zaeq4, irg_zaeq5/) > 0) ) THEN
+            ptr_aeq1 => zrg_extra_flds(jcs:jce,:,jb,irg_zaeq1)
+            !$ACC ENTER DATA ATTACH(ptr_aeq1) IF(ASSOCIATED(ptr_aeq1))
+            ptr_aeq2 => zrg_extra_flds(jcs:jce,:,jb,irg_zaeq2)
+            !$ACC ENTER DATA ATTACH(ptr_aeq2) IF(ASSOCIATED(ptr_aeq2))
+            ptr_aeq3 => zrg_extra_flds(jcs:jce,:,jb,irg_zaeq3)
+            !$ACC ENTER DATA ATTACH(ptr_aeq3) IF(ASSOCIATED(ptr_aeq3))
+            ptr_aeq4 => zrg_extra_flds(jcs:jce,:,jb,irg_zaeq4)
+            !$ACC ENTER DATA ATTACH(ptr_aeq4) IF(ASSOCIATED(ptr_aeq4))
+            ptr_aeq5 => zrg_extra_flds(jcs:jce,:,jb,irg_zaeq5)
+            !$ACC ENTER DATA ATTACH(ptr_aeq5) IF(ASSOCIATED(ptr_aeq5))
+          ELSE
+            CALL finish(routine, 'Upscaling of Tegen fields not successful')
+          ENDIF
+        ENDIF
+
         IF (irad_aero == iRadAeroCAMSclim .OR. irad_aero == iRadAeroCAMStd) THEN
           IF ( ALL(irg_camsaermr(:)  > 0) ) THEN
             DO jt = 1, n_camsaermr
@@ -1101,21 +1113,25 @@ CONTAINS
         IF ( ALL(irg_od_lw(:)  > 0) ) THEN
           DO jw = 1, ecrad_conf%n_bands_lw
             opt_ptrs_lw(jw)%ptr_od  => zrg_extra_flds(jcs:jce,:,jb,irg_od_lw(jw))
+            !$ACC ENTER DATA ATTACH(opt_ptrs_lw(jw)%ptr_od) ASYNC(1)
           ENDDO
         ENDIF
         IF ( ALL(irg_od_sw(:)  > 0) ) THEN
           DO jw = 1, ecrad_conf%n_bands_sw
             opt_ptrs_sw(jw)%ptr_od  => zrg_extra_flds(jcs:jce,:,jb,irg_od_sw(jw))
+            !$ACC ENTER DATA ATTACH(opt_ptrs_sw(jw)%ptr_od) ASYNC(1)
           ENDDO
         ENDIF
         IF ( ALL(irg_ssa_sw(:) > 0) ) THEN
           DO jw = 1, ecrad_conf%n_bands_sw
             opt_ptrs_sw(jw)%ptr_ssa => zrg_extra_flds(jcs:jce,:,jb,irg_ssa_sw(jw))
+            !$ACC ENTER DATA ATTACH(opt_ptrs_sw(jw)%ptr_ssa) ASYNC(1)
           ENDDO
         ENDIF
         IF ( ALL(irg_g_sw(:)   > 0) ) THEN
           DO jw = 1, ecrad_conf%n_bands_sw
             opt_ptrs_sw(jw)%ptr_g   => zrg_extra_flds(jcs:jce,:,jb,irg_g_sw(jw))
+            !$ACC ENTER DATA ATTACH(opt_ptrs_sw(jw)%ptr_g) ASYNC(1)
           ENDDO
         ENDIF
 
@@ -1170,9 +1186,7 @@ CONTAINS
           CASE(iRadAeroTegen)
             ! Fill aerosol configuration type with Tegen aerosol
             CALL nwp_ecrad_prep_aerosol(1, nlev_rg, i_startidx_rad, i_endidx_rad,         &
-              &                         zrg_aeq1(jcs:jce,:,jb), zrg_aeq2(jcs:jce,:,jb),   &
-              &                         zrg_aeq3(jcs:jce,:,jb), zrg_aeq4(jcs:jce,:,jb),   &
-              &                         zrg_aeq5(jcs:jce,:,jb),                           &
+              &                         ptr_aeq1, ptr_aeq2, ptr_aeq3, ptr_aeq4, ptr_aeq5, &
               &                         ecrad_conf, ecrad_aerosol, lacc=.TRUE.)
           CASE(iRadAeroCAMSclim,iRadAeroCAMStd)
             ! Fill aerosol configuration type with CAMS 3D climatology/forecasted aerosols
@@ -1238,7 +1252,6 @@ CONTAINS
 
 ! CLEANUP
     !$ACC WAIT
-    !$ACC END DATA
     CALL ecrad_single_level%deallocate()
     CALL ecrad_thermodynamics%deallocate()
     CALL ecrad_gas%deallocate()
@@ -1253,6 +1266,7 @@ CONTAINS
     DO jw = 1, ecrad_conf%n_bands_sw
       CALL opt_ptrs_sw(jw)%finalize()
     ENDDO
+    !$ACC EXIT DATA DELETE(opt_ptrs_lw, opt_ptrs_sw)
     DEALLOCATE( opt_ptrs_lw, opt_ptrs_sw )
     IF (irad_aero == iRadAeroCAMSclim .OR. irad_aero == iRadAeroCAMStd) DEALLOCATE( ptr_camsaermr )
 !$OMP END PARALLEL
@@ -1277,10 +1291,9 @@ CONTAINS
       &  lacc=.TRUE. )
 
     !$ACC WAIT
-    !$ACC END DATA
     !$ACC EXIT DATA DELETE(zrg_cosmu0, zrg_tsfc, zrg_emis_rad, zrg_albvisdir) &
     !$ACC   DELETE(zrg_albnirdir, zrg_albvisdif, zrg_albnirdif, zrg_pres_ifc, zrg_o3) &
-    !$ACC   DELETE(zrg_aeq1, zrg_aeq2, zrg_aeq3, zrg_clc, zrg_aeq4, zrg_aeq5) &
+    !$ACC   DELETE(zrg_clc) &
     !$ACC   DELETE(zrg_tot_cld, zrg_pres, zrg_temp, zrg_trsolall, zrg_lwflxall) &
     !$ACC   DELETE(zrg_lwflx_up_sfc, zrg_trsol_up_toa, zrg_trsol_up_sfc) &
     !$ACC   DELETE(zrg_trsol_dn_sfc_diff, zrg_trsol_clr_sfc, zrg_aclcov) &
@@ -1291,8 +1304,8 @@ CONTAINS
     !$ACC   DELETE(zrg_swflx_up, zrg_swflx_dn, zrg_lwflx_up_clr, zrg_lwflx_dn_clr) &
     !$ACC   DELETE(zrg_swflx_up_clr, zrg_swflx_dn_clr)
     DEALLOCATE (zrg_cosmu0, zrg_tsfc, zrg_emis_rad, zrg_albvisdir, zrg_albnirdir, zrg_albvisdif,   &
-      &         zrg_albnirdif, zrg_pres_ifc, zrg_o3, zrg_aeq1, zrg_aeq2, zrg_aeq3, zrg_clc,        &
-      &         zrg_aeq4, zrg_aeq5, zrg_tot_cld, zrg_pres, zrg_temp, zrg_trsolall, zrg_lwflxall,   &
+      &         zrg_albnirdif, zrg_pres_ifc, zrg_o3, zrg_clc,                                      &
+      &         zrg_tot_cld, zrg_pres, zrg_temp, zrg_trsolall, zrg_lwflxall,                       &
       &         zrg_lwflx_up_sfc, zrg_trsol_up_toa, zrg_trsol_up_sfc, zrg_trsol_dn_sfc_diff,       &
       &         zrg_trsol_clr_sfc, zrg_aclcov, zrg_trsol_nir_sfc, zrg_trsol_vis_sfc,               &
       &         zrg_trsol_par_sfc, zrg_fr_nir_sfc_diff, zrg_fr_vis_sfc_diff,                       &
@@ -1312,6 +1325,18 @@ CONTAINS
     !$ACC EXIT DATA DELETE(zrg_extra_reff) IF(input_extra_reff%ntot>0)
     IF (input_extra_reff%ntot > 0 ) DEALLOCATE(zrg_extra_reff)
 
+    !$ACC EXIT DATA DETACH(ptr_aeq1) IF(ASSOCIATED(ptr_aeq1))
+    NULLIFY(ptr_aeq1)
+    !$ACC EXIT DATA DETACH(ptr_aeq2) IF(ASSOCIATED(ptr_aeq2))
+    NULLIFY(ptr_aeq2)
+    !$ACC EXIT DATA DETACH(ptr_aeq3) IF(ASSOCIATED(ptr_aeq3))
+    NULLIFY(ptr_aeq3)
+    !$ACC EXIT DATA DETACH(ptr_aeq4) IF(ASSOCIATED(ptr_aeq4))
+    NULLIFY(ptr_aeq4)
+    !$ACC EXIT DATA DETACH(ptr_aeq5) IF(ASSOCIATED(ptr_aeq5))
+    NULLIFY(ptr_aeq5)
+
+    !$ACC END DATA ! input_extra_flds, input_extra_2D, input_extra_reff
     CALL input_extra_flds%destruct()
     CALL input_extra_2D%destruct()
     CALL input_extra_reff%destruct()
diff --git a/src/atm_phy_nwp/mo_nwp_ecrad_prep_aerosol.f90 b/src/atm_phy_nwp/mo_nwp_ecrad_prep_aerosol.f90
index f569b297f2..05cf372f33 100644
--- a/src/atm_phy_nwp/mo_nwp_ecrad_prep_aerosol.f90
+++ b/src/atm_phy_nwp/mo_nwp_ecrad_prep_aerosol.f90
@@ -83,13 +83,14 @@ CONTAINS
 
     CALL assert_acc_device_only("nwp_ecrad_prep_aerosol_constant", lacc)
 
-    !$ACC DATA PRESENT(ecrad_conf, ecrad_aerosol, ssa_lw, od_lw, g_lw, ssa_sw, od_sw, g_sw)
+    n_bands_lw = get_nbands_lw_aerosol(ecrad_conf)
+    n_bands_sw = get_nbands_sw_aerosol(ecrad_conf)
 
+    !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
     IF (ecrad_conf%do_lw) THEN
-      n_bands_lw = get_nbands_lw_aerosol(ecrad_conf)
-      !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
-      !$ACC LOOP GANG VECTOR COLLAPSE(3)
+      !$ACC LOOP SEQ
       DO jband = 1, n_bands_lw
+        !$ACC LOOP GANG(STATIC: 1) VECTOR COLLAPSE(2)
         DO jk = slev, nlev
           DO jc = i_startidx, i_endidx
             ecrad_aerosol%od_lw(jband,jk,jc)  = 0._wp
@@ -107,14 +108,12 @@ CONTAINS
           ENDDO ! jc
         ENDDO ! jk
       ENDDO ! jband
-      !$ACC END PARALLEL
     ENDIF
 
     IF (ecrad_conf%do_sw) THEN
-      n_bands_sw = get_nbands_sw_aerosol(ecrad_conf)
-      !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
-      !$ACC LOOP GANG VECTOR COLLAPSE(3)
+      !$ACC LOOP SEQ
       DO jband = 1, n_bands_sw
+        !$ACC LOOP GANG(STATIC: 1) VECTOR COLLAPSE(2)
         DO jk = slev, nlev
           DO jc = i_startidx, i_endidx
             ecrad_aerosol%od_sw(jband,jk,jc)  = 0._wp
@@ -132,10 +131,8 @@ CONTAINS
           ENDDO ! jc
         ENDDO ! jk
       ENDDO ! jband
-      !$ACC END PARALLEL
     ENDIF
-
-    !$ACC END DATA
+    !$ACC END PARALLEL
 
   END SUBROUTINE nwp_ecrad_prep_aerosol_constant
   !---------------------------------------------------------------------------------------
@@ -191,15 +188,14 @@ CONTAINS
 
     CALL assert_acc_device_only("nwp_ecrad_prep_aerosol_tegen", lacc)
 
-    !$ACC DATA PRESENT(ecrad_conf, ecrad_aerosol, zaeq1, zaeq2, zaeq3, zaeq4, zaeq5, scal_abs, scal_sct, scal_asy)
-
+    !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
 ! LONGWAVE
     IF (ecrad_conf%do_lw) THEN
-      !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
-      !$ACC LOOP GANG VECTOR COLLAPSE(3)
+      !$ACC LOOP SEQ
       DO jk = slev, nlev
 !NEC$ nointerchange
 !NEC$ nounroll
+        !$ACC LOOP GANG(STATIC: 1) VECTOR COLLAPSE(2)
         DO jband = 1, n_bands_lw
           DO jc = i_startidx, i_endidx
             ! LW optical thickness
@@ -214,15 +210,14 @@ CONTAINS
           ENDDO ! jc
         ENDDO ! jband
       ENDDO ! jk
-      !$ACC END PARALLEL
     ENDIF
 
 ! SHORTWAVE
     IF (ecrad_conf%do_sw) THEN
-      !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
-      !$ACC LOOP GANG VECTOR COLLAPSE(3) PRIVATE(jband_shift, tau_abs, tau_sca)
+      !$ACC LOOP SEQ
       DO jk = slev, nlev
 !NEC$ nointerchange
+        !$ACC LOOP GANG(STATIC: 1) VECTOR COLLAPSE(2) PRIVATE(jband_shift, tau_abs, tau_sca)
         DO jband = 1, n_bands_sw
           DO jc = i_startidx, i_endidx
 
@@ -257,10 +252,8 @@ CONTAINS
           ENDDO ! jc
         ENDDO ! jband
       ENDDO ! jk
-      !$ACC END PARALLEL
     ENDIF
-
-    !$ACC END DATA
+    !$ACC END PARALLEL
 
   END SUBROUTINE nwp_ecrad_prep_aerosol_tegen
 
@@ -293,11 +286,14 @@ CONTAINS
     TYPE(t_opt_ptrs), DIMENSION(ecrad_conf%n_bands_lw), INTENT(in):: opt_ptrs_lw
     TYPE(t_opt_ptrs), DIMENSION(ecrad_conf%n_bands_sw), INTENT(in):: opt_ptrs_sw
 
-    CALL assert_acc_host_only("nwp_ecrad_prep_aerosol_td", lacc)
+    CALL assert_acc_device_only("nwp_ecrad_prep_aerosol_td", lacc)
 
-   ! LONGWAVE
+    !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
+    ! LONGWAVE
     IF (ecrad_conf%do_lw) THEN
+      !$ACC LOOP SEQ
       DO jband = 1, ecrad_conf%n_bands_lw
+        !$ACC LOOP GANG(STATIC: 1) VECTOR COLLAPSE(2)
         DO jk = slev, nlev
           DO jc = i_startidx, i_endidx
             ! LW optical thickness
@@ -310,9 +306,11 @@ CONTAINS
       ENDDO     ! jband
     ENDIF
 
-   !SHORTWAVE
+    !SHORTWAVE
     IF (ecrad_conf%do_sw) THEN
+      !$ACC LOOP SEQ
       DO jband = 1, ecrad_conf%n_bands_sw
+        !$ACC LOOP GANG(STATIC: 1) VECTOR COLLAPSE(2)
         DO jk = slev, nlev
           DO jc = i_startidx, i_endidx
             ecrad_aerosol%od_sw  (jband,jk,jc) = opt_ptrs_sw(jband)%ptr_od  (jc,jk)
@@ -322,6 +320,8 @@ CONTAINS
         ENDDO   ! jk
       ENDDO     ! jband
     ENDIF
+    !$ACC END PARALLEL
+
   END SUBROUTINE nwp_ecrad_prep_aerosol_td
   !---------------------------------------------------------------------------------------
 
diff --git a/src/atm_phy_nwp/mo_nwp_gpu_util.f90 b/src/atm_phy_nwp/mo_nwp_gpu_util.f90
index 6d4c457f20..1329557954 100644
--- a/src/atm_phy_nwp/mo_nwp_gpu_util.f90
+++ b/src/atm_phy_nwp/mo_nwp_gpu_util.f90
@@ -63,7 +63,7 @@ MODULE mo_nwp_gpu_util
     !$ACC   HOST(ext_data%atm%z0_lcc, ext_data%atm%z0_lcc_min, ext_data%atm%plcovmax_lcc) &
     !$ACC   HOST(ext_data%atm%laimax_lcc, ext_data%atm%rootdmax_lcc, ext_data%atm%stomresmin_lcc) &
     !$ACC   HOST(ext_data%atm%snowalb_lcc, ext_data%atm%snowtile_lcc, ext_data%atm%t_cl, ext_data%atm%lc_frac_t) &
-    !$ACC   HOST(ext_data%atm%frac_t, ext_data%atm%sai_t) &
+    !$ACC   HOST(ext_data%atm%frac_t, ext_data%atm%sai_t, ext_data%atm%o3) &
     !$ACC   ASYNC(1) IF(PRESENT(ext_data))
 
     !$ACC UPDATE HOST(p_int%lsq_high, p_int%lsq_lin) &
@@ -173,7 +173,7 @@ MODULE mo_nwp_gpu_util
     !$ACC   DEVICE(ext_data%atm%z0_lcc, ext_data%atm%z0_lcc_min, ext_data%atm%plcovmax_lcc) &
     !$ACC   DEVICE(ext_data%atm%laimax_lcc, ext_data%atm%rootdmax_lcc, ext_data%atm%stomresmin_lcc) &
     !$ACC   DEVICE(ext_data%atm%snowalb_lcc, ext_data%atm%snowtile_lcc, ext_data%atm%t_cl, ext_data%atm%lc_frac_t) &
-    !$ACC   DEVICE(ext_data%atm%frac_t, ext_data%atm%sai_t) &
+    !$ACC   DEVICE(ext_data%atm%frac_t, ext_data%atm%sai_t, ext_data%atm%o3) &
     !$ACC   ASYNC(1) IF(PRESENT(ext_data))
 
     !$ACC UPDATE DEVICE(p_int%lsq_high, p_int%lsq_lin) &
diff --git a/src/atm_phy_nwp/mo_nwp_phy_state.f90 b/src/atm_phy_nwp/mo_nwp_phy_state.f90
index a93b50c38d..3fc7fef192 100644
--- a/src/atm_phy_nwp/mo_nwp_phy_state.f90
+++ b/src/atm_phy_nwp/mo_nwp_phy_state.f90
@@ -2869,7 +2869,8 @@ SUBROUTINE new_nwp_phy_diag_list( k_jg, klev, klevp1, kblks,    &
         grib2_desc = grib2_var(255, 255, 255, ibits, GRID_UNSTRUCTURED, GRID_CELL)
         CALL add_var( diag_list, 'aod_550nm', diag%aod_550nm,           &
           & GRID_UNSTRUCTURED_CELL, ZA_SURFACE, cf_desc, grib2_desc, ldims=shape2d, lrestart=.FALSE., &
-          & lopenacc=.FALSE.)
+          & lopenacc=.TRUE.)
+        __acc_attach(diag%aod_550nm)
       ENDIF
     ENDIF  ! var_in_output
 
diff --git a/src/atm_phy_nwp/mo_nwp_rad_interface.f90 b/src/atm_phy_nwp/mo_nwp_rad_interface.f90
index 8e72687332..f57e344e06 100644
--- a/src/atm_phy_nwp/mo_nwp_rad_interface.f90
+++ b/src/atm_phy_nwp/mo_nwp_rad_interface.f90
@@ -1,9 +1,3 @@
-!
-! This module is the interface between nwp_nh_interface to the radiation schemes
-! (ecRad and RRTM).
-!
-!
-!
 ! ICON
 !
 ! ---------------------------------------------------------------
@@ -15,6 +9,9 @@
 ! SPDX-License-Identifier: BSD-3-Clause
 ! ---------------------------------------------------------------
 
+! This module is the interface between nwp_nh_interface to the radiation schemes
+! (ecRad and RRTM).
+
 !----------------------------
 #include "omp_definitions.inc"
 !----------------------------
@@ -50,11 +47,10 @@ MODULE mo_nwp_rad_interface
     &                                operator(+), operator(-), newTimedelta, deallocateTimedelta, &
     &                                getPTStringFromSeconds, newDatetime, deallocateDatetime
   USE mo_timer,                ONLY: timer_start, timer_stop, timers_level, timer_preradiaton
-  USE mo_nwp_gpu_util,         ONLY: gpu_d2h_nh_nwp
   USE mo_bc_greenhouse_gases,  ONLY: bc_greenhouse_gases_time_interpolation
 #ifdef _OPENACC
   USE mo_mpi,                  ONLY: i_am_accel_node, my_process_is_work
-  USE mo_nwp_gpu_util,         ONLY: gpu_h2d_nh_nwp
+  USE mo_nwp_gpu_util,         ONLY: gpu_h2d_nh_nwp, gpu_d2h_nh_nwp
 #endif
   USE mo_bc_solar_irradiance,  ONLY: read_bc_solar_irradiance, ssi_time_interpolation
   USE mo_bcs_time_interpolation,ONLY: t_time_interpolation_weights,   &
@@ -112,18 +108,16 @@ MODULE mo_nwp_rad_interface
     TYPE(datetime), POINTER :: prev_radtime
     TYPE(timedelta), POINTER :: td_dt_rad
 
-    REAL(wp) :: &
-      & zaeq1(nproma,pt_patch%nlev,pt_patch%nblks_c), &
-      & zaeq2(nproma,pt_patch%nlev,pt_patch%nblks_c), &
-      & zaeq3(nproma,pt_patch%nlev,pt_patch%nblks_c), &
-      & zaeq4(nproma,pt_patch%nlev,pt_patch%nblks_c), &
-      & zaeq5(nproma,pt_patch%nlev,pt_patch%nblks_c)
-
-    REAL(wp), ALLOCATABLE :: & ! These fields are currently only used for Kinne-Aerosol
-      & od_lw(:,:,:,:)  , & !< LW optical thickness of aerosols
-      & od_sw(:,:,:,:)  , & !< SW aerosol optical thickness
-      & g_sw (:,:,:,:)  , & !< SW aerosol asymmetry factor
-      & ssa_sw(:,:,:,:)     !< SW aerosol single scattering albedo
+    REAL(wp), TARGET, ALLOCATABLE :: &
+      &  zaeq1(:,:,:),   & !< Tegen optical thicknesses       1: continental
+      &  zaeq2(:,:,:),   & !< relative to 550 nm, including   2: maritime
+      &  zaeq3(:,:,:),   & !< a vertical profile              3: desert
+      &  zaeq4(:,:,:),   & !< for 5 different                 4: urban
+      &  zaeq5(:,:,:),   & !< aerosol species.                5: stratospheric background
+      &  od_lw(:,:,:,:), & !< LW optical thickness of aerosols
+      &  od_sw(:,:,:,:), & !< SW aerosol optical thickness
+      &  g_sw (:,:,:,:), & !< SW aerosol asymmetry factor
+      &  ssa_sw(:,:,:,:)     !< SW aerosol single scattering albedo
 
     CHARACTER(len=max_timedelta_str_len) :: dstring
     INTEGER :: jg
@@ -179,11 +173,12 @@ MODULE mo_nwp_rad_interface
         nbands_sw   = ecrad_conf%n_bands_sw ! With ecckd, this might actually be g-points if ecrad_conf%do_cloud_aerosol_per_sw_g_point
         wavenum1_sw => ecrad_conf%gas_optics_sw%spectral_def%wavenumber1_band
         wavenum2_sw => ecrad_conf%gas_optics_sw%spectral_def%wavenumber2_band
+        !$ACC ENTER DATA CREATE(wavenum1_sw, wavenum2_sw) IF(lzacc)
+        !$ACC UPDATE DEVICE(wavenum1_sw, wavenum2_sw) IF(lzacc)
     END SELECT
 #endif
 
     ! Aerosol
-    !$ACC DATA CREATE(zaeq1, zaeq2, zaeq3, zaeq4, zaeq5) IF(lzacc)
     CALL nwp_aerosol_interface(mtime_datetime, pt_patch, ext_data, pt_diag, prm_diag,     &
       &                        zf(:,:,:), zh(:,:,:), dz(:,:,:),                           &
       &                        atm_phy_nwp_config(jg)%dt_rad,                             &
@@ -310,17 +305,18 @@ MODULE mo_nwp_rad_interface
 #ifdef __ECRAD
       IF (.NOT. lredgrid) THEN
         !$ACC WAIT
-        CALL nwp_ecRad_radiation ( mtime_datetime, pt_patch, ext_data,      &
+        CALL nwp_ecrad_radiation ( mtime_datetime, pt_patch, ext_data,      &
           & zaeq1, zaeq2, zaeq3, zaeq4, zaeq5,                              &
           & od_lw, od_sw, ssa_sw, g_sw,                                     &
           & pt_diag, prm_diag, pt_prog, lnd_prog, zsct, ecrad_conf, lzacc )
       ELSE
         !$ACC WAIT
-        CALL nwp_ecRad_radiation_reduced ( mtime_datetime, pt_patch,pt_par_patch, &
+        CALL nwp_ecrad_radiation_reduced ( mtime_datetime, pt_patch,pt_par_patch, &
           & ext_data, zaeq1, zaeq2, zaeq3, zaeq4, zaeq5,                          &
           & od_lw, od_sw, ssa_sw, g_sw,                                           &
           & pt_diag, prm_diag, pt_prog, lnd_prog, zsct, ecrad_conf, lacc=lzacc )
       ENDIF
+      !$ACC EXIT DATA DELETE(wavenum1_sw, wavenum2_sw) IF(lzacc)
 #else
       CALL finish(routine,  &
         &      'atm_phy_nwp_config(jg)%inwp_radiation = 4 needs -D__ECRAD.')
@@ -332,10 +328,7 @@ MODULE mo_nwp_rad_interface
       CALL finish(routine,message_text)
     END SELECT ! inwp_radiation
 
-    !$ACC END DATA
-
-
-    CALL nwp_aerosol_cleanup(od_lw, od_sw, ssa_sw, g_sw)
+    CALL nwp_aerosol_cleanup(zaeq1, zaeq2, zaeq3, zaeq4, zaeq5, od_lw, od_sw, ssa_sw, g_sw, lacc=lzacc)
 
   END SUBROUTINE nwp_radiation
 
diff --git a/src/atm_phy_nwp/mo_nwp_vdiff_sea.f90 b/src/atm_phy_nwp/mo_nwp_vdiff_sea.f90
index 7e317b6421..47007452fb 100644
--- a/src/atm_phy_nwp/mo_nwp_vdiff_sea.f90
+++ b/src/atm_phy_nwp/mo_nwp_vdiff_sea.f90
@@ -901,6 +901,8 @@ CONTAINS
         & patch, init_hice, fr_seaice(:,:), new_ice_list, prog_wtr, lacc=lzacc &
       )
 
+    CALL new_ice_list%finalize()
+
   END SUBROUTINE nwp_vdiff_update_seaice
 
   !>
diff --git a/src/atm_phy_rte_rrtmgp/mo_rte_rrtmgp_interface.f90 b/src/atm_phy_rte_rrtmgp/mo_rte_rrtmgp_interface.f90
index 66e940c6a2..3742012c70 100644
--- a/src/atm_phy_rte_rrtmgp/mo_rte_rrtmgp_interface.f90
+++ b/src/atm_phy_rte_rrtmgp/mo_rte_rrtmgp_interface.f90
@@ -16,7 +16,6 @@ MODULE mo_rte_rrtmgp_interface
   USE mo_exception,                  ONLY: finish, warning
   USE mo_parallel_config,            ONLY: nproma_sub
   USE mo_bc_aeropt_kinne,            ONLY: set_bc_aeropt_kinne
-  USE mo_bc_aeropt_stenchikov,       ONLY: add_bc_aeropt_stenchikov
   USE mo_bc_aeropt_splumes,          ONLY: add_bc_aeropt_splumes
 
   USE mo_optical_props,              ONLY: ty_optical_props_1scl, &
@@ -206,9 +205,6 @@ CONTAINS
     INTEGER :: ncol_supplied, ncol_needed, jchunk_start, jchunk_end
     INTEGER :: nbndsw, nbndlw
     ! --- Aerosol optical properites - vertically reversed fields
-    REAL(wp) ::                &
-         x_cdnc       (nproma)  !< Scale factor for Cloud Droplet Number Concentration
-                                !<  baustelle - x_cndc should be used in cloud optics but isn't
     REAL(wp), ALLOCATABLE :: &
          aer_tau_lw(:,:,:),  & !< LW optical thickness of aerosols
          aer_tau_sw(:,:,:),  & !< aerosol optical thickness
@@ -220,11 +216,6 @@ CONTAINS
     !   geographic and temporal information; the geographic information is lost
     !   when the data provided to RTE+RRTMGP are extracted from larger arrarys
     !
-    ! IF (aero == ...) THEN
-    ! iaero=0: No aerosol
-    ! iaero=13: only tropospheric Kinne aerosols
-    ! iaero=14: only Stenchikov's volcanic aerosols
-    ! iaero=15: tropospheric Kinne aerosols + volcanic Stenchikov's aerosols
     ! set all aerosols to zero first
 
     lneed_aerosols = (irad_aero /= 0)
@@ -246,53 +237,30 @@ CONTAINS
       aer_asy_sw(:,:,:) = 0.0_wp
       !$ACC END KERNELS
 
-      IF (irad_aero==13 .OR. irad_aero==15 .OR. irad_aero==18) THEN
-      ! iaero=13: only Kinne aerosols are used
-      ! iaero=15: Kinne aerosols plus Stenchikov's volcanic aerosols are used
-      ! iaero=18: Kinne background aerosols (of natural origin, 1850) are set
+      IF (irad_aero==12 .OR. irad_aero==13 .OR. irad_aero==19) THEN
+      ! irad_aero=12 Kinne aerosols (natural background, data are read
+      !      from a file without year in its name.
+      ! irad_aero=13: only Kinne aerosols are used
+      ! irad_aero=19: Kinne aerosols (background of natural origin,
+      ! read from a file without year in its name!) + simple plumes
         CALL set_bc_aeropt_kinne(this_datetime,                        &
               & jg,                                                    &
-              & jcs, nproma,    nproma,                klev,           &
-              & jb,             nbndsw,                nbndlw,         &
+              & jcs,            jce,                   nproma,         &
+              & klev,           jb,                                    &
+              & nbndsw,         nbndlw,                                &
               & zf,             dz,                                    &
               & aer_tau_sw,     aer_ssa_sw,            aer_asy_sw,     &
-              & aer_tau_lw, opt_from_coupler=lrad_coupled, opt_use_acc=use_acc)
-      END IF
-      IF (irad_aero==14 .OR. irad_aero==15 .OR. irad_aero==18) THEN
-      ! iaero=14: only Stechnikov's volcanic aerosols are used (added to zero)
-      ! iaero=15: Stenchikov's volcanic aerosols are added to Kinne aerosols
-      ! iaero=18: Stenchikov's volcanic aerosols are added to Kinne background
-      !           aerosols (of natural origin, 1850)
-#ifdef _OPENACC
-        CALL warning('mo_rte_rrtmgp_interface/rte_rrtmgp_interface','Stenchikov aerosols ACC not implemented')
-#endif
-        !$ACC UPDATE HOST(aer_tau_lw, aer_tau_sw, aer_ssa_sw, aer_asy_sw, dz, pp_fl) ASYNC(1)
-        !$ACC WAIT(1)
-        CALL add_bc_aeropt_stenchikov(this_datetime,    jg,               &
-              & jcs, nproma,      nproma,                 klev,       &
-              & jb,               nbndsw,                nbndlw,           &
-              & dz,               pp_fl,                                   &
-              & aer_tau_sw,    aer_ssa_sw,         aer_asy_sw,     &
-              & aer_tau_lw                                              )
-        !$ACC UPDATE DEVICE(aer_tau_lw, aer_tau_sw, aer_ssa_sw, aer_asy_sw) ASYNC(1)
+              & aer_tau_lw, opt_from_coupler=lrad_coupled, lacc=use_acc)
       END IF
-      IF (irad_aero==18 .OR. irad_aero==19) THEN
+      IF (irad_aero==19) THEN
       ! Simple plumes are added to ...
-      ! iaero=18: ... Stennchikov's volcanic aerosols and
-      !               Kinne background aerosols (of natural origin, 1850)
       ! iaero=19: ... Kinne background aerosols (of natural origin, 1850)
-#ifdef _OPENACC
-        CALL warning('mo_rte_rrtmgp_interface/rte_rrtmgp_interface','Plumes ACC not implemented')
-#endif
-        !$ACC UPDATE HOST(aer_tau_lw, aer_tau_sw, aer_ssa_sw, aer_asy_sw, zf, dz, zh(:,klev+1)) ASYNC(1)
-        !$ACC WAIT(1)
         CALL add_bc_aeropt_splumes(                                      &
-              & jg,          jcs,         nproma,        nproma,         & 
+              & jg,          jcs,         jce,           nproma,         & 
               & klev,        jb,          nbndsw,        this_datetime,  &
               & zf,          dz,          zh(:,klev+1),  wavenum1,       &
               & wavenum2,    aer_tau_sw,  aer_ssa_sw,    aer_asy_sw,     &
-              & x_cdnc                                                   )
-        !$ACC UPDATE DEVICE(aer_tau_sw, aer_ssa_sw, aer_asy_sw) ASYNC(1)
+              & lacc=use_acc                                              )
       END IF
 
       ! this should be decativated in the concurrent version and make the aer_* global variables for output
@@ -602,7 +570,7 @@ CONTAINS
     ! into the arrays before accordingly.
 
     INTEGER  :: jk, jl !< loop indices
-    INTEGER  :: nbndlw, nbndsw, ngptsw
+    INTEGER  :: nbndlw, nbndsw !, ngptsw
     REAL(wp) ::                      &
          zsemiss(k_dist_lw%get_nband(),ncol) !< LW surface emissivity by band
     ! --- local scaled variables
@@ -622,7 +590,7 @@ CONTAINS
     !
     ! Random seeds for sampling. Needs to get somewhere upstream
     !
-    INTEGER :: band, gpt, i, j
+    INTEGER :: band, i, j
     REAL(wp) :: low, high
 
     TYPE(ty_source_func_lw)     :: source_lw !check types regarding acc later
@@ -679,7 +647,7 @@ CONTAINS
 
     nbndlw = k_dist_lw%get_nband()
     nbndsw = k_dist_sw%get_nband()
-    ngptsw = k_dist_sw%get_ngpt()
+!    ngptsw = k_dist_sw%get_ngpt()
     cld_frc_thresh = 4._wp*spacing(1._wp)
 
     ! 1.0 Constituent properties
@@ -824,13 +792,9 @@ CONTAINS
     !
     ! Boundary conditions
     !
-    ! baustelle - shouldn't the min solar zenith cosine be parameterized?
-!!debug++
     !$ACC KERNELS DEFAULT(PRESENT) ASYNC(1)
     mu0(:) = MAX(1.e-10_wp,MIN(1.0_wp,pcos_mu0(:)))
     !$ACC END KERNELS
-!!debug--
-
 
     ! 2.0 Surface Properties
     ! --------------------------------
@@ -887,7 +851,6 @@ CONTAINS
     !$ACC WAIT
     CALL stop_on_err(source_lw%alloc    (ncol, klev, k_dist_lw))
     CALL stop_on_err(atmos_lw%alloc_1scl(ncol, klev, k_dist_lw))
-    ! baustelle - surface and lowest layer temperature are considered the same
     !$ACC DATA CREATE(source_lw, atmos_lw)
 
     !$ACC DATA CREATE(source_lw%lay_source, source_lw%lev_source_inc) &
diff --git a/src/shared/mo_idx_list.f90 b/src/shared/mo_idx_list.f90
index fc4a24ddc6..4b9914f6aa 100644
--- a/src/shared/mo_idx_list.f90
+++ b/src/shared/mo_idx_list.f90
@@ -131,15 +131,13 @@ CONTAINS
       &  routine = 'mo_idx_list: idx_list1D__finalize'
   !----------------------------------------------------------
 
-    !$ACC EXIT DATA DELETE(obj%idx) IF(obj%lopenacc)
+    !$ACC WAIT(1)
+    !$ACC EXIT DATA DELETE(obj%idx, obj%ncount) IF(obj%lopenacc)
     !$ACC EXIT DATA DELETE(obj) IF(obj%lopenacc)
 
     CALL DO_DEALLOCATE(obj%idx)
     obj%ncount = 0
 
-    !$ACC WAIT(1)
-    !$ACC EXIT DATA DELETE(obj%idx, obj%ncount) IF(obj%lopenacc)
-
   END SUBROUTINE idx_list1D__finalize
 
 
@@ -218,15 +216,13 @@ CONTAINS
       &  routine = 'mo_idx_list: finalize'
   !----------------------------------------------------------
 
+    !$ACC WAIT(1)
     !$ACC EXIT DATA DELETE(obj%idx, obj%ncount) IF(obj%lopenacc)
     !$ACC EXIT DATA DELETE(obj) IF(obj%lopenacc)
 
     CALL DO_DEALLOCATE(obj%idx)
     CALL DO_DEALLOCATE(obj%ncount)
 
-    !$ACC WAIT(1)
-    !$ACC EXIT DATA DELETE(obj%idx, obj%ncount) IF(obj%lopenacc)
-
   END SUBROUTINE idx_list_blocked__finalize
 
 
diff --git a/src/shared/mo_latitude_interpolation.f90 b/src/shared/mo_latitude_interpolation.f90
index 2f815f52a9..b0d4ebe17f 100644
--- a/src/shared/mo_latitude_interpolation.f90
+++ b/src/shared/mo_latitude_interpolation.f90
@@ -26,6 +26,7 @@ MODULE mo_latitude_interpolation
   USE mo_model_domain,             ONLY: p_patch
   USE mo_impl_constants,           ONLY: min_rlcell_int, grf_bdywidth_c
   USE mo_loopindices,              ONLY: get_indices_c
+  USE mo_fortran_tools,            ONLY: set_acc_host_or_device
 
   IMPLICIT NONE
 
@@ -41,7 +42,8 @@ MODULE mo_latitude_interpolation
                                & ,kproma              ,kbdim            ,krow         &
                                & ,wgt1_lat            ,wgt2_lat         ,inmw1_lat    &
                                & ,inmw2_lat           ,p_lat_shift      ,p_rdeltalat  &
-                               & ,r_lat_clim          ,nlat_clim        ,n_order      )
+                               & ,r_lat_clim          ,nlat_clim        ,n_order      &
+                               & ,lacc                                                )
 
     ! n_order=1 if latitudes of climatology are in ascending (S->N), -1 if 
     ! latitudes are in descending (N->S) order.
@@ -61,21 +63,26 @@ MODULE mo_latitude_interpolation
                                                       ! ATTENTION: they must contain the poles 
                                                       ! r_lat_clim(0)=+-Pi/2, r_lat_clim(nlat_clim+1)=+-Pi/2
 
-    REAL(wp)                          :: zlat(kbdim)
+    REAL(wp)                          :: zlat
+    INTEGER                           :: jc
 
-    zlat(jcs:kproma)=p_patch(jg)%cells%center(jcs:kproma,krow)%lat
+    LOGICAL, OPTIONAL, INTENT(IN)     :: lacc
+    LOGICAL                           :: lzacc
+
+    CALL set_acc_host_or_device(lzacc, lacc)
+
+    !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1) IF(lzacc)
+    !$ACC LOOP GANG VECTOR PRIVATE(zlat)
+    DO jc = jcs, kproma
+        zlat=p_patch(jg)%cells%center(jc,krow)%lat
+
+        inmw1_lat(jc)=MAX(INT(n_order*(zlat-p_lat_shift)*p_rdeltalat+1),0)
+        inmw2_lat(jc)=inmw1_lat(jc)+1
+        wgt2_lat(jc)=n_order*(zlat-r_lat_clim(inmw1_lat(jc)))*p_rdeltalat
+        wgt1_lat(jc)=1.0_wp-wgt2_lat(jc)
+    END DO
+    !$ACC END PARALLEL
 
-    inmw1_lat(jcs:kproma)=MAX(INT(n_order*(zlat(jcs:kproma)-p_lat_shift)*p_rdeltalat+1),0)
-    inmw2_lat(jcs:kproma)=inmw1_lat(jcs:kproma)+1
-    wgt2_lat(jcs:kproma)=n_order*(zlat(jcs:kproma)-r_lat_clim(inmw1_lat(jcs:kproma)))*p_rdeltalat
-    wgt1_lat(jcs:kproma)=1.0_wp-wgt2_lat(jcs:kproma)
-!!$    write(0,*) '++++++++++++++++++++++++++++++'
-!!$    write(0,*) 'latitudes=',MAXVAL(zlat(1:kproma))
-!!$    write(0,*) 'p_lat_shift=',p_lat_shift, 'p_rdeltalat=',p_rdeltalat,'r_lat_clim=',r_lat_clim
-!!$    DO jl=1,kproma
-!!$      write(0,*) zlat(jl),inmw1_lat(jl),inmw2_lat(jl),wgt1_lat(jl),wgt2_lat(jl)
-!!$    END DO
-!!$    write(0,*) '++++++++++++++++++++++++++++++'
   END SUBROUTINE latitude_weights_li
 
 END MODULE mo_latitude_interpolation
-- 
2.34.1


From 6fecaa29abd062eebfe5cfa0348588aebf4bcba9 Mon Sep 17 00:00:00 2001
From: Annika Lauber <annika.lauber@c2sm.ethz.ch>
Date: Mon, 16 Sep 2024 08:30:13 +0000
Subject: [PATCH 2/4] GPU port of irad_o3=5
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

See merge request icon/icon-nwp!1530

Last Pipeline: https://gitlab.dkrz.de/icon/icon-nwp/-/pipelines/80939

GPU port of the namelist switch `irad_o3=5`, which is part of the ICON-CLM setup and was added to the `c2sm_clm_r13b03_seaice` test case.

Approved-by: Michael Jähn <michael.jaehn@env.ethz.ch>
Merged-by: Ulrich Schaettler <ulrich.schaettler@dwd.de>
---
 run/exp.c2sm_clm_r13b03_seaice                | 20 ++-----------
 run/tolerance/hashes/balfrin_cpu_nvidia       |  2 +-
 run/tolerance/hashes/balfrin_cpu_nvidia_mixed |  2 +-
 src/atm_phy_schemes/mo_o3_util.f90            | 28 +++++++++++--------
 4 files changed, 21 insertions(+), 31 deletions(-)

diff --git a/run/exp.c2sm_clm_r13b03_seaice b/run/exp.c2sm_clm_r13b03_seaice
index f2f7adca27..d71ff2eeaf 100644
--- a/run/exp.c2sm_clm_r13b03_seaice
+++ b/run/exp.c2sm_clm_r13b03_seaice
@@ -110,20 +110,6 @@ add_required_file ${latbc_path}/bc_greenhouse_rcp45_1765-2500.nc .
 add_required_file ${latbc_path}/LOWBC_1979_02.nc .
 add_required_file ${latbc_path}/LOWBC_1979_02.nc .
 
-# Add required files for iRadAeroKinnVolcSP (irad_aero=18)
-add_required_file ${icon_data_poolFolder}/input/clm_r13b03_seaice/CMIP6Forcing/bc_aeropt_cmip6_volc_lw_b16_sw_b14_1979.nc .
-
-# - tropospheric anthropogenic aerosols, simple plumes
-add_link_file ${icon_data_poolFolder}/input/clm_r13b03_seaice/MACv2.0-SP_v1.nc                          ./MACv2.0-SP_v1.nc
-#
-# - Kinne background aerosols are needed for the year 1850 (irad_aero=18,19)
-#
-datadir=${icon_data_poolFolder}/input/clm_r13b03_seaice
-#
-add_link_file $datadir/bc_aeropt_kinne_lw_b16_coa.nc                    ./
-add_link_file $datadir/bc_aeropt_kinne_sw_b14_coa.nc                    ./
-add_link_file $datadir/bc_aeropt_kinne_sw_b14_fin_1850.nc               ./bc_aeropt_kinne_sw_b14_fin.nc
-
 icon_preprocessing_source=${icon_data_rootFolder}/grids/private/mpim/icon_preprocessing/source
 # boundary conditions
 # horizontal grid(s)
@@ -376,8 +362,8 @@ cat > ${basedir}/run/${atmo_namelist} << EOF
  efdt_min_raylfric  = 7200.
  itype_z0         = 2
  icapdcycl        = 3
- icpl_aero_conv   = 0
- icpl_aero_gscp   = 0
+ icpl_aero_conv   = 1
+ icpl_aero_gscp   = 1
  icpl_o3_tp       = 1
  iprog_aero       = 0
  dt_rad           = 2400
@@ -445,7 +431,7 @@ cat > ${basedir}/run/${atmo_namelist} << EOF
   irad_cfc11  = 4           ! 4: from greenhouse gas scenario
   irad_cfc12  = 4           ! 4: from greenhouse gas scenario
   irad_o3     = 5
-  irad_aero   = 18
+  irad_aero   = 6
   albedo_type = 2          ! Modis albedo
   direct_albedo = 4
   albedo_whitecap = 1
diff --git a/run/tolerance/hashes/balfrin_cpu_nvidia b/run/tolerance/hashes/balfrin_cpu_nvidia
index cad13dfdac..c86c37aa6b 100644
--- a/run/tolerance/hashes/balfrin_cpu_nvidia
+++ b/run/tolerance/hashes/balfrin_cpu_nvidia
@@ -4,7 +4,7 @@
 icon_data_rootFolder: /scratch/mch/jenkins/icon/pool/data/ICON
 builder: balfrin_cpu_nvidia
 # The list below maps each experiment to its current experiment_hash
-"c2sm_clm_r13b03_seaice": 9fd5125a6b74a8c7a7074fd41a5b7750ff303ac1
+"c2sm_clm_r13b03_seaice": 7cbd84c9ee3d643e4220c6e25d7e98c337d8dadb
 "dwd_run_ICON_09_R2B4N5_EPS": 46a55885f52fc04e76038e717d451985f99aeb3a
 "mch_ch_lowres": 42647448335af146c69e6d3d39de5a75f45d00c0
 "mch_ch_r04b09_dace": f9a89c3a58593808d6d1c831826978d30b7e9072
diff --git a/run/tolerance/hashes/balfrin_cpu_nvidia_mixed b/run/tolerance/hashes/balfrin_cpu_nvidia_mixed
index abda4e18b5..a2077e8971 100644
--- a/run/tolerance/hashes/balfrin_cpu_nvidia_mixed
+++ b/run/tolerance/hashes/balfrin_cpu_nvidia_mixed
@@ -4,7 +4,7 @@
 icon_data_rootFolder: /scratch/mch/jenkins/icon/pool/data/ICON
 builder: balfrin_cpu_nvidia_mixed
 # The list below maps each experiment to its current experiment_hash
-"c2sm_clm_r13b03_seaice": b456a4d8e10187a365b3aa78cee932c99a2e16b5
+"c2sm_clm_r13b03_seaice": 806f8453008eb10f52f996f51d211622f275108e
 "mch_ch_lowres": d419a94fdb6e1353e16af48e85290d7a5d19be9e
 "mch_icon-ch1_small": 17e5e726d64b03a37564db2977567ebea45ac278
 "mch_icon-ch2_small": 6a673dea1dfef6f347438371a2859d08c1774440
diff --git a/src/atm_phy_schemes/mo_o3_util.f90 b/src/atm_phy_schemes/mo_o3_util.f90
index 95b519d97d..42abd3ac54 100644
--- a/src/atm_phy_schemes/mo_o3_util.f90
+++ b/src/atm_phy_schemes/mo_o3_util.f90
@@ -191,28 +191,32 @@ CONTAINS
 
         ALLOCATE(zo3_timint(nproma,ext_ozone(jg)%nplev_o3), STAT=istat)
           IF(istat /= SUCCESS) CALL finish(routine, 'Allocation of zo3_timint failed')
+        !$ACC ENTER DATA CREATE(zo3_timint)
 !$OMP PARALLEL
 !$OMP DO PRIVATE(jb,i_startidx,i_endidx) ICON_OMP_DEFAULT_SCHEDULE
         DO jb = i_startblk,i_endblk
           CALL get_indices_c(pt_patch,jb,i_startblk,i_endblk,i_startidx,i_endidx,rl_start,rl_end)
-          CALL o3_timeint(jcs = 1, jce = i_endidx, kbdim = nproma,       &
-               &          nlev_pres    = ext_ozone(jg)%nplev_o3,         &
-               &          ext_o3       = ext_ozone(jg)%o3_plev(:,:,jb,:),&
-               &          current_date = mtime_datetime,                 &
-               &          o3_time_int  = zo3_timint                      ) ! OUT
+          CALL o3_timeint(jcs = 1, jce = i_endidx, kbdim = nproma,       & ! IN
+               &          nlev_pres    = ext_ozone(jg)%nplev_o3,         & ! IN
+               &          ext_o3       = ext_ozone(jg)%o3_plev(:,:,jb,:),& ! IN
+               &          current_date = mtime_datetime,                 & ! IN
+               &          o3_time_int  = zo3_timint,                     & ! OUT
+               &          opt_use_acc  = .TRUE.                          )
           CALL o3_pl2ml  (jcs = 1, jce = i_endidx, kbdim = nproma,       &
-               &          nlev_pres    = ext_ozone(jg)%nplev_o3,         &
-               &          klev         = pt_patch%nlev,                  &
-               &          pfoz         = ext_ozone(jg)%plev_full_o3,     &
-               &          phoz         = ext_ozone(jg)%plev_half_o3,     &
-               &          ppf          = pt_diag%pres(:,:,jb),           &
-               &          pph          = pt_diag%pres_ifc(:,:,jb),       &
+               &          nlev_pres    = ext_ozone(jg)%nplev_o3,         & ! IN
+               &          klev         = pt_patch%nlev,                  & ! IN
+               &          pfoz         = ext_ozone(jg)%plev_full_o3,     & ! IN
+               &          phoz         = ext_ozone(jg)%plev_half_o3,     & ! IN
+               &          ppf          = pt_diag%pres(:,:,jb),           & ! IN
+               &          pph          = pt_diag%pres_ifc(:,:,jb),       & ! IN
                &          o3_time_int  = zo3_timint,                     & ! IN
-               &          o3_clim      = o3(:,:,jb)                      ) ! OUT ozone mass mixing ratio [kg/kg]
+               &          o3_clim      = o3(:,:,jb),                     & ! OUT ozone mass mixing ratio [kg/kg]
+               &          opt_use_acc  = .TRUE.                          )
         ENDDO !jb
 !$OMP END DO NOWAIT
 !$OMP END PARALLEL
 
+      !$ACC EXIT DATA DELETE(zo3_timint)
       DEALLOCATE(zo3_timint, STAT=istat)
         IF(istat /= SUCCESS) CALL finish(routine, 'Deallocation of zo3_timint failed')
     CASE(10)
-- 
2.34.1


From 337ea4a3e28991e358fef2eb1198ad50d3f007fc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20J=C3=A4hn?= <michael.jaehn@env.ethz.ch>
Date: Fri, 27 Sep 2024 06:46:40 +0000
Subject: [PATCH 3/4] [nwp] GPU port for icpl_aero_gscp = 3

See merge request icon/icon-nwp!1520

For the official ICON-CLM setup, the following switch was ported to GPU: `icpl_aero_gscp = 3` (MODIS climatology for cloud-droplet number)

Approved-by: Jonas Jucker <jonas.jucker@env.ethz.ch>
Merged-by: Daniel Rieger <daniel.rieger@dwd.de>
---
 run/exp.c2sm_clm_r13b03_seaice                | 22 +++++++++++++++----
 run/tolerance/hashes/balfrin_cpu_nvidia       |  2 +-
 run/tolerance/hashes/balfrin_cpu_nvidia_mixed |  2 +-
 src/atm_phy_nwp/mo_nwp_gscp_interface.f90     |  3 +++
 src/configure_model/mo_nml_crosscheck.f90     |  3 ---
 5 files changed, 23 insertions(+), 9 deletions(-)

diff --git a/run/exp.c2sm_clm_r13b03_seaice b/run/exp.c2sm_clm_r13b03_seaice
index d71ff2eeaf..4f4d6416fc 100644
--- a/run/exp.c2sm_clm_r13b03_seaice
+++ b/run/exp.c2sm_clm_r13b03_seaice
@@ -76,7 +76,7 @@ atmo_namelist=NAMELIST_${EXPNAME}_atm
 # Get required files together
 # ========================
 
-extpar_filename="external_parameter_icon_baltic_sea_DOM01_tiles.nc"
+extpar_filename="external_parameter_icon_baltic_sea_DOM01_tiles_cdnc.nc"
 add_required_file "${grids_folder}/${extpar_filename}" ./
 
 # files needed for radiation
@@ -110,6 +110,20 @@ add_required_file ${latbc_path}/bc_greenhouse_rcp45_1765-2500.nc .
 add_required_file ${latbc_path}/LOWBC_1979_02.nc .
 add_required_file ${latbc_path}/LOWBC_1979_02.nc .
 
+# Add required files for iRadAeroKinnVolcSP (irad_aero=18)
+add_required_file ${icon_data_poolFolder}/input/clm_r13b03_seaice/CMIP6Forcing/bc_aeropt_cmip6_volc_lw_b16_sw_b14_1979.nc .
+
+# - tropospheric anthropogenic aerosols, simple plumes
+add_link_file ${icon_data_poolFolder}/input/clm_r13b03_seaice/MACv2.0-SP_v1.nc                          ./MACv2.0-SP_v1.nc
+#
+# - Kinne background aerosols are needed for the year 1850 (irad_aero=18,19)
+#
+datadir=${icon_data_poolFolder}/input/clm_r13b03_seaice
+#
+add_link_file $datadir/bc_aeropt_kinne_lw_b16_coa.nc                    ./
+add_link_file $datadir/bc_aeropt_kinne_sw_b14_coa.nc                    ./
+add_link_file $datadir/bc_aeropt_kinne_sw_b14_fin_1850.nc               ./bc_aeropt_kinne_sw_b14_fin.nc
+
 icon_preprocessing_source=${icon_data_rootFolder}/grids/private/mpim/icon_preprocessing/source
 # boundary conditions
 # horizontal grid(s)
@@ -362,8 +376,8 @@ cat > ${basedir}/run/${atmo_namelist} << EOF
  efdt_min_raylfric  = 7200.
  itype_z0         = 2
  icapdcycl        = 3
- icpl_aero_conv   = 1
- icpl_aero_gscp   = 1
+ icpl_aero_conv   = 0 
+ icpl_aero_gscp   = 3
  icpl_o3_tp       = 1
  iprog_aero       = 0
  dt_rad           = 2400
@@ -431,7 +445,7 @@ cat > ${basedir}/run/${atmo_namelist} << EOF
   irad_cfc11  = 4           ! 4: from greenhouse gas scenario
   irad_cfc12  = 4           ! 4: from greenhouse gas scenario
   irad_o3     = 5
-  irad_aero   = 6
+  irad_aero   = 18
   albedo_type = 2          ! Modis albedo
   direct_albedo = 4
   albedo_whitecap = 1
diff --git a/run/tolerance/hashes/balfrin_cpu_nvidia b/run/tolerance/hashes/balfrin_cpu_nvidia
index c86c37aa6b..0f888f4633 100644
--- a/run/tolerance/hashes/balfrin_cpu_nvidia
+++ b/run/tolerance/hashes/balfrin_cpu_nvidia
@@ -4,7 +4,7 @@
 icon_data_rootFolder: /scratch/mch/jenkins/icon/pool/data/ICON
 builder: balfrin_cpu_nvidia
 # The list below maps each experiment to its current experiment_hash
-"c2sm_clm_r13b03_seaice": 7cbd84c9ee3d643e4220c6e25d7e98c337d8dadb
+"c2sm_clm_r13b03_seaice": 0e637033c7d2f00f83e1ca8d77367fbb1535f009
 "dwd_run_ICON_09_R2B4N5_EPS": 46a55885f52fc04e76038e717d451985f99aeb3a
 "mch_ch_lowres": 42647448335af146c69e6d3d39de5a75f45d00c0
 "mch_ch_r04b09_dace": f9a89c3a58593808d6d1c831826978d30b7e9072
diff --git a/run/tolerance/hashes/balfrin_cpu_nvidia_mixed b/run/tolerance/hashes/balfrin_cpu_nvidia_mixed
index a2077e8971..f7ed4705cb 100644
--- a/run/tolerance/hashes/balfrin_cpu_nvidia_mixed
+++ b/run/tolerance/hashes/balfrin_cpu_nvidia_mixed
@@ -4,7 +4,7 @@
 icon_data_rootFolder: /scratch/mch/jenkins/icon/pool/data/ICON
 builder: balfrin_cpu_nvidia_mixed
 # The list below maps each experiment to its current experiment_hash
-"c2sm_clm_r13b03_seaice": 806f8453008eb10f52f996f51d211622f275108e
+"c2sm_clm_r13b03_seaice": c46149b2051f7cbde4eb33809398221a430c4788
 "mch_ch_lowres": d419a94fdb6e1353e16af48e85290d7a5d19be9e
 "mch_icon-ch1_small": 17e5e726d64b03a37564db2977567ebea45ac278
 "mch_icon-ch2_small": 6a673dea1dfef6f347438371a2859d08c1774440
diff --git a/src/atm_phy_nwp/mo_nwp_gscp_interface.f90 b/src/atm_phy_nwp/mo_nwp_gscp_interface.f90
index 5dc76a28a5..30d7c96f71 100644
--- a/src/atm_phy_nwp/mo_nwp_gscp_interface.f90
+++ b/src/atm_phy_nwp/mo_nwp_gscp_interface.f90
@@ -319,9 +319,12 @@ CONTAINS
           ENDIF
 
         ELSE IF (atm_phy_nwp_config(jg)%icpl_aero_gscp == 3) THEN
+          !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1)
+          !$ACC LOOP GANG VECTOR
           DO jc=i_startidx,i_endidx
             qnc_s(jc) = prm_diag%cloud_num(jc,jb)
           END DO
+          !$ACC END PARALLEL
 
         ELSE
 
diff --git a/src/configure_model/mo_nml_crosscheck.f90 b/src/configure_model/mo_nml_crosscheck.f90
index 6e8ee4c62f..e30e78b1b8 100644
--- a/src/configure_model/mo_nml_crosscheck.f90
+++ b/src/configure_model/mo_nml_crosscheck.f90
@@ -574,9 +574,6 @@ CONTAINS
     IF ( irad_aero == iRadAeroCAMStd) THEN
         CALL finish(routine,'CAMS forecast irad_aero=8 is currently not supported on GPU.')
     END IF
-    IF ( atm_phy_nwp_config(jg)%icpl_aero_gscp == 3 ) THEN
-        CALL finish(routine,'Using cloud-droplet number climatology icpl_aero_gscp = 3 is currently not supported on GPU.')
-    END IF
 #endif
 
     END IF
-- 
2.34.1


From 47c424a738587adebeb6f2a2f57910dc8cb174af Mon Sep 17 00:00:00 2001
From: Christopher Purr <christopher.purr@dwd.de>
Date: Thu, 14 Nov 2024 17:20:51 +0000
Subject: [PATCH 4/4] [nwp] GPU port of the diagnosis of planetary boundary
 layer height

See merge request icon/icon-nwp!1560

The calculation of the planetary boundary layer height is ported to GPU. The calculation is purely diagnostic. This feature is necessary for regional climate simulations using ICON-CLM.

(The `dwd_run_ICON_09_R2B4N5_EPS` test case was removed from Balfrin (still running on Horeka). Random segmentation faults of this case on Balfrin hint to a compiler issue.)

(All tolerance hashes on Balfrin were brought up do date. There has been some undetected divergence in the past with marginally changed CPU results)

Approved-by: Marek Jacob <1129-b380572@users.noreply.gitlab.dkrz.de>
Merged-by: Daniel Rieger <377-m300368@users.noreply.gitlab.dkrz.de>
---
 run/checksuite.clm/clmexp.ICON_CLM            |   2 +-
 run/exp.c2sm_clm_r13b03_seaice                |   2 +-
 run/tolerance/hashes/balfrin_cpu_nvidia       |  33 ++-
 run/tolerance/hashes/balfrin_cpu_nvidia_mixed |  28 +--
 run/tolerance/pp.collect_selected_members     |  61 +++++
 scripts/experiments/c2sm/mch_tests.yml        | 221 ++++++++++++++++++
 src/atm_phy_nwp/mo_nwp_diagnosis.f90          |  18 +-
 src/atm_phy_nwp/mo_nwp_phy_state.f90          |   9 +-
 8 files changed, 324 insertions(+), 50 deletions(-)
 create mode 100644 run/tolerance/pp.collect_selected_members
 create mode 100644 scripts/experiments/c2sm/mch_tests.yml

diff --git a/run/checksuite.clm/clmexp.ICON_CLM b/run/checksuite.clm/clmexp.ICON_CLM
index a462d9bef0..8cd3114188 100644
--- a/run/checksuite.clm/clmexp.ICON_CLM
+++ b/run/checksuite.clm/clmexp.ICON_CLM
@@ -209,7 +209,7 @@ cat > NAMELIST_${EXPID} << EOF
   output_filename              = '${EXPID}_out01'
   filename_format              = '<output_filename>_<datetime2>'
   operation                    = ""
-  ml_varlist                   = 'alb_si','fr_seaice','t_g','aod_550nm' ! reduced list for buildbot
+  ml_varlist                   = 'alb_si','fr_seaice','t_g','aod_550nm','hpbl' ! reduced list for buildbot
   output_grid                  =  .TRUE.
 !	 stream_partitions_ml         =  2
 /
diff --git a/run/exp.c2sm_clm_r13b03_seaice b/run/exp.c2sm_clm_r13b03_seaice
index 4f4d6416fc..82c3c311e6 100644
--- a/run/exp.c2sm_clm_r13b03_seaice
+++ b/run/exp.c2sm_clm_r13b03_seaice
@@ -431,7 +431,7 @@ cat > ${basedir}/run/${atmo_namelist} << EOF
   'ddt_temp_pconv','ddt_u_turb','ddt_u_sso','ddt_u_pconv','ddt_v_turb','ddt_v_sso',
   'ddt_qv_turb','ddt_qc_turb','ddt_qv_conv','ddt_qc_conv','ddt_tke','ddt_tke_pconv','ddt_tke_hsh','qv_s',
   'runoff_g','plantevap','t_snow','rho_snow','h_snow','freshsnow','ddt_vn_adv','ddt_vn_pgr','exner',
-  'h_ice','t_ice','alb_si'
+  'h_ice','t_ice','alb_si','hpbl'
 /
 
 ! radiation_nml: radiation scheme ---------------------------------------------
diff --git a/run/tolerance/hashes/balfrin_cpu_nvidia b/run/tolerance/hashes/balfrin_cpu_nvidia
index 0f888f4633..d46e5cc71f 100644
--- a/run/tolerance/hashes/balfrin_cpu_nvidia
+++ b/run/tolerance/hashes/balfrin_cpu_nvidia
@@ -4,21 +4,20 @@
 icon_data_rootFolder: /scratch/mch/jenkins/icon/pool/data/ICON
 builder: balfrin_cpu_nvidia
 # The list below maps each experiment to its current experiment_hash
-"c2sm_clm_r13b03_seaice": 0e637033c7d2f00f83e1ca8d77367fbb1535f009
-"dwd_run_ICON_09_R2B4N5_EPS": 46a55885f52fc04e76038e717d451985f99aeb3a
-"mch_ch_lowres": 42647448335af146c69e6d3d39de5a75f45d00c0
+"c2sm_clm_r13b03_seaice": 5e90302839fb503bbddee997a0d74042b42a80d7
+"mch_ch_lowres": fa586307a864e27c983a6930624a8945126aef97
 "mch_ch_r04b09_dace": f9a89c3a58593808d6d1c831826978d30b7e9072
-"mch_icon-ch1_small": 4fc448b0c06a291afd59c7f46517c776e878382f
-"mch_icon-ch2_small": a0ba460c747d1bf0966bb8d09ec0dcedea594e94
-"mch_kenda-ch1_dev2_small": 3724e9fc234ef18e8df7d1c3a5c52a159ebbd4a4
-"mch_kenda-ch1_dev_small": 7e03087162564ac7ddf9fe844436ba3c22c431c9
-"mch_kenda-ch1_small": 8b35a55203f5100fe364886801c79c2df689ddd3
-"mch_opr_r04b07": f920ef95153118f55169a18e431be20845f24047
-"mch_opr_r04b07_lhn_00": 197f409bcdd22389118f4e1690be6cce4964f8da
-"mch_opr_r04b07_lhn_12_emvorado": a731b21cb4f850e81e740915dfcdbbf475859f46
-"mch_opr_r04b07_nest": 6b0cad845573d9838edb4ed493acff6c50de4eac
-"mch_opr_r04b07_sstice_inst": e9d23760ce396b8b526718d1b811bc79debb911f
-"mch_opr_r19b07_lpi": 8b07776a2976be69a9b44352b9fdc6ad8af32103
-"mch_opr_r19b07_midnight": 7f7a5d8991caf3a4d673e962dd4cea00fd417415
-"mch_opr_r19b07_turb": fde1eb0b2083eb1a8a4c48e5da9fa3e86c512a18
-"mch_pollen_test": f2e9c55626dadf3e83802f8d22d46697bd46286c
+"mch_icon-ch1_small": a8feb093cc3eb7a549d04ddab2024be8dc583695
+"mch_icon-ch2_small": 63085b0de00828999cc9fd99e8ae11b75c1c76af
+"mch_kenda-ch1_dev2_small": 10874495ad2f486a76677f6d542b8fdc13a4d237
+"mch_kenda-ch1_dev_small": de60838c35b794ee6c4f69fb4b6b96f17f70b5d6
+"mch_kenda-ch1_small": c9c633ed825f87b9bde8abc45f4bbd3a54b8bc09
+"mch_opr_r04b07": 174c502ef9b15a5d725f74690a820ea58e3234a7
+"mch_opr_r04b07_lhn_00": fa2ebc083ae7c0e98dc040cf3ee5910e10c351a7
+"mch_opr_r04b07_lhn_12_emvorado": 6d7521e484dd4cb91d392a075ff29cce755f86bd
+"mch_opr_r04b07_nest": c661c73ba3330d8a214c9623feb873356d790ecc
+"mch_opr_r04b07_sstice_inst": 9339f702e481442b1881c4a73a6d20eb3541e438
+"mch_opr_r19b07_lpi": 0fcfd0f6dbed76ffc13a8118426e5de96639edbf
+"mch_opr_r19b07_midnight": bf790f3bb36471981e17c947c33b8fa209a89e23
+"mch_opr_r19b07_turb": 3a34fa17db63e74c3b3bbba1a849daea8a72ee58
+"mch_pollen_test": fa0db7ad6c5ed86993f40303896ba89bb770f698
diff --git a/run/tolerance/hashes/balfrin_cpu_nvidia_mixed b/run/tolerance/hashes/balfrin_cpu_nvidia_mixed
index f7ed4705cb..caa6077eb2 100644
--- a/run/tolerance/hashes/balfrin_cpu_nvidia_mixed
+++ b/run/tolerance/hashes/balfrin_cpu_nvidia_mixed
@@ -4,17 +4,17 @@
 icon_data_rootFolder: /scratch/mch/jenkins/icon/pool/data/ICON
 builder: balfrin_cpu_nvidia_mixed
 # The list below maps each experiment to its current experiment_hash
-"c2sm_clm_r13b03_seaice": c46149b2051f7cbde4eb33809398221a430c4788
-"mch_ch_lowres": d419a94fdb6e1353e16af48e85290d7a5d19be9e
-"mch_icon-ch1_small": 17e5e726d64b03a37564db2977567ebea45ac278
-"mch_icon-ch2_small": 6a673dea1dfef6f347438371a2859d08c1774440
-"mch_kenda-ch1_small": 1227aab850827c3bf115b43c62887db1310f9a6f
-"mch_opr_r04b07": e7b4f1da538ec5c2a4670a31d42884728a127ded
-"mch_opr_r04b07_lhn_00": 59d9532e83cc1a2338cc170e98f4e56cf6d392f3
-"mch_opr_r04b07_lhn_12_emvorado": 8fcee2531ef205166686bfd6c91ae84584fffe32
-"mch_opr_r04b07_nest": 7112c2b7c7c8ce7dd67bf2bac42234dcc59a65b9
-"mch_opr_r04b07_sstice_inst": 171821f3235cb660d0cb202f31ce42f32a3f82e5
-"mch_opr_r19b07_lpi": 4fea14f580da4f98368e334db9c066c0d65d9872
-"mch_opr_r19b07_midnight": e0affabd714edef4815b89e049450bab5284eeee
-"mch_opr_r19b07_turb": 541cbaf5a8548d74f335abe00b3858a95968f51a
-"mch_pollen_test": b530b762ce22984d8f9e3628671b17619c48cfe8
+"c2sm_clm_r13b03_seaice": 0044fa8308dfd14933947cf929baae2207db7bc8
+"mch_ch_lowres": 908b533ec19a862ed492f32140be771b61f10c10
+"mch_icon-ch1_small": 7d691af6dbcaeb24a0523ffcdd9a5efb7da212b6
+"mch_icon-ch2_small": a7b843a5932341b168da5f7c3491dea1c10fcf64
+"mch_kenda-ch1_small": a13a6460ab656eecf8bb20929e3fcd990d35da29
+"mch_opr_r04b07": ae70b425b411d2bbae7af55546dbc3fe1a08a8a0
+"mch_opr_r04b07_lhn_00": 70d0ce788ba73ae30fc8902ac8315a5d06b05d6c
+"mch_opr_r04b07_lhn_12_emvorado": 3ecf290c663b1d91ecb057b890a04125a3e4db67
+"mch_opr_r04b07_nest": 59306497de70a77e472c45a529eef8c6fad246e2
+"mch_opr_r04b07_sstice_inst": 028149427c74159f76a372c89353fccb561aff6d
+"mch_opr_r19b07_lpi": 32b4bbbea0d03be8a51e1b0ef2e22cf0e3a17d7a
+"mch_opr_r19b07_midnight": c67ddc1291d2ab669ca0bc290dd5dbeeabd77e08
+"mch_opr_r19b07_turb": c6e1d37341c0e37694e3ac4d23b2ccddee2ab9ca
+"mch_pollen_test": 3c959a9199669b43abb1366a1f15e8b768f7a8f0
diff --git a/run/tolerance/pp.collect_selected_members b/run/tolerance/pp.collect_selected_members
new file mode 100644
index 0000000000..96986c2f5f
--- /dev/null
+++ b/run/tolerance/pp.collect_selected_members
@@ -0,0 +1,61 @@
+#!/bin/bash
+
+# ICON
+#
+# ------------------------------------------
+# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
+# Contact information: icon-model.org
+# See AUTHORS.TXT for a list of authors
+# See LICENSES/ for license information
+# SPDX-License-Identifier: BSD-3-Clause
+# ------------------------------------------
+
+set -euo pipefail
+
+# This script runs the member selection for probtest
+
+
+# Variables passed via list_probtest -> addexp/runexp -> create_target_header
+#
+# tolerance_experiments : comma separated list of experiments
+# basedir : the directory where ICON has been build in.
+
+# make sure the resulting data and directories are global readable
+umask 0022
+
+# generating iterable array of builders
+IFS=',' read -ra experiments <<< "${tolerance_experiments}"
+
+# Sort experiments in alphabetic order
+sorted_experiments=($(for exp in "${experiments[@]}"; do echo $exp; done | sort))
+
+# Please don't change these path/file names. They are used by buildbot.
+yaml_path=scripts/experiments
+
+# Update the selected members in the corresponding file 
+echo ""
+echo "Please update or add the following lines with the selected members and the "
+echo "tolerance factor (if not the default value of 5) to the corresponding experiment "
+echo "in '${yaml_path}/<group>/<test-type>_tests.yml'."
+echo "If any of the experiments is not yet in the list, please add it in alphabetical order."
+echo ""
+for exp in "${sorted_experiments[@]}"; do
+    if [ -f "${basedir}/${exp}_selected_members.csv" ]; then
+        selected_members=$(sed -n '1p' "${basedir}/${exp}_selected_members.csv")
+        export_factor=$(sed -n '2p' "${basedir}/${exp}_selected_members.csv")
+        # Extract the factor from the second line
+        factor=$(echo "$export_factor" | grep -oE '[0-9]+')
+        echo "- name: ${exp}"
+        echo "  ensemble_num:"
+        echo "    - ${BB_NAME}: $selected_members"
+        echo "  tolerance_factor:"
+        echo "    - ${BB_SYSTEM}: $factor"
+        echo ""
+    else
+        echo "WARNING: The member selection failed for ${exp}."
+        echo ""
+    fi
+done
+
+# exit 0 on success (and don't execute any appended scripts)
+exit 0
diff --git a/scripts/experiments/c2sm/mch_tests.yml b/scripts/experiments/c2sm/mch_tests.yml
new file mode 100644
index 0000000000..aec987831c
--- /dev/null
+++ b/scripts/experiments/c2sm/mch_tests.yml
@@ -0,0 +1,221 @@
+# ICON
+#
+# ------------------------------------------
+# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
+# Contact information: icon-model.org
+# See AUTHORS.TXT for a list of authors
+# See LICENSES/ for license information
+# SPDX-License-Identifier: BSD-3-Clause
+# ------------------------------------------
+
+tests:
+  - name: mch_ch_lowres
+    tags: ['atm', 'merge2rc','probtest']
+    machines:
+      - name: balfrin
+    refgen: ['balfrin_cpu_nvidia', 'balfrin_cpu_nvidia_mixed','alps_mch_test_cpu']
+    checksuite_modes:
+      - balfrin: 't'
+    ensemble_num:
+      - balfrin_cpu_nvidia: [25,12,13,20,19]
+      - balfrin_cpu_nvidia_mixed: [1,30,35,44,13,14]
+  - name: mch_ch_r04b09_dace
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+        include_only: ['balfrin_cpu_nvidia', 'balfrin_gpu_nvidia']
+    refgen: ['balfrin_cpu_nvidia']
+    checksuite_modes:
+      - balfrin: 't'
+    ensemble_num: # Use 1 ensemble member as the tolerances are 0
+      - balfrin_cpu_nvidia: [1]
+  - name: mch_ch_r04b09_dace_synsat
+    tags: ['atm','merge2rc','probtest']
+    checksuite_modes:
+        - horeka: 't'
+    machines:
+      - name: horeka
+        include_only: ['horeka_cpu_nvhpc','horeka_gpu_nvhpc']
+    refgen: ['horeka_cpu_nvhpc']
+    ensemble_num:
+      - horeka_cpu_nvhpc: [25,12,13,20,19]
+  - name: mch_kenda-ch1_small
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+    refgen: ['balfrin_cpu_nvidia','balfrin_cpu_nvidia_mixed','alps_mch_test_cpu']
+    checksuite_modes:
+      - balfrin: 'tc'
+    ensemble_num:
+      - balfrin_cpu_nvidia: [11,9,44,46,13]
+      - balfrin_cpu_nvidia_mixed: [26,4,15,50,47,46]
+    tolerance_factor:
+      - balfrin: 5
+  - name: mch_pollen_test
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+    refgen: ['balfrin_cpu_nvidia','balfrin_cpu_nvidia_mixed','alps_mch_test_cpu']
+    checksuite_modes:
+      - balfrin: 't'
+    ensemble_num:
+      - balfrin_cpu_nvidia: [25,12,13,20,19]
+      - balfrin_cpu_nvidia_mixed: [18,7,49,45,28]
+  - name: mch_icon-ch1
+    tags: ['mch-opr']
+    machines:
+      - name: balfrin
+        include_only: ['balfrin_gpu_nvidia_mixed', 'alps_mch_test_gpu']
+        runflags: ['cpu_time=02:00:00']
+    checksuite_modes:
+      - balfrin: 'pg'
+  - name: mch_icon-ch1_small
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+    refgen: ['balfrin_cpu_nvidia','balfrin_cpu_nvidia_mixed','alps_mch_test_cpu']
+    checksuite_modes:
+      - balfrin: 't'
+    ensemble_num:
+      - balfrin_cpu_nvidia: [50,21,39,38,15]
+      - balfrin_cpu_nvidia_mixed: [50,21,40,39,16]
+  - name: mch_icon-ch2
+    tags: ['mch-opr']
+    machines:
+      - name: balfrin
+        include_only: ['balfrin_gpu_nvidia_mixed', 'alps_mch_test_gpu']
+        runflags: ['cpu_time=01:20:00']
+    checksuite_modes:
+      - balfrin: 'p'
+  - name: mch_icon-ch2_small
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+    refgen: ['balfrin_cpu_nvidia','balfrin_cpu_nvidia_mixed','alps_mch_test_cpu']
+    checksuite_modes:
+      - balfrin: 'tg'
+    ensemble_num:
+      - balfrin_cpu_nvidia: [25,46,27,32,4]
+      - balfrin_cpu_nvidia_mixed: [36,34,1,26,11,22,16,13]
+  - name: mch_kenda-ch1
+    tags: ['mch-opr']
+    machines:
+      - name: balfrin
+        include_only: ['balfrin_gpu_nvidia_mixed', 'alps_mch_test_gpu']
+        runflags: ['cpu_time=00:20:00']
+    checksuite_modes:
+      - balfrin: 'p'
+  - name: mch_opr_r04b07
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+    refgen: ['balfrin_cpu_nvidia','balfrin_cpu_nvidia_mixed','alps_mch_test_cpu']
+    checksuite_modes:
+      - balfrin: 't'
+    ensemble_num:
+      - balfrin_cpu_nvidia: [18,48,43,37,32,25]
+      - balfrin_cpu_nvidia_mixed: [32,11,18,20,24,46,47]
+  - name: mch_opr_r04b07_lhn_00
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+    refgen: ['balfrin_cpu_nvidia','balfrin_cpu_nvidia_mixed','alps_mch_test_cpu']
+    checksuite_modes:
+      - balfrin: 't'
+    ensemble_num:
+      - balfrin_cpu_nvidia: [19,43,31,1,25,33,20,4,7,2,50,5,46,30,3]
+      - balfrin_cpu_nvidia_mixed: [21,27,13,37,24,50,49,12,11]
+    tolerance_factor:
+      - balfrin: 10
+  - name: mch_opr_r04b07_lhn_12_emvorado
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+    checksuite_modes:
+      - balfrin: 't'
+    refgen: ['balfrin_cpu_nvidia','balfrin_cpu_nvidia_mixed','alps_mch_test_cpu']
+    ensemble_num:
+      - balfrin_cpu_nvidia: [36,2,28,40,25,27,18,34,33,47,9]
+      - balfrin_cpu_nvidia_mixed: [13,42,47,24,11,28,45,1,8,17,3,49,39,20,46]
+    tolerance_factor:
+      - balfrin: 10
+  - name: mch_opr_r04b07_nest
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+    refgen: ['balfrin_cpu_nvidia','balfrin_cpu_nvidia_mixed','alps_mch_test_cpu']
+    checksuite_modes:
+      - balfrin: 'rt'
+    ensemble_num:
+      - balfrin_cpu_nvidia: [17,9,49,46,28]
+      - balfrin_cpu_nvidia_mixed: [38,22,48,19,37]
+    tolerance_factor:
+      - balfrin: 5
+  - name: mch_opr_r04b07_performance
+    tags: ['atm','merge2rc']
+    machines:
+      - name: balfrin
+        include_only: ['balfrin_gpu_nvidia_mixed']
+    checksuite_modes:
+      - balfrin: 'p'
+  - name: mch_opr_r04b07_sstice_inst
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+    refgen: ['balfrin_cpu_nvidia', 'balfrin_cpu_nvidia_mixed', 'alps_mch_test_cpu']
+    checksuite_modes:
+      - balfrin: 't'
+    ensemble_num:
+      - balfrin_cpu_nvidia: [25,12,13,20,19]
+      - balfrin_cpu_nvidia_mixed: [50,20,40,39,15]
+  - name: mch_opr_r19b07_lpi
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+    refgen: ['balfrin_cpu_nvidia','balfrin_cpu_nvidia_mixed','alps_mch_test_cpu']
+    checksuite_modes:
+      - balfrin: 't'
+    ensemble_num:
+      - balfrin_cpu_nvidia: [25,42,14,45,47,46,23,39,17]
+      - balfrin_cpu_nvidia_mixed: [14,48,33,45,35,31,39,6,8,13,38,7,21,32]
+  - name: mch_opr_r19b07_midnight
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+        include_only: ['balfrin_cpu_nvidia', 'balfrin_cpu_nvidia_mixed', 'alps_mch_test_cpu']
+    refgen: ['balfrin_cpu_nvidia', 'balfrin_cpu_nvidia_mixed', 'alps_mch_test_cpu']
+    checksuite_modes:
+      - balfrin: 't'
+    ensemble_num:
+      - balfrin_cpu_nvidia: [29,46,32,35,4]
+      - balfrin_cpu_nvidia_mixed: [26,39,25,5,35,6,3,47]
+  - name: mch_opr_r19b07_turb
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+    checksuite_modes:
+      - balfrin: 't'
+    refgen: ['balfrin_cpu_nvidia', 'balfrin_cpu_nvidia_mixed', 'alps_mch_test_cpu']
+    ensemble_num:
+      - balfrin_cpu_nvidia: [20,9,49,46,28]
+      - balfrin_cpu_nvidia_mixed: [17,38,7,24,23,21,50]
+  - name: mch_kenda-ch1_dev_small
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+        include_only: ['balfrin_cpu_nvidia', 'balfrin_gpu', 'alps_mch_test_cpu', 'alps_mch_test_gpu']
+    refgen: ['balfrin_cpu_nvidia', 'alps_mch_test_cpu']
+    checksuite_modes:
+      - balfrin: 'tc'
+    ensemble_num:
+      - balfrin_cpu_nvidia: [18,46,37,23,28]
+  - name: mch_kenda-ch1_dev2_small
+    tags: ['atm','merge2rc','probtest']
+    machines:
+      - name: balfrin
+        include_only: ['balfrin_cpu_nvidia', 'balfrin_gpu', 'alps_mch_test_cpu', 'alps_mch_test_gpu']
+    refgen: ['balfrin_cpu_nvidia', 'alps_mch_test_cpu']
+    checksuite_modes:
+      - balfrin: 'tc'
+    ensemble_num:
+      - balfrin_cpu_nvidia: [26,28,48,29,46]
diff --git a/src/atm_phy_nwp/mo_nwp_diagnosis.f90 b/src/atm_phy_nwp/mo_nwp_diagnosis.f90
index 3e5a408a1c..7f9e08d108 100644
--- a/src/atm_phy_nwp/mo_nwp_diagnosis.f90
+++ b/src/atm_phy_nwp/mo_nwp_diagnosis.f90
@@ -1432,8 +1432,8 @@ CONTAINS
 
     IF (ltimer) CALL timer_start(timer_nh_diagnostics)
 
-    !$ACC DATA CREATE(ztp, zqp, mlab) PRESENT(p_metrics, pt_prog_rcf, pt_diag) &
-    !$ACC   PRESENT(lnd_diag, p_prog_wtr_now, ext_data, prm_diag) IF(lzacc)
+    !$ACC DATA CREATE(ztp, zqp, mlab, ri_no) PRESENT(p_metrics, pt_prog_rcf, pt_diag) &
+    !$ACC   PRESENT(lnd_diag, p_prog_wtr_now, ext_data, pt_prog, prm_diag) IF(lzacc)
 
     i_nchdom  = MAX(1,pt_patch%n_childdom)
     jg        = pt_patch%id
@@ -1645,18 +1645,16 @@ CONTAINS
       !  atm_phy_les/mo_turbulent_diagnostic.f90
 
        IF (var_in_output(jg)%hpbl) THEN
-
-#ifdef _OPENACC
-         CALL finish(routine, 'PBL diagnosis not ported to GPU.')
-#endif
-
+        !$ACC PARALLEL DEFAULT(PRESENT) ASYNC(1) IF(lzacc)
+        !$ACC LOOP GANG(STATIC: 1) VECTOR
         DO jc = i_startidx, i_endidx
          ri_no(jc,nlev) = missing_value_hpbl
         ENDDO
 
-
+        !$ACC LOOP SEQ
         DO jk = nlev-1, kstart_moist, -1
-         DO jc = i_startidx, i_endidx
+          !$ACC LOOP GANG(STATIC: 1) VECTOR
+          DO jc = i_startidx, i_endidx
 
             ri_no(jc,jk) = (grav/pt_prog%theta_v(jc,nlev,jb)) * &
               &      ( pt_prog%theta_v(jc,jk,jb)-pt_prog%theta_v(jc,nlev,jb) ) *  &
@@ -1674,7 +1672,7 @@ CONTAINS
 
           END DO
         END DO
-
+        !$ACC END PARALLEL
       ENDIF
 
 
diff --git a/src/atm_phy_nwp/mo_nwp_phy_state.f90 b/src/atm_phy_nwp/mo_nwp_phy_state.f90
index 3fc7fef192..99b1b0028d 100644
--- a/src/atm_phy_nwp/mo_nwp_phy_state.f90
+++ b/src/atm_phy_nwp/mo_nwp_phy_state.f90
@@ -1253,18 +1253,13 @@ SUBROUTINE new_nwp_phy_diag_list( k_jg, klev, klevp1, kblks,    &
 
     IF ( var_in_output%hpbl ) THEN
 
-#ifdef _OPENACC
-      CALL finish ('mo_nwp_phy_state:new_nwp_phy_diag_list', &
-        'hpbl calculation not ported to GPU')
-#endif
-
       cf_desc    = t_cf_var('hpbl', 'm', 'boundary layer height above sea level', &
            &                datatype_flt)
       grib2_desc = grib2_var(0, 3, 18, ibits, GRID_UNSTRUCTURED, GRID_CELL)
       CALL add_var( diag_list, 'hpbl', diag%hpbl,                             &
         & GRID_UNSTRUCTURED_CELL, ZA_CLOUD_TOP, cf_desc, grib2_desc,            &
-        & ldims=shape2d, lrestart=.FALSE. )
-
+        & ldims=shape2d, lrestart=.FALSE.,lopenacc=.TRUE.  )
+      __acc_attach(diag%hpbl)
     ENDIF
 
 
-- 
2.34.1

